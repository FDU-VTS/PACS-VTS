{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createHTMLImage, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\n/**\n * A comment can contain an image or avatar.\n */\n\nfunction CommentAvatar(props) {\n  var className = props.className,\n      src = props.src;\n  var classes = cx('avatar', className);\n  var rest = getUnhandledProps(CommentAvatar, props);\n  var ElementType = getElementType(CommentAvatar, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createHTMLImage(src));\n}\n\nCommentAvatar.handledProps = ['as', 'className', 'src'];\nCommentAvatar._meta = {\n  name: 'CommentAvatar',\n  parent: 'Comment',\n  type: META.TYPES.VIEW\n};\nCommentAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Specifies the URL of the image. */\n  src: PropTypes.string\n} : {};\nexport default CommentAvatar;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/views/Comment/CommentAvatar.js"],"names":["_extends","cx","PropTypes","React","createHTMLImage","customPropTypes","getElementType","getUnhandledProps","META","CommentAvatar","props","className","src","classes","rest","ElementType","createElement","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","string"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,cAA3C,EAA2DC,iBAA3D,EAA8EC,IAA9E,QAA0F,WAA1F;AAEA;;;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACIC,GAAG,GAAGF,KAAK,CAACE,GADhB;AAGA,MAAIC,OAAO,GAAGZ,EAAE,CAAC,QAAD,EAAWU,SAAX,CAAhB;AACA,MAAIG,IAAI,GAAGP,iBAAiB,CAACE,aAAD,EAAgBC,KAAhB,CAA5B;AACA,MAAIK,WAAW,GAAGT,cAAc,CAACG,aAAD,EAAgBC,KAAhB,CAAhC;AAEA,SAAOP,KAAK,CAACa,aAAN,CACLD,WADK,EAELf,QAAQ,CAAC,EAAD,EAAKc,IAAL,EAAW;AAAEH,IAAAA,SAAS,EAAEE;AAAb,GAAX,CAFH,EAGLT,eAAe,CAACQ,GAAD,CAHV,CAAP;AAKD;;AAEDH,aAAa,CAACQ,YAAd,GAA6B,CAAC,IAAD,EAAO,WAAP,EAAoB,KAApB,CAA7B;AACAR,aAAa,CAACS,KAAd,GAAsB;AACpBC,EAAAA,IAAI,EAAE,eADc;AAEpBC,EAAAA,MAAM,EAAE,SAFY;AAGpBC,EAAAA,IAAI,EAAEb,IAAI,CAACc,KAAL,CAAWC;AAHG,CAAtB;AAMAd,aAAa,CAACe,SAAd,GAA0BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAChE;AACAC,EAAAA,EAAE,EAAEvB,eAAe,CAACuB,EAF4C;;AAIhE;AACAjB,EAAAA,SAAS,EAAET,SAAS,CAAC2B,MAL2C;;AAOhE;AACAjB,EAAAA,GAAG,EAAEV,SAAS,CAAC2B;AARiD,CAAxC,GAStB,EATJ;AAWA,eAAepB,aAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { createHTMLImage, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\n\n/**\n * A comment can contain an image or avatar.\n */\nfunction CommentAvatar(props) {\n  var className = props.className,\n      src = props.src;\n\n  var classes = cx('avatar', className);\n  var rest = getUnhandledProps(CommentAvatar, props);\n  var ElementType = getElementType(CommentAvatar, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    createHTMLImage(src)\n  );\n}\n\nCommentAvatar.handledProps = ['as', 'className', 'src'];\nCommentAvatar._meta = {\n  name: 'CommentAvatar',\n  parent: 'Comment',\n  type: META.TYPES.VIEW\n};\n\nCommentAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Specifies the URL of the image. */\n  src: PropTypes.string\n} : {};\n\nexport default CommentAvatar;"]},"metadata":{},"sourceType":"module"}