{"ast":null,"code":"import _includes from 'lodash/includes';\nimport _forEach from 'lodash/forEach';\nexport var htmlInputAttrs = [// REACT\n'selected', 'defaultValue', 'defaultChecked', // LIMITED HTML PROPS\n'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value'];\nexport var htmlInputEvents = [// EVENTS\n// keyboard\n'onKeyDown', 'onKeyPress', 'onKeyUp', // focus\n'onFocus', 'onBlur', // form\n'onChange', 'onInput', // mouse\n'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', // selection\n'onSelect', // touch\n'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];\nexport var htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);\n/**\n * Returns an array of objects consisting of: props of html input element and rest.\n * @param {object} props A ReactElement props object\n * @param {Object} [options={}]\n * @param {Array} [options.htmlProps] An array of html input props\n * @param {boolean} [options.includeAria] Includes all input props that starts with \"aria-\"\n * @returns {[{}, {}]} An array of objects\n */\n\nexport var partitionHTMLProps = function partitionHTMLProps(props) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$htmlProps = options.htmlProps,\n      htmlProps = _options$htmlProps === undefined ? htmlInputProps : _options$htmlProps,\n      _options$includeAria = options.includeAria,\n      includeAria = _options$includeAria === undefined ? true : _options$includeAria;\n  var inputProps = {};\n  var rest = {};\n\n  _forEach(props, function (val, prop) {\n    var possibleAria = includeAria && (/^aria-.*$/.test(prop) || prop === 'role');\n    var target = _includes(htmlProps, prop) || possibleAria ? inputProps : rest;\n    target[prop] = val;\n  });\n\n  return [inputProps, rest];\n};","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/lib/htmlPropsUtils.js"],"names":["_includes","_forEach","htmlInputAttrs","htmlInputEvents","htmlInputProps","concat","partitionHTMLProps","props","options","arguments","length","undefined","_options$htmlProps","htmlProps","_options$includeAria","includeAria","inputProps","rest","val","prop","possibleAria","test","target"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,OAAO,IAAIC,cAAc,GAAG,CAC5B;AACA,UAF4B,EAEhB,cAFgB,EAEA,gBAFA,EAI5B;AACA,gBAL4B,EAKV,cALU,EAKM,aALN,EAKqB,WALrB,EAKkC,SALlC,EAK6C,UAL7C,EAKyD,MALzD,EAKiE,IALjE,EAKuE,MALvE,EAK+E,KAL/E,EAKsF,WALtF,EAKmG,KALnG,EAK0G,WAL1G,EAKuH,UALvH,EAKmI,MALnI,EAK2I,SAL3I,EAKsJ,aALtJ,EAKqK,UALrK,EAKiL,UALjL,EAK6L,MAL7L,EAKqM,MALrM,EAK6M,OAL7M,CAArB;AAOP,OAAO,IAAIC,eAAe,GAAG,CAC7B;AACA;AACA,WAH6B,EAGhB,YAHgB,EAGF,SAHE,EAK7B;AACA,SAN6B,EAMlB,QANkB,EAQ7B;AACA,UAT6B,EASjB,SATiB,EAW7B;AACA,SAZ6B,EAYlB,eAZkB,EAYD,QAZC,EAYS,WAZT,EAYsB,aAZtB,EAYqC,YAZrC,EAYmD,aAZnD,EAYkE,YAZlE,EAYgF,aAZhF,EAY+F,QAZ/F,EAYyG,aAZzG,EAYwH,cAZxH,EAYwI,cAZxI,EAYwJ,aAZxJ,EAYuK,YAZvK,EAYqL,aAZrL,EAYoM,WAZpM,EAc7B;AACA,UAf6B,EAiB7B;AACA,eAlB6B,EAkBZ,YAlBY,EAkBE,aAlBF,EAkBiB,cAlBjB,CAAtB;AAoBP,OAAO,IAAIC,cAAc,GAAG,GAAGC,MAAH,CAAUH,cAAV,EAA0BC,eAA1B,CAArB;AAEP;;;;;;;;;AAQA,OAAO,IAAIG,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACjE,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIG,kBAAkB,GAAGJ,OAAO,CAACK,SAAjC;AAAA,MACIA,SAAS,GAAGD,kBAAkB,KAAKD,SAAvB,GAAmCP,cAAnC,GAAoDQ,kBADpE;AAAA,MAEIE,oBAAoB,GAAGN,OAAO,CAACO,WAFnC;AAAA,MAGIA,WAAW,GAAGD,oBAAoB,KAAKH,SAAzB,GAAqC,IAArC,GAA4CG,oBAH9D;AAKA,MAAIE,UAAU,GAAG,EAAjB;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEAhB,EAAAA,QAAQ,CAACM,KAAD,EAAQ,UAAUW,GAAV,EAAeC,IAAf,EAAqB;AACnC,QAAIC,YAAY,GAAGL,WAAW,KAAK,YAAYM,IAAZ,CAAiBF,IAAjB,KAA0BA,IAAI,KAAK,MAAxC,CAA9B;AACA,QAAIG,MAAM,GAAGtB,SAAS,CAACa,SAAD,EAAYM,IAAZ,CAAT,IAA8BC,YAA9B,GAA6CJ,UAA7C,GAA0DC,IAAvE;AACAK,IAAAA,MAAM,CAACH,IAAD,CAAN,GAAeD,GAAf;AACD,GAJO,CAAR;;AAMA,SAAO,CAACF,UAAD,EAAaC,IAAb,CAAP;AACD,CAjBM","sourcesContent":["import _includes from 'lodash/includes';\nimport _forEach from 'lodash/forEach';\n\n\nexport var htmlInputAttrs = [\n// REACT\n'selected', 'defaultValue', 'defaultChecked',\n\n// LIMITED HTML PROPS\n'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value'];\n\nexport var htmlInputEvents = [\n// EVENTS\n// keyboard\n'onKeyDown', 'onKeyPress', 'onKeyUp',\n\n// focus\n'onFocus', 'onBlur',\n\n// form\n'onChange', 'onInput',\n\n// mouse\n'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp',\n\n// selection\n'onSelect',\n\n// touch\n'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];\n\nexport var htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);\n\n/**\n * Returns an array of objects consisting of: props of html input element and rest.\n * @param {object} props A ReactElement props object\n * @param {Object} [options={}]\n * @param {Array} [options.htmlProps] An array of html input props\n * @param {boolean} [options.includeAria] Includes all input props that starts with \"aria-\"\n * @returns {[{}, {}]} An array of objects\n */\nexport var partitionHTMLProps = function partitionHTMLProps(props) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$htmlProps = options.htmlProps,\n      htmlProps = _options$htmlProps === undefined ? htmlInputProps : _options$htmlProps,\n      _options$includeAria = options.includeAria,\n      includeAria = _options$includeAria === undefined ? true : _options$includeAria;\n\n  var inputProps = {};\n  var rest = {};\n\n  _forEach(props, function (val, prop) {\n    var possibleAria = includeAria && (/^aria-.*$/.test(prop) || prop === 'role');\n    var target = _includes(htmlProps, prop) || possibleAria ? inputProps : rest;\n    target[prop] = val;\n  });\n\n  return [inputProps, rest];\n};"]},"metadata":{},"sourceType":"module"}