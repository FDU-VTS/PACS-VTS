{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\n/**\n * A menu item may include a header or may itself be a header.\n */\n\nfunction MenuHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MenuHeader, props);\n  var ElementType = getElementType(MenuHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMenuHeader.handledProps = ['as', 'children', 'className', 'content'];\nMenuHeader._meta = {\n  name: 'MenuHeader',\n  type: META.TYPES.COLLECTION,\n  parent: 'Menu'\n};\nMenuHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MenuHeader;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/collections/Menu/MenuHeader.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","MenuHeader","props","children","className","content","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","type","TYPES","COLLECTION","parent","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,QAAwF,WAAxF;AAEA;;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAIA,MAAIC,OAAO,GAAGb,EAAE,CAAC,QAAD,EAAWW,SAAX,CAAhB;AACA,MAAIG,IAAI,GAAGR,iBAAiB,CAACE,UAAD,EAAaC,KAAb,CAA5B;AACA,MAAIM,WAAW,GAAGV,cAAc,CAACG,UAAD,EAAaC,KAAb,CAAhC;AAEA,SAAOP,KAAK,CAACc,aAAN,CACLD,WADK,EAELhB,QAAQ,CAAC,EAAD,EAAKe,IAAL,EAAW;AAAEH,IAAAA,SAAS,EAAEE;AAAb,GAAX,CAFH,EAGLV,aAAa,CAACc,KAAd,CAAoBP,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDF,UAAU,CAACU,YAAX,GAA0B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,CAA1B;AACAV,UAAU,CAACW,KAAX,GAAmB;AACjBC,EAAAA,IAAI,EAAE,YADW;AAEjBC,EAAAA,IAAI,EAAEd,IAAI,CAACe,KAAL,CAAWC,UAFA;AAGjBC,EAAAA,MAAM,EAAE;AAHS,CAAnB;AAMAhB,UAAU,CAACiB,SAAX,GAAuBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC7D;AACAC,EAAAA,EAAE,EAAEzB,eAAe,CAACyB,EAFyC;;AAI7D;AACAnB,EAAAA,QAAQ,EAAET,SAAS,CAAC6B,IALyC;;AAO7D;AACAnB,EAAAA,SAAS,EAAEV,SAAS,CAAC8B,MARwC;;AAU7D;AACAnB,EAAAA,OAAO,EAAER,eAAe,CAAC4B;AAXoC,CAAxC,GAYnB,EAZJ;AAcA,eAAexB,UAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\n\n/**\n * A menu item may include a header or may itself be a header.\n */\nfunction MenuHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MenuHeader, props);\n  var ElementType = getElementType(MenuHeader, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nMenuHeader.handledProps = ['as', 'children', 'className', 'content'];\nMenuHeader._meta = {\n  name: 'MenuHeader',\n  type: META.TYPES.COLLECTION,\n  parent: 'Menu'\n};\n\nMenuHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\n\nexport default MenuHeader;"]},"metadata":{},"sourceType":"module"}