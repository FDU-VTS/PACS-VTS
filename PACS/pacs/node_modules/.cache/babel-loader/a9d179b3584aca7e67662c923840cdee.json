{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\n\nvar Cell = function Cell(_ref) {\n  var itemPrefixCls = _ref.itemPrefixCls,\n      component = _ref.component,\n      span = _ref.span,\n      className = _ref.className,\n      style = _ref.style,\n      bordered = _ref.bordered,\n      label = _ref.label,\n      content = _ref.content,\n      colon = _ref.colon;\n  var Component = component;\n\n  if (bordered) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-label\"), notEmpty(label)), _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-content\"), notEmpty(content)), _classNames), className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) ? label : content);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item\"), className),\n    style: style,\n    colSpan: span\n  }, label && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-label\"), _defineProperty({}, \"\".concat(itemPrefixCls, \"-item-colon\"), colon))\n  }, label), content && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-content\"))\n  }, content));\n};\n\nexport default Cell;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS-VTS/PACS/pacs/node_modules/antd/es/descriptions/Cell.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","classNames","notEmpty","val","undefined","Cell","_ref","itemPrefixCls","component","span","className","style","bordered","label","content","colon","Component","_classNames","createElement","concat","colSpan"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOA,GAAG,KAAKC,SAAR,IAAqBD,GAAG,KAAK,IAApC;AACD;;AAED,IAAIE,IAAI,GAAG,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAC7B,MAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;AAAA,MACIC,SAAS,GAAGF,IAAI,CAACE,SADrB;AAAA,MAEIC,IAAI,GAAGH,IAAI,CAACG,IAFhB;AAAA,MAGIC,SAAS,GAAGJ,IAAI,CAACI,SAHrB;AAAA,MAIIC,KAAK,GAAGL,IAAI,CAACK,KAJjB;AAAA,MAKIC,QAAQ,GAAGN,IAAI,CAACM,QALpB;AAAA,MAMIC,KAAK,GAAGP,IAAI,CAACO,KANjB;AAAA,MAOIC,OAAO,GAAGR,IAAI,CAACQ,OAPnB;AAAA,MAQIC,KAAK,GAAGT,IAAI,CAACS,KARjB;AASA,MAAIC,SAAS,GAAGR,SAAhB;;AAEA,MAAII,QAAJ,EAAc;AACZ,QAAIK,WAAJ;;AAEA,WAAO,aAAajB,KAAK,CAACkB,aAAN,CAAoBF,SAApB,EAA+B;AACjDN,MAAAA,SAAS,EAAET,UAAU,EAAEgB,WAAW,GAAG,EAAd,EAAkB1B,eAAe,CAAC0B,WAAD,EAAc,GAAGE,MAAH,CAAUZ,aAAV,EAAyB,aAAzB,CAAd,EAAuDL,QAAQ,CAACW,KAAD,CAA/D,CAAjC,EAA0GtB,eAAe,CAAC0B,WAAD,EAAc,GAAGE,MAAH,CAAUZ,aAAV,EAAyB,eAAzB,CAAd,EAAyDL,QAAQ,CAACY,OAAD,CAAjE,CAAzH,EAAsMG,WAAxM,GAAsNP,SAAtN,CAD4B;AAEjDC,MAAAA,KAAK,EAAEA,KAF0C;AAGjDS,MAAAA,OAAO,EAAEX;AAHwC,KAA/B,EAIjBP,QAAQ,CAACW,KAAD,CAAR,GAAkBA,KAAlB,GAA0BC,OAJT,CAApB;AAKD;;AAED,SAAO,aAAad,KAAK,CAACkB,aAAN,CAAoBF,SAApB,EAA+B;AACjDN,IAAAA,SAAS,EAAET,UAAU,CAAC,GAAGkB,MAAH,CAAUZ,aAAV,EAAyB,OAAzB,CAAD,EAAoCG,SAApC,CAD4B;AAEjDC,IAAAA,KAAK,EAAEA,KAF0C;AAGjDS,IAAAA,OAAO,EAAEX;AAHwC,GAA/B,EAIjBI,KAAK,IAAI,aAAab,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4B;AACnDR,IAAAA,SAAS,EAAET,UAAU,CAAC,GAAGkB,MAAH,CAAUZ,aAAV,EAAyB,aAAzB,CAAD,EAA0ChB,eAAe,CAAC,EAAD,EAAK,GAAG4B,MAAH,CAAUZ,aAAV,EAAyB,aAAzB,CAAL,EAA8CQ,KAA9C,CAAzD;AAD8B,GAA5B,EAEtBF,KAFsB,CAJL,EAMTC,OAAO,IAAI,aAAad,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4B;AAC7DR,IAAAA,SAAS,EAAET,UAAU,CAAC,GAAGkB,MAAH,CAAUZ,aAAV,EAAyB,eAAzB,CAAD;AADwC,GAA5B,EAEhCO,OAFgC,CANf,CAApB;AASD,CA/BD;;AAiCA,eAAeT,IAAf","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\n\nvar Cell = function Cell(_ref) {\n  var itemPrefixCls = _ref.itemPrefixCls,\n      component = _ref.component,\n      span = _ref.span,\n      className = _ref.className,\n      style = _ref.style,\n      bordered = _ref.bordered,\n      label = _ref.label,\n      content = _ref.content,\n      colon = _ref.colon;\n  var Component = component;\n\n  if (bordered) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-label\"), notEmpty(label)), _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-content\"), notEmpty(content)), _classNames), className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) ? label : content);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item\"), className),\n    style: style,\n    colSpan: span\n  }, label && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-label\"), _defineProperty({}, \"\".concat(itemPrefixCls, \"-item-colon\"), colon))\n  }, label), content && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-content\"))\n  }, content));\n};\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}