{"ast":null,"code":"import shallowEqual from 'shallowequal';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n      generateConfig = _ref.generateConfig,\n      locale = _ref.locale;\n  return useMemo(function () {\n    if (!value) {\n      return [''];\n    }\n\n    return formatList.map(function (subFormat) {\n      return generateConfig.locale.format(locale.locale, value, subFormat);\n    });\n  }, [value, formatList], function (prev, next) {\n    return prev[0] !== next[0] || !shallowEqual(prev[1], next[1]);\n  });\n}","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS-VTS/PACS/pacs/node_modules/rc-picker/es/hooks/useValueTexts.js"],"names":["shallowEqual","useMemo","useValueTexts","value","_ref","formatList","generateConfig","locale","map","subFormat","format","prev","next"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AACjD,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AAAA,MACIC,cAAc,GAAGF,IAAI,CAACE,cAD1B;AAAA,MAEIC,MAAM,GAAGH,IAAI,CAACG,MAFlB;AAGA,SAAON,OAAO,CAAC,YAAY;AACzB,QAAI,CAACE,KAAL,EAAY;AACV,aAAO,CAAC,EAAD,CAAP;AACD;;AAED,WAAOE,UAAU,CAACG,GAAX,CAAe,UAAUC,SAAV,EAAqB;AACzC,aAAOH,cAAc,CAACC,MAAf,CAAsBG,MAAtB,CAA6BH,MAAM,CAACA,MAApC,EAA4CJ,KAA5C,EAAmDM,SAAnD,CAAP;AACD,KAFM,CAAP;AAGD,GARa,EAQX,CAACN,KAAD,EAAQE,UAAR,CARW,EAQU,UAAUM,IAAV,EAAgBC,IAAhB,EAAsB;AAC5C,WAAOD,IAAI,CAAC,CAAD,CAAJ,KAAYC,IAAI,CAAC,CAAD,CAAhB,IAAuB,CAACZ,YAAY,CAACW,IAAI,CAAC,CAAD,CAAL,EAAUC,IAAI,CAAC,CAAD,CAAd,CAA3C;AACD,GAVa,CAAd;AAWD","sourcesContent":["import shallowEqual from 'shallowequal';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n      generateConfig = _ref.generateConfig,\n      locale = _ref.locale;\n  return useMemo(function () {\n    if (!value) {\n      return [''];\n    }\n\n    return formatList.map(function (subFormat) {\n      return generateConfig.locale.format(locale.locale, value, subFormat);\n    });\n  }, [value, formatList], function (prev, next) {\n    return prev[0] !== next[0] || !shallowEqual(prev[1], next[1]);\n  });\n}"]},"metadata":{},"sourceType":"module"}