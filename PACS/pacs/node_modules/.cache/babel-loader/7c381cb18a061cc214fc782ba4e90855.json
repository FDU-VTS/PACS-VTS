{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedExtra from './FeedExtra';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\n\nfunction FeedContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      date = props.date,\n      meta = props.meta,\n      summary = props.summary;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(FeedContent, props);\n  var ElementType = getElementType(FeedContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date), createShorthand(FeedSummary, function (val) {\n    return {\n      content: val\n    };\n  }, summary), content, createShorthand(FeedExtra, function (val) {\n    return {\n      text: true,\n      content: val\n    };\n  }, extraText), createShorthand(FeedExtra, function (val) {\n    return {\n      images: val\n    };\n  }, extraImages), createShorthand(FeedMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta));\n}\n\nFeedContent.handledProps = ['as', 'children', 'className', 'content', 'date', 'extraImages', 'extraText', 'meta', 'summary'];\nFeedContent._meta = {\n  name: 'FeedContent',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\nFeedContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain a date. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: FeedExtra.propTypes.images,\n\n  /** Shorthand for FeedExtra with text. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\nexport default FeedContent;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/views/Feed/FeedContent.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthand","customPropTypes","getElementType","getUnhandledProps","META","FeedDate","FeedExtra","FeedMeta","FeedSummary","FeedContent","props","children","className","content","extraImages","extraText","date","meta","summary","classes","rest","ElementType","isNil","createElement","val","text","images","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","itemShorthand"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedExtra from './FeedExtra';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\n\nfunction FeedContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      date = props.date,\n      meta = props.meta,\n      summary = props.summary;\n\n\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(FeedContent, props);\n  var ElementType = getElementType(FeedContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(\n      ElementType,\n      _extends({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    createShorthand(FeedDate, function (val) {\n      return { content: val };\n    }, date),\n    createShorthand(FeedSummary, function (val) {\n      return { content: val };\n    }, summary),\n    content,\n    createShorthand(FeedExtra, function (val) {\n      return { text: true, content: val };\n    }, extraText),\n    createShorthand(FeedExtra, function (val) {\n      return { images: val };\n    }, extraImages),\n    createShorthand(FeedMeta, function (val) {\n      return { content: val };\n    }, meta)\n  );\n}\n\nFeedContent.handledProps = ['as', 'children', 'className', 'content', 'date', 'extraImages', 'extraText', 'meta', 'summary'];\nFeedContent._meta = {\n  name: 'FeedContent',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\n\nFeedContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain a date. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: FeedExtra.propTypes.images,\n\n  /** Shorthand for FeedExtra with text. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\n\nexport default FeedContent;"]},"metadata":{},"sourceType":"module"}