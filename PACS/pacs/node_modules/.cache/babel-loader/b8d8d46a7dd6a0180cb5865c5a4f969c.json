{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = ['as', 'attached', 'basic', 'children', 'circular', 'className', 'clearing', 'color', 'compact', 'content', 'disabled', 'floated', 'inverted', 'loading', 'padded', 'piled', 'raised', 'secondary', 'size', 'stacked', 'tertiary', 'textAlign', 'vertical'];\nSegment.Group = SegmentGroup;\nSegment._meta = {\n  name: 'Segment',\n  type: META.TYPES.ELEMENT\n};\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js"],"names":["_extends","_without","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useKeyOrValueAndKey","useTextAlignProp","useValueAndKey","SegmentGroup","Segment","props","attached","basic","children","circular","className","clearing","color","compact","content","disabled","floated","inverted","loading","padded","piled","raised","secondary","size","stacked","tertiary","textAlign","vertical","classes","rest","ElementType","createElement","isNil","handledProps","Group","_meta","name","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","oneOfType","bool","oneOf","node","string","COLORS","contentShorthand","FLOATS","SIZES","TEXT_ALIGNMENTS"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\n\n/**\n * A segment is used to create a grouping of related content.\n */\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n\n\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nSegment.handledProps = ['as', 'attached', 'basic', 'children', 'circular', 'className', 'clearing', 'color', 'compact', 'content', 'disabled', 'floated', 'inverted', 'loading', 'padded', 'piled', 'raised', 'secondary', 'size', 'stacked', 'tertiary', 'textAlign', 'vertical'];\nSegment.Group = SegmentGroup;\n\nSegment._meta = {\n  name: 'Segment',\n  type: META.TYPES.ELEMENT\n};\n\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\n\nexport default Segment;"]},"metadata":{},"sourceType":"module"}