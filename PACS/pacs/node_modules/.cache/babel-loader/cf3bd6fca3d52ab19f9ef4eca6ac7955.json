{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedUser from './FeedUser';\n/**\n * A feed can contain a summary.\n */\n\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n  var classes = cx('summary', className);\n  var rest = getUnhandledProps(FeedSummary, props);\n  var ElementType = getElementType(FeedSummary, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedUser, function (val) {\n    return {\n      content: val\n    };\n  }, user), content, createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date));\n}\n\nFeedSummary.handledProps = ['as', 'children', 'className', 'content', 'date', 'user'];\nFeedSummary._meta = {\n  name: 'FeedSummary',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\nFeedSummary.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand\n} : {};\nexport default FeedSummary;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/views/Feed/FeedSummary.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthand","customPropTypes","getElementType","getUnhandledProps","META","FeedDate","FeedUser","FeedSummary","props","children","className","content","date","user","classes","rest","ElementType","isNil","createElement","val","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","itemShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,cAA1D,EAA0EC,iBAA1E,EAA6FC,IAA7F,QAAyG,WAAzG;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA;;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;AAAA,MAIIC,IAAI,GAAGL,KAAK,CAACK,IAJjB;AAOA,MAAIC,OAAO,GAAGlB,EAAE,CAAC,SAAD,EAAYc,SAAZ,CAAhB;AACA,MAAIK,IAAI,GAAGZ,iBAAiB,CAACI,WAAD,EAAcC,KAAd,CAA5B;AACA,MAAIQ,WAAW,GAAGd,cAAc,CAACK,WAAD,EAAcC,KAAd,CAAhC;;AAEA,MAAI,CAACT,aAAa,CAACkB,KAAd,CAAoBR,QAApB,CAAL,EAAoC;AAClC,WAAOX,KAAK,CAACoB,aAAN,CACLF,WADK,EAELrB,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAW;AAAEL,MAAAA,SAAS,EAAEI;AAAb,KAAX,CAFH,EAGLL,QAHK,CAAP;AAKD;;AAED,SAAOX,KAAK,CAACoB,aAAN,CACLF,WADK,EAELrB,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAW;AAAEL,IAAAA,SAAS,EAAEI;AAAb,GAAX,CAFH,EAGLd,eAAe,CAACM,QAAD,EAAW,UAAUa,GAAV,EAAe;AACvC,WAAO;AAAER,MAAAA,OAAO,EAAEQ;AAAX,KAAP;AACD,GAFc,EAEZN,IAFY,CAHV,EAMLF,OANK,EAOLX,eAAe,CAACK,QAAD,EAAW,UAAUc,GAAV,EAAe;AACvC,WAAO;AAAER,MAAAA,OAAO,EAAEQ;AAAX,KAAP;AACD,GAFc,EAEZP,IAFY,CAPV,CAAP;AAWD;;AAEDL,WAAW,CAACa,YAAZ,GAA2B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,MAAnD,CAA3B;AACAb,WAAW,CAACc,KAAZ,GAAoB;AAClBC,EAAAA,IAAI,EAAE,aADY;AAElBC,EAAAA,MAAM,EAAE,MAFU;AAGlBC,EAAAA,IAAI,EAAEpB,IAAI,CAACqB,KAAL,CAAWC;AAHC,CAApB;AAMAnB,WAAW,CAACoB,SAAZ,GAAwBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC9D;AACAC,EAAAA,EAAE,EAAE9B,eAAe,CAAC8B,EAF0C;;AAI9D;AACAtB,EAAAA,QAAQ,EAAEZ,SAAS,CAACmC,IAL0C;;AAO9D;AACAtB,EAAAA,SAAS,EAAEb,SAAS,CAACoC,MARyC;;AAU9D;AACAtB,EAAAA,OAAO,EAAEV,eAAe,CAACiC,gBAXqC;;AAa9D;AACAtB,EAAAA,IAAI,EAAEX,eAAe,CAACkC,aAdwC;;AAgB9D;AACAtB,EAAAA,IAAI,EAAEZ,eAAe,CAACkC;AAjBwC,CAAxC,GAkBpB,EAlBJ;AAoBA,eAAe5B,WAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedUser from './FeedUser';\n\n/**\n * A feed can contain a summary.\n */\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n\n\n  var classes = cx('summary', className);\n  var rest = getUnhandledProps(FeedSummary, props);\n  var ElementType = getElementType(FeedSummary, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(\n      ElementType,\n      _extends({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    createShorthand(FeedUser, function (val) {\n      return { content: val };\n    }, user),\n    content,\n    createShorthand(FeedDate, function (val) {\n      return { content: val };\n    }, date)\n  );\n}\n\nFeedSummary.handledProps = ['as', 'children', 'className', 'content', 'date', 'user'];\nFeedSummary._meta = {\n  name: 'FeedSummary',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\n\nFeedSummary.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand\n} : {};\n\nexport default FeedSummary;"]},"metadata":{},"sourceType":"module"}