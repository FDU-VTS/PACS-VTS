{"ast":null,"code":"var _jsxFileName = \"/Users/bly/Documents/\\u5DE5\\u4F5C/\\u5B9E\\u9A8C\\u5BA4/\\u9879\\u76EE/\\u533B\\u7597\\u7CFB\\u7EDF/PACS/pacs/src/components/PatientTable.js\";\nimport React, { Component } from 'react';\n\nclass PatientTable extends Component {\n  render() {\n    //console.log(\"table组件更新搜索词\",this.props.filterText)\n    let patientsFiltered = this.props.patients;\n\n    if (this.props.filterText !== '') {\n      //使用正则表达式匹配\n      patientsFiltered = this.props.patients.filter(patient => {\n        return -1 !== patient.patient_name.search(this.props.filterText);\n      });\n    }\n\n    console.log(\"输出过滤后的\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, \"Patient ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, \"Patient Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, \"Patient Gender\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, \"Patient Birthdate\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, \"Patient Age\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"Images Count\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, patientsFiltered.map(patient => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }, patient.patient_id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }, patient.patient_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, patient.patient_sex), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, patient.patient_birthdate == null ? \"Anonymized\" : patient.patient_birthdate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }, patient.patient_age), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, patient.images_count));\n    }))));\n  }\n\n}\n\nexport default PatientTable;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/src/components/PatientTable.js"],"names":["React","Component","PatientTable","render","patientsFiltered","props","patients","filterText","filter","patient","patient_name","search","console","log","map","patient_id","patient_sex","patient_birthdate","patient_age","images_count"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAGA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACjCE,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,gBAAgB,GAAG,KAAKC,KAAL,CAAWC,QAAlC;;AACA,QAAI,KAAKD,KAAL,CAAWE,UAAX,KAA0B,EAA9B,EAAkC;AAC9B;AACAH,MAAAA,gBAAgB,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBE,MAApB,CAA4BC,OAAD,IAAa;AACvD,eAAO,CAAC,CAAD,KAAOA,OAAO,CAACC,YAAR,CAAqBC,MAArB,CAA4B,KAAKN,KAAL,CAAWE,UAAvC,CAAd;AACH,OAFkB,CAAnB;AAGH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CADA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,gBAAgB,CAACU,GAAjB,CAAqBL,OAAO,IAAG;AAC5B,0BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAACM,UAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,OAAO,CAACC,YAAb,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,OAAO,CAACO,WAAb,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,OAAO,CAACQ,iBAAR,IAA6B,IAA7B,GAAoC,YAApC,GAAmDR,OAAO,CAACQ,iBAAhE,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,OAAO,CAACS,WAAb,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKT,OAAO,CAACU,YAAb,CANJ,CAFA;AAWH,KAZA,CADL,CATA,CADJ,CADJ;AA6BH;;AAxCgC;;AA0CrC,eAAejB,YAAf","sourcesContent":["import React, {Component} from 'react';\n\n\nclass PatientTable extends Component {;\n    render() {\n        //console.log(\"table组件更新搜索词\",this.props.filterText)\n        let patientsFiltered = this.props.patients;\n        if (this.props.filterText !== '') {\n            //使用正则表达式匹配\n            patientsFiltered = this.props.patients.filter((patient) => {\n                return -1 !== patient.patient_name.search(this.props.filterText);\n            });\n        }\n        console.log(\"输出过滤后的\");\n        return (\n            <div>\n                <table>\n                <thead>\n                    <th>Patient ID</th>\n                    <th>Patient Name</th>\n                    <th>Patient Gender</th>\n                    <th>Patient Birthdate</th>\n                    <th>Patient Age</th>\n                    <th>Images Count</th>\n                </thead>\n                <tbody>\n                    {patientsFiltered.map(patient=> {\n                        return (\n                            \n                        <tr> \n                            <td>{patient.patient_id}</td>\n                            <td>{patient.patient_name}</td>\n                            <td>{patient.patient_sex}</td>\n                            <td>{patient.patient_birthdate == null ? \"Anonymized\" : patient.patient_birthdate}</td>\n                            <td>{patient.patient_age}</td>\n                            <td>{patient.images_count}</td>\n                        </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>         \n        )\n    }\n}\nexport default PatientTable;"]},"metadata":{},"sourceType":"module"}