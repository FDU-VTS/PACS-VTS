{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nvar Tree = React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  return /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref\n  }, props, {\n    prefixCls: prefixCls,\n    className: classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames)),\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    }\n  }), children);\n});\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nexport default Tree;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS/pacs/node_modules/antd/es/tree/Tree.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","RcTree","TreeNode","classNames","DirectoryTree","ConfigContext","collapseMotion","renderSwitcherIcon","Tree","forwardRef","props","ref","_classNames","_React$useContext","useContext","getPrefixCls","direction","customizePrefixCls","prefixCls","className","showIcon","showLine","_switcherIcon","switcherIcon","blockNode","children","checkable","createElement","itemHeight","concat","nodeProps","defaultProps","motion","motionAppear"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,eAAT,CAAyBC,GAAzB,EAA8BN,GAA9B,EAAmCO,KAAnC,EAA0C;AAAE,MAAIP,GAAG,IAAIM,GAAX,EAAgB;AAAEb,IAAAA,MAAM,CAACe,cAAP,CAAsBF,GAAtB,EAA2BN,GAA3B,EAAgC;AAAEO,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEL,IAAAA,GAAG,CAACN,GAAD,CAAH,GAAWO,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,OAAO,KAAKM,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,SAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,IAAIC,IAAI,GAAGR,KAAK,CAACS,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAChD,MAAIC,WAAJ;;AAEA,MAAIC,iBAAiB,GAAGb,KAAK,CAACc,UAAN,CAAiBT,aAAjB,CAAxB;AAAA,MACIU,YAAY,GAAGF,iBAAiB,CAACE,YADrC;AAAA,MAEIC,SAAS,GAAGH,iBAAiB,CAACG,SAFlC;;AAIA,MAAIC,kBAAkB,GAAGP,KAAK,CAACQ,SAA/B;AAAA,MACIC,SAAS,GAAGT,KAAK,CAACS,SADtB;AAAA,MAEIC,QAAQ,GAAGV,KAAK,CAACU,QAFrB;AAAA,MAGIC,QAAQ,GAAGX,KAAK,CAACW,QAHrB;AAAA,MAIIC,aAAa,GAAGZ,KAAK,CAACa,YAJ1B;AAAA,MAKIC,SAAS,GAAGd,KAAK,CAACc,SALtB;AAAA,MAMIC,QAAQ,GAAGf,KAAK,CAACe,QANrB;AAAA,MAOIC,SAAS,GAAGhB,KAAK,CAACgB,SAPtB;AAQA,MAAIR,SAAS,GAAGH,YAAY,CAAC,MAAD,EAASE,kBAAT,CAA5B;AACA,SAAO,aAAajB,KAAK,CAAC2B,aAAN,CAAoB1B,MAApB,EAA4BrB,QAAQ,CAAC;AACvDgD,IAAAA,UAAU,EAAE,EAD2C;AAEvDjB,IAAAA,GAAG,EAAEA;AAFkD,GAAD,EAGrDD,KAHqD,EAG9C;AACRQ,IAAAA,SAAS,EAAEA,SADH;AAERC,IAAAA,SAAS,EAAEhB,UAAU,CAACgB,SAAD,GAAaP,WAAW,GAAG,EAAd,EAAkBnB,eAAe,CAACmB,WAAD,EAAc,GAAGiB,MAAH,CAAUX,SAAV,EAAqB,YAArB,CAAd,EAAkD,CAACE,QAAnD,CAAjC,EAA+F3B,eAAe,CAACmB,WAAD,EAAc,GAAGiB,MAAH,CAAUX,SAAV,EAAqB,aAArB,CAAd,EAAmDM,SAAnD,CAA9G,EAA6K/B,eAAe,CAACmB,WAAD,EAAc,GAAGiB,MAAH,CAAUX,SAAV,EAAqB,MAArB,CAAd,EAA4CF,SAAS,KAAK,KAA1D,CAA5L,EAA8PJ,WAA3Q,EAFb;AAGRc,IAAAA,SAAS,EAAEA,SAAS,GAAG,aAAa1B,KAAK,CAAC2B,aAAN,CAAoB,MAApB,EAA4B;AAC9DR,MAAAA,SAAS,EAAE,GAAGU,MAAH,CAAUX,SAAV,EAAqB,iBAArB;AADmD,KAA5B,CAAhB,GAEfQ,SALG;AAMRH,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBO,SAAtB,EAAiC;AAC7C,aAAOvB,kBAAkB,CAACW,SAAD,EAAYI,aAAZ,EAA2BD,QAA3B,EAAqCS,SAArC,CAAzB;AACD;AARO,GAH8C,CAApC,EAYhBL,QAZgB,CAApB;AAaD,CA7BU,CAAX;AA8BAjB,IAAI,CAACN,QAAL,GAAgBA,QAAhB;AACAM,IAAI,CAACJ,aAAL,GAAqBA,aAArB;AACAI,IAAI,CAACuB,YAAL,GAAoB;AAClBL,EAAAA,SAAS,EAAE,KADO;AAElBN,EAAAA,QAAQ,EAAE,KAFQ;AAGlBY,EAAAA,MAAM,EAAEpD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK0B,cAAL,CAAT,EAA+B;AAC7C2B,IAAAA,YAAY,EAAE;AAD+B,GAA/B,CAHE;AAMlBT,EAAAA,SAAS,EAAE;AANO,CAApB;AAQA,eAAehB,IAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nvar Tree = React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  return /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref\n  }, props, {\n    prefixCls: prefixCls,\n    className: classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames)),\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    }\n  }), children);\n});\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nexport default Tree;"]},"metadata":{},"sourceType":"module"}