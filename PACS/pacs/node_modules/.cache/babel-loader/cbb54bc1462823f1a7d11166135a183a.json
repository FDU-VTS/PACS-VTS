{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n/**\n * A dropdown menu can contain a menu.\n */\n\nfunction DropdownMenu(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      direction = props.direction,\n      open = props.open,\n      scrolling = props.scrolling;\n  var classes = cx(direction, useKeyOnly(open, 'visible'), useKeyOnly(scrolling, 'scrolling'), 'menu transition', className);\n  var rest = getUnhandledProps(DropdownMenu, props);\n  var ElementType = getElementType(DropdownMenu, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDropdownMenu.handledProps = ['as', 'children', 'className', 'content', 'direction', 'open', 'scrolling'];\nDropdownMenu._meta = {\n  name: 'DropdownMenu',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE\n};\nDropdownMenu.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A dropdown menu can open to the left or to the right. */\n  direction: PropTypes.oneOf(['left', 'right']),\n\n  /** Whether or not the dropdown menu is displayed. */\n  open: PropTypes.bool,\n\n  /** A dropdown menu can scroll. */\n  scrolling: PropTypes.bool\n} : {};\nexport default DropdownMenu;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownMenu.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","DropdownMenu","props","children","className","content","direction","open","scrolling","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","MODULE","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","oneOf","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,UAAlF,QAAoG,WAApG;AAEA;;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;AAAA,MAIIC,IAAI,GAAGL,KAAK,CAACK,IAJjB;AAAA,MAKIC,SAAS,GAAGN,KAAK,CAACM,SALtB;AAOA,MAAIC,OAAO,GAAGjB,EAAE,CAACc,SAAD,EAAYN,UAAU,CAACO,IAAD,EAAO,SAAP,CAAtB,EAAyCP,UAAU,CAACQ,SAAD,EAAY,WAAZ,CAAnD,EAA6E,iBAA7E,EAAgGJ,SAAhG,CAAhB;AACA,MAAIM,IAAI,GAAGZ,iBAAiB,CAACG,YAAD,EAAeC,KAAf,CAA5B;AACA,MAAIS,WAAW,GAAGd,cAAc,CAACI,YAAD,EAAeC,KAAf,CAAhC;AAEA,SAAOR,KAAK,CAACkB,aAAN,CACLD,WADK,EAELpB,QAAQ,CAAC,EAAD,EAAKmB,IAAL,EAAW;AAAEN,IAAAA,SAAS,EAAEK;AAAb,GAAX,CAFH,EAGLd,aAAa,CAACkB,KAAd,CAAoBV,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDF,YAAY,CAACa,YAAb,GAA4B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,WAA3C,EAAwD,MAAxD,EAAgE,WAAhE,CAA5B;AACAb,YAAY,CAACc,KAAb,GAAqB;AACnBC,EAAAA,IAAI,EAAE,cADa;AAEnBC,EAAAA,MAAM,EAAE,UAFW;AAGnBC,EAAAA,IAAI,EAAEnB,IAAI,CAACoB,KAAL,CAAWC;AAHE,CAArB;AAMAnB,YAAY,CAACoB,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/D;AACAC,EAAAA,EAAE,EAAE7B,eAAe,CAAC6B,EAF2C;;AAI/D;AACAtB,EAAAA,QAAQ,EAAEV,SAAS,CAACiC,IAL2C;;AAO/D;AACAtB,EAAAA,SAAS,EAAEX,SAAS,CAACkC,MAR0C;;AAU/D;AACAtB,EAAAA,OAAO,EAAET,eAAe,CAACgC,gBAXsC;;AAa/D;AACAtB,EAAAA,SAAS,EAAEb,SAAS,CAACoC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAdoD;;AAgB/D;AACAtB,EAAAA,IAAI,EAAEd,SAAS,CAACqC,IAjB+C;;AAmB/D;AACAtB,EAAAA,SAAS,EAAEf,SAAS,CAACqC;AApB0C,CAAxC,GAqBrB,EArBJ;AAuBA,eAAe7B,YAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\n * A dropdown menu can contain a menu.\n */\nfunction DropdownMenu(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      direction = props.direction,\n      open = props.open,\n      scrolling = props.scrolling;\n\n  var classes = cx(direction, useKeyOnly(open, 'visible'), useKeyOnly(scrolling, 'scrolling'), 'menu transition', className);\n  var rest = getUnhandledProps(DropdownMenu, props);\n  var ElementType = getElementType(DropdownMenu, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nDropdownMenu.handledProps = ['as', 'children', 'className', 'content', 'direction', 'open', 'scrolling'];\nDropdownMenu._meta = {\n  name: 'DropdownMenu',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE\n};\n\nDropdownMenu.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A dropdown menu can open to the left or to the right. */\n  direction: PropTypes.oneOf(['left', 'right']),\n\n  /** Whether or not the dropdown menu is displayed. */\n  open: PropTypes.bool,\n\n  /** A dropdown menu can scroll. */\n  scrolling: PropTypes.bool\n} : {};\n\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}