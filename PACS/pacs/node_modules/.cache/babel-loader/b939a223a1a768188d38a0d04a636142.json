{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\n * An item can contain content.\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header), ItemMeta.create(meta), ItemDescription.create(description), ItemExtra.create(extra), content);\n}\n\nItemContent.handledProps = ['as', 'children', 'className', 'content', 'description', 'extra', 'header', 'meta', 'verticalAlign'];\nItemContent._meta = {\n  name: 'ItemContent',\n  parent: 'Item',\n  type: META.TYPES.VIEW\n};\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/views/Item/ItemContent.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useVerticalAlignProp","ItemHeader","ItemDescription","ItemExtra","ItemMeta","ItemContent","props","children","className","content","description","extra","header","meta","verticalAlign","classes","rest","ElementType","isNil","createElement","create","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","itemShorthand","oneOf","VERTICAL_ALIGNMENTS"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n\n/**\n * An item can contain content.\n */\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n\n\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(\n      ElementType,\n      _extends({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    ItemHeader.create(header),\n    ItemMeta.create(meta),\n    ItemDescription.create(description),\n    ItemExtra.create(extra),\n    content\n  );\n}\n\nItemContent.handledProps = ['as', 'children', 'className', 'content', 'description', 'extra', 'header', 'meta', 'verticalAlign'];\nItemContent._meta = {\n  name: 'ItemContent',\n  parent: 'Item',\n  type: META.TYPES.VIEW\n};\n\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\n\nexport default ItemContent;"]},"metadata":{},"sourceType":"module"}