{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\nimport RevealContent from './RevealContent';\n/**\n * A reveal displays additional content in place of previous content when activated.\n */\n\nfunction Reveal(props) {\n  var active = props.active,\n      animated = props.animated,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      instant = props.instant;\n  var classes = cx('ui', animated, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(instant, 'instant'), 'reveal', className);\n  var rest = getUnhandledProps(Reveal, props);\n  var ElementType = getElementType(Reveal, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nReveal.handledProps = ['active', 'animated', 'as', 'children', 'className', 'content', 'disabled', 'instant'];\nReveal._meta = {\n  name: 'Reveal',\n  type: META.TYPES.ELEMENT\n};\nReveal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An active reveal displays its hidden content. */\n  active: PropTypes.bool,\n\n  /** An animation name that will be applied to Reveal. */\n  animated: PropTypes.oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A disabled reveal will not animate when hovered. */\n  disabled: PropTypes.bool,\n\n  /** An element can show its content without delay. */\n  instant: PropTypes.bool\n} : {};\nReveal.Content = RevealContent;\nexport default Reveal;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/elements/Reveal/Reveal.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","RevealContent","Reveal","props","active","animated","children","className","content","disabled","instant","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","bool","oneOf","node","string","contentShorthand","Content"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,UAAlF,QAAoG,WAApG;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA;;;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;AAAA,MAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;AAAA,MAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;AAAA,MAKIC,QAAQ,GAAGN,KAAK,CAACM,QALrB;AAAA,MAMIC,OAAO,GAAGP,KAAK,CAACO,OANpB;AASA,MAAIC,OAAO,GAAGnB,EAAE,CAAC,IAAD,EAAOa,QAAP,EAAiBL,UAAU,CAACI,MAAD,EAAS,QAAT,CAA3B,EAA+CJ,UAAU,CAACS,QAAD,EAAW,UAAX,CAAzD,EAAiFT,UAAU,CAACU,OAAD,EAAU,SAAV,CAA3F,EAAiH,QAAjH,EAA2HH,SAA3H,CAAhB;AACA,MAAIK,IAAI,GAAGd,iBAAiB,CAACI,MAAD,EAASC,KAAT,CAA5B;AACA,MAAIU,WAAW,GAAGhB,cAAc,CAACK,MAAD,EAASC,KAAT,CAAhC;AAEA,SAAOT,KAAK,CAACoB,aAAN,CACLD,WADK,EAELtB,QAAQ,CAAC,EAAD,EAAKqB,IAAL,EAAW;AAAEL,IAAAA,SAAS,EAAEI;AAAb,GAAX,CAFH,EAGLhB,aAAa,CAACoB,KAAd,CAAoBT,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDJ,MAAM,CAACc,YAAP,GAAsB,CAAC,QAAD,EAAW,UAAX,EAAuB,IAAvB,EAA6B,UAA7B,EAAyC,WAAzC,EAAsD,SAAtD,EAAiE,UAAjE,EAA6E,SAA7E,CAAtB;AACAd,MAAM,CAACe,KAAP,GAAe;AACbC,EAAAA,IAAI,EAAE,QADO;AAEbC,EAAAA,IAAI,EAAEpB,IAAI,CAACqB,KAAL,CAAWC;AAFJ,CAAf;AAKAnB,MAAM,CAACoB,SAAP,GAAmBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACzD;AACAC,EAAAA,EAAE,EAAE9B,eAAe,CAAC8B,EAFqC;;AAIzD;AACAtB,EAAAA,MAAM,EAAEX,SAAS,CAACkC,IALuC;;AAOzD;AACAtB,EAAAA,QAAQ,EAAEZ,SAAS,CAACmC,KAAV,CAAgB,CAAC,MAAD,EAAS,YAAT,EAAuB,MAAvB,EAA+B,YAA/B,EAA6C,SAA7C,EAAwD,WAAxD,EAAqE,QAArE,EAA+E,aAA/E,CAAhB,CAR+C;;AAUzD;AACAtB,EAAAA,QAAQ,EAAEb,SAAS,CAACoC,IAXqC;;AAazD;AACAtB,EAAAA,SAAS,EAAEd,SAAS,CAACqC,MAdoC;;AAgBzD;AACAtB,EAAAA,OAAO,EAAEZ,eAAe,CAACmC,gBAjBgC;;AAmBzD;AACAtB,EAAAA,QAAQ,EAAEhB,SAAS,CAACkC,IApBqC;;AAsBzD;AACAjB,EAAAA,OAAO,EAAEjB,SAAS,CAACkC;AAvBsC,CAAxC,GAwBf,EAxBJ;AA0BAzB,MAAM,CAAC8B,OAAP,GAAiB/B,aAAjB;AAEA,eAAeC,MAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\nimport RevealContent from './RevealContent';\n\n/**\n * A reveal displays additional content in place of previous content when activated.\n */\nfunction Reveal(props) {\n  var active = props.active,\n      animated = props.animated,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      instant = props.instant;\n\n\n  var classes = cx('ui', animated, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(instant, 'instant'), 'reveal', className);\n  var rest = getUnhandledProps(Reveal, props);\n  var ElementType = getElementType(Reveal, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nReveal.handledProps = ['active', 'animated', 'as', 'children', 'className', 'content', 'disabled', 'instant'];\nReveal._meta = {\n  name: 'Reveal',\n  type: META.TYPES.ELEMENT\n};\n\nReveal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An active reveal displays its hidden content. */\n  active: PropTypes.bool,\n\n  /** An animation name that will be applied to Reveal. */\n  animated: PropTypes.oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A disabled reveal will not animate when hovered. */\n  disabled: PropTypes.bool,\n\n  /** An element can show its content without delay. */\n  instant: PropTypes.bool\n} : {};\n\nReveal.Content = RevealContent;\n\nexport default Reveal;"]},"metadata":{},"sourceType":"module"}