{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = React.useRef(null);\n    var triggerRef = React.useRef(null);\n    var selectorRef = React.useRef(null);\n    var listRef = React.useRef(null);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        innerId = _React$useState2[0],\n        setInnerId = _React$useState2[1];\n\n    React.useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\n\n    var selectorDomRef = React.useRef(null);\n    React.useImperativeHandle(ref, function () {\n      return {\n        focus: selectorRef.current.focus,\n        blur: selectorRef.current.blur\n      };\n    }); // ============================= Value ==============================\n\n    var _React$useState3 = React.useState(value || defaultValue),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        innerValue = _React$useState4[0],\n        setInnerValue = _React$useState4[1];\n\n    var baseValue = value !== undefined ? value : innerValue; // Should reset when controlled to be uncontrolled\n\n    var prevValueRef = React.useRef(value);\n    React.useEffect(function () {\n      if (prevValueRef.current !== value && (value === undefined || value === null)) {\n        setInnerValue(undefined);\n      }\n\n      prevValueRef.current = value;\n    }, [value]);\n    /** Unique raw values */\n\n    var mergedRawValue = React.useMemo(function () {\n      return toInnerValue(baseValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [baseValue, mergedLabelInValue]);\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = React.useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        activeValue = _React$useState6[0],\n        setActiveValue = _React$useState6[1];\n\n    var _React$useState7 = React.useState(''),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        innerSearchValue = _React$useState8[0],\n        setInnerSearchValue = _React$useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && value !== undefined) {\n      mergedSearchValue = value;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = React.useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, baseValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, baseValue]);\n    var mergedFlattenOptions = React.useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]); // Display options for OptionList\n\n    var displayOptions = React.useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt.value !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\n    var displayFlattenOptions = React.useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    React.useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = React.useMemo(function () {\n      return mergedRawValue.map(function (val) {\n        var displayValue = getLabeledValue(val, {\n          options: mergedFlattenOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, mergedFlattenOptions)\n        });\n      });\n    }, [baseValue, mergedOptions]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var outOption = findValueOption([newValue], mergedFlattenOptions)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: mergedFlattenOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    };\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: mergedFlattenOptions,\n        getLabeledValue: getLabeledValue,\n        prevValue: baseValue,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, mergedFlattenOptions);\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setInnerValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        innerOpen = _useMergedState2[0],\n        setInnerOpen = _useMergedState2[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText) {\n      var fromTyping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Close dropdown when disabled change\n\n\n    React.useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    React.useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which; // We only manage open state here, close logic should handle by list component\n\n      if (!mergedOpen && which === KeyCode.ENTER) {\n        onToggleOpen(true);\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = React.useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    React.useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!popupElement.contains(document.activeElement)) {\n            selectorRef.current.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _React$useState9 = React.useState(0),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        accessibilityIndex = _React$useState10[0],\n        setAccessibilityIndex = _React$useState10[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null) {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _React$useState11 = React.useState(null),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        containerWidth = _React$useState12[0],\n        setContainerWidth = _React$useState12[1];\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return React.createElement(\"div\", Object.assign({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, React.createElement(Selector, Object.assign({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSelect: onInternalSelectionSelect\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = React.forwardRef(Select);\n  return RefSelect;\n}","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/PACS-VTS/PACS/pacs/node_modules/rc-select/es/generate.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","prototype","toString","call","slice","constructor","name","test","len","arr2","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","KeyCode","classNames","useMergedState","Selector","SelectTrigger","INTERNAL_PROPS_MARK","toInnerValue","toOuterValues","removeLastEnabledValue","getUUID","TransBtn","useLock","useDelayReset","useLayoutEffect","getSeparatedContent","useSelectTriggerControl","useCacheDisplayValue","DEFAULT_OMIT_PROPS","generateSelector","config","defaultPrefixCls","prefixCls","OptionList","components","optionList","convertChildrenToData","flattenOptions","getLabeledValue","filterOptions","isValueDisabled","findValueOption","warningProps","fillOptionsWithMissingValue","omitDOMProps","Select","props","ref","_classNames2","_props$prefixCls","className","id","open","defaultOpen","options","children","mode","defaultValue","labelInValue","showSearch","inputValue","searchValue","filterOption","_props$optionFilterPr","optionFilterProp","_props$autoClearSearc","autoClearSearchValue","onSearch","allowClear","clearIcon","showArrow","inputIcon","menuItemSelectedIcon","disabled","loading","defaultActiveFirstOption","_props$notFoundConten","notFoundContent","optionLabelProp","backfill","getInputElement","getPopupContainer","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","animation","transitionName","virtual","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","_props$showAction","showAction","direction","tokenSeparators","tagRender","onPopupScroll","onDropdownVisibleChange","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","onChange","onSelect","onDeselect","_props$internalProps","internalProps","restProps","useInternalProps","mark","domProps","prop","containerRef","useRef","triggerRef","selectorRef","listRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","_React$useState","useState","_React$useState2","innerId","setInnerId","useEffect","concat","mergedId","mergedOptionLabelProp","mergedLabelInValue","isMultiple","mergedShowSearch","selectorDomRef","useImperativeHandle","focus","current","blur","_React$useState3","_React$useState4","innerValue","setInnerValue","baseValue","prevValueRef","mergedRawValue","useMemo","combobox","rawValues","Set","_React$useState5","_React$useState6","activeValue","setActiveValue","_React$useState7","_React$useState8","innerSearchValue","setInnerSearchValue","mergedSearchValue","mergedOptions","newOptions","mergedFlattenOptions","displayOptions","filteredOptions","every","opt","unshift","label","displayFlattenOptions","scrollTo","displayValues","map","val","displayValue","prevValue","triggerSelect","newValue","isSelect","outOption","skipTriggerSelect","selectValue","onRawSelect","onRawDeselect","triggerChange","newRawValues","skipTriggerChange","outValues","outValue","outOptions","onInternalSelect","_ref","selected","newRawValue","add","delete","String","onInternalOptionSelect","info","onInternalSelectionSelect","customizeInputElement","_useMergedState","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","newOpen","nextOpen","getPopupElement","triggerSearch","searchText","fromTyping","ret","newSearchText","patchLabels","patchRawValues","item","find","_ref2","data","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","BACKSPACE","removeInfo","removedValue","values","_len","rest","_key","_listRef$current","onInternalKeyUp","_len2","_key2","_listRef$current2","focusRef","onContainerFocus","includes","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","splice","onInternalMouseDown","popupElement","contains","setTimeout","index","document","activeElement","_len3","restArgs","_key3","_React$useState9","_React$useState10","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_React$useState11","_React$useState12","containerWidth","setContainerWidth","newWidth","Math","ceil","offsetWidth","popupNode","createElement","childrenAsData","multiple","height","itemHeight","onScroll","clearNode","onClearMouseDown","onClear","customizeIcon","mergedShowArrow","arrowNode","customizeIconProps","focused","process","env","NODE_ENV","mergedClassName","assign","style","width","display","overflow","opacity","join","visible","empty","getTriggerDOMNode","domRef","inputElement","RefSelect","forwardRef"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = React.useRef(null);\n    var triggerRef = React.useRef(null);\n    var selectorRef = React.useRef(null);\n    var listRef = React.useRef(null);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        innerId = _React$useState2[0],\n        setInnerId = _React$useState2[1];\n\n    React.useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\n\n    var selectorDomRef = React.useRef(null);\n    React.useImperativeHandle(ref, function () {\n      return {\n        focus: selectorRef.current.focus,\n        blur: selectorRef.current.blur\n      };\n    }); // ============================= Value ==============================\n\n    var _React$useState3 = React.useState(value || defaultValue),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        innerValue = _React$useState4[0],\n        setInnerValue = _React$useState4[1];\n\n    var baseValue = value !== undefined ? value : innerValue; // Should reset when controlled to be uncontrolled\n\n    var prevValueRef = React.useRef(value);\n    React.useEffect(function () {\n      if (prevValueRef.current !== value && (value === undefined || value === null)) {\n        setInnerValue(undefined);\n      }\n\n      prevValueRef.current = value;\n    }, [value]);\n    /** Unique raw values */\n\n    var mergedRawValue = React.useMemo(function () {\n      return toInnerValue(baseValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [baseValue, mergedLabelInValue]);\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = React.useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        activeValue = _React$useState6[0],\n        setActiveValue = _React$useState6[1];\n\n    var _React$useState7 = React.useState(''),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        innerSearchValue = _React$useState8[0],\n        setInnerSearchValue = _React$useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && value !== undefined) {\n      mergedSearchValue = value;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = React.useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, baseValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, baseValue]);\n    var mergedFlattenOptions = React.useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]); // Display options for OptionList\n\n    var displayOptions = React.useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt.value !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\n    var displayFlattenOptions = React.useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    React.useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = React.useMemo(function () {\n      return mergedRawValue.map(function (val) {\n        var displayValue = getLabeledValue(val, {\n          options: mergedFlattenOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, mergedFlattenOptions)\n        });\n      });\n    }, [baseValue, mergedOptions]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var outOption = findValueOption([newValue], mergedFlattenOptions)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: mergedFlattenOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    };\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: mergedFlattenOptions,\n        getLabeledValue: getLabeledValue,\n        prevValue: baseValue,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, mergedFlattenOptions);\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setInnerValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        innerOpen = _useMergedState2[0],\n        setInnerOpen = _useMergedState2[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText) {\n      var fromTyping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Close dropdown when disabled change\n\n\n    React.useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    React.useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which; // We only manage open state here, close logic should handle by list component\n\n      if (!mergedOpen && which === KeyCode.ENTER) {\n        onToggleOpen(true);\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = React.useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    React.useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!popupElement.contains(document.activeElement)) {\n            selectorRef.current.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _React$useState9 = React.useState(0),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        accessibilityIndex = _React$useState10[0],\n        setAccessibilityIndex = _React$useState10[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null) {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _React$useState11 = React.useState(null),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        containerWidth = _React$useState12[0],\n        setContainerWidth = _React$useState12[1];\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return React.createElement(\"div\", Object.assign({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, React.createElement(Selector, Object.assign({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSelect: onInternalSelectionSelect\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = React.forwardRef(Select);\n  return RefSelect;\n}"]},"metadata":{},"sourceType":"module"}