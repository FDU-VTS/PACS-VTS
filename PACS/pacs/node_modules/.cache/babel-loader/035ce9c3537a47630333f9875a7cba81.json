{"ast":null,"code":"var _jsxFileName = \"/Users/bly/Documents/\\u5DE5\\u4F5C/\\u5B9E\\u9A8C\\u5BA4/\\u9879\\u76EE/\\u533B\\u7597\\u7CFB\\u7EDF/PACS/pacs/src/pages/PatientsPage.js\";\nimport React, { Component } from 'react';\nimport { Translate } from 'react-localize-redux';\nimport StudiesService from \"../services/DicomService\";\nimport { Button, Dropdown, Select, Table, Form, Menu, Segment, Grid, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\"; //import MenuContainer from \"../components/common/MenuContainer\";\n\nconst filterTextToValue = {\n  'Exact equals': 'exact',\n  'Starts with': 'startswith',\n  'Ends with': 'endswith',\n  'Contains': 'contains'\n};\n\nclass PatientsPage extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"hello world\"));\n  }\n\n}\n/*\nconst patientMatcherOptions = [\n    {key: 'exact', text: 'Точный поиск', value: 'exact'},\n    {key: 'startswith', text: 'Начинается с', value: 'startswith'},\n    {key: 'endswith', text: 'Заканчивается', value: 'endswith'},\n    {key: 'contains', text: 'Нечеткий поиск', value: 'contains'},\n];\n\nconst filterTextToValue = {\n    'Exact equals': 'exact',\n    'Starts with': 'startswith',\n    'Ends with': 'endswith',\n    'Contains': 'contains'\n};\n\nclass PatientsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patients: []\n        };\n        this.setState = this.setState.bind(this);\n        this.handleFindInputOnChange = this.handleFindInputOnChange.bind(this);\n    }\n\n    componentWillMount() {\n        StudiesService.findPatients(patients => {\n            this.setState({patients: patients});\n        });\n    }\n\n    handleFindInputOnChange(event) {\n        if (event.key === 'Enter') {\n            const patientName = document.getElementById('id_patient_name').value;\n            const patientId = document.getElementById('id_patient_id').value;\n            const patientNameFilter = filterTextToValue[document.getElementById('id_patient_name_filter').innerText.trim()];\n            const patientIdFilter = filterTextToValue[document.getElementById('id_patient_id_filter').innerText.trim()];\n            console.log(patientNameFilter);\n            StudiesService.findPatients(patients => {\n                console.log(this);\n                this.setState({patients: patients});\n            }, {\n                'patient_name': `${patientNameFilter}=${patientName}`,\n                'patient_id': `${patientIdFilter}=${patientId}`\n            });\n        }\n    }\n\n    render() {\n        console.log(this.state.patients);\n        return (\n            <MenuContainer activeItem='patients'>\n                <Translate>\n                    {\n                        (translate) => (\n                            <Grid columns='equal'>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <Form>\n                                            <Form.Group widths='equal'>\n                                                <Form.Input\n                                                    id='id_patient_name'\n                                                    label={translate('patient.name')}\n                                                    action={<Dropdown id='id_patient_name_filter' button basic floating\n                                                                      options={patientMatcherOptions}\n                                                                      defaultValue='exact'/>}\n                                                    icon='search'\n                                                    name='patient_name'\n                                                    iconPosition='left'\n                                                    placeholder={translate('patient.name')}\n                                                    onKeyPress={this.handleFindInputOnChange}\n                                                />\n                                                <Form.Input\n                                                    id='id_patient_id'\n                                                    label={translate('patient.id')}\n                                                    action={<Dropdown id='id_patient_id_filter' button basic floating\n                                                                      options={patientMatcherOptions}\n                                                                      defaultValue='exact'/>}\n                                                    icon='search'\n                                                    name='patient_id'\n                                                    iconPosition='left'\n                                                    placeholder={translate('patient.id')}\n                                                    onKeyPress={this.handleFindInputOnChange}\n                                                />\n                                            </Form.Group>\n                                        </Form>\n                                        <Table>\n                                            <Table.Header>\n                                                <Table.Row>\n                                                    <Table.HeaderCell>{translate('patient.id')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.name')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.gender')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.birthdate')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.age')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.imagesCount')}</Table.HeaderCell>\n                                                    <Table.HeaderCell/>\n                                                </Table.Row>\n                                            </Table.Header>\n                                            <Table.Body>\n                                                {\n                                                    this.state.patients.map(patient => {\n                                                        return (\n                                                            <Table.Row>\n                                                                <Table.Cell>\n                                                                    {patient['patient_id'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_name'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_sex'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_birthdate'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_age'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['images_count']}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    <Button positive as={Link}\n                                                                            to={`/patient/${patient['id']}/studies`}>{translate('open')}</Button>\n                                                                </Table.Cell>\n                                                            </Table.Row>\n                                                        );\n                                                    })\n                                                }\n                                            </Table.Body>\n                                        </Table>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        )\n                    }\n                </Translate>\n            </MenuContainer>\n        );\n    }\n}\n*/\n\n\nexport default PatientsPage;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/src/pages/PatientsPage.js"],"names":["React","Component","Translate","StudiesService","Button","Dropdown","Select","Table","Form","Menu","Segment","Grid","Header","Link","filterTextToValue","PatientsPage","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,IAA/C,EAAqDC,OAArD,EAA8DC,IAA9D,EAAoEC,MAApE,QAAiF,mBAAjF;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;;AAEA,MAAMC,iBAAiB,GAAG;AACtB,kBAAgB,OADM;AAEtB,iBAAe,YAFO;AAGtB,eAAa,UAHS;AAItB,cAAY;AAJU,CAA1B;;AAOA,MAAMC,YAAN,SAA2Bd,SAA3B,CAAoC;AAChCe,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAKH;;AAP+B;AASpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA,eAAeD,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Translate} from 'react-localize-redux';\nimport StudiesService from \"../services/DicomService\";\nimport {Button, Dropdown, Select, Table, Form, Menu, Segment, Grid, Header} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n//import MenuContainer from \"../components/common/MenuContainer\";\n\nconst filterTextToValue = {\n    'Exact equals': 'exact',\n    'Starts with': 'startswith',\n    'Ends with': 'endswith',\n    'Contains': 'contains'\n};\n\nclass PatientsPage extends Component{\n    render(){\n        return(\n            <div>\n                <h1>hello world</h1>\n            </div>\n        );\n    }\n}\n/*\nconst patientMatcherOptions = [\n    {key: 'exact', text: 'Точный поиск', value: 'exact'},\n    {key: 'startswith', text: 'Начинается с', value: 'startswith'},\n    {key: 'endswith', text: 'Заканчивается', value: 'endswith'},\n    {key: 'contains', text: 'Нечеткий поиск', value: 'contains'},\n];\n\nconst filterTextToValue = {\n    'Exact equals': 'exact',\n    'Starts with': 'startswith',\n    'Ends with': 'endswith',\n    'Contains': 'contains'\n};\n\nclass PatientsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patients: []\n        };\n        this.setState = this.setState.bind(this);\n        this.handleFindInputOnChange = this.handleFindInputOnChange.bind(this);\n    }\n\n    componentWillMount() {\n        StudiesService.findPatients(patients => {\n            this.setState({patients: patients});\n        });\n    }\n\n    handleFindInputOnChange(event) {\n        if (event.key === 'Enter') {\n            const patientName = document.getElementById('id_patient_name').value;\n            const patientId = document.getElementById('id_patient_id').value;\n            const patientNameFilter = filterTextToValue[document.getElementById('id_patient_name_filter').innerText.trim()];\n            const patientIdFilter = filterTextToValue[document.getElementById('id_patient_id_filter').innerText.trim()];\n            console.log(patientNameFilter);\n            StudiesService.findPatients(patients => {\n                console.log(this);\n                this.setState({patients: patients});\n            }, {\n                'patient_name': `${patientNameFilter}=${patientName}`,\n                'patient_id': `${patientIdFilter}=${patientId}`\n            });\n        }\n    }\n\n    render() {\n        console.log(this.state.patients);\n        return (\n            <MenuContainer activeItem='patients'>\n                <Translate>\n                    {\n                        (translate) => (\n                            <Grid columns='equal'>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <Form>\n                                            <Form.Group widths='equal'>\n                                                <Form.Input\n                                                    id='id_patient_name'\n                                                    label={translate('patient.name')}\n                                                    action={<Dropdown id='id_patient_name_filter' button basic floating\n                                                                      options={patientMatcherOptions}\n                                                                      defaultValue='exact'/>}\n                                                    icon='search'\n                                                    name='patient_name'\n                                                    iconPosition='left'\n                                                    placeholder={translate('patient.name')}\n                                                    onKeyPress={this.handleFindInputOnChange}\n                                                />\n                                                <Form.Input\n                                                    id='id_patient_id'\n                                                    label={translate('patient.id')}\n                                                    action={<Dropdown id='id_patient_id_filter' button basic floating\n                                                                      options={patientMatcherOptions}\n                                                                      defaultValue='exact'/>}\n                                                    icon='search'\n                                                    name='patient_id'\n                                                    iconPosition='left'\n                                                    placeholder={translate('patient.id')}\n                                                    onKeyPress={this.handleFindInputOnChange}\n                                                />\n                                            </Form.Group>\n                                        </Form>\n                                        <Table>\n                                            <Table.Header>\n                                                <Table.Row>\n                                                    <Table.HeaderCell>{translate('patient.id')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.name')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.gender')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.birthdate')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.age')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.imagesCount')}</Table.HeaderCell>\n                                                    <Table.HeaderCell/>\n                                                </Table.Row>\n                                            </Table.Header>\n                                            <Table.Body>\n                                                {\n                                                    this.state.patients.map(patient => {\n                                                        return (\n                                                            <Table.Row>\n                                                                <Table.Cell>\n                                                                    {patient['patient_id'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_name'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_sex'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_birthdate'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_age'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['images_count']}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    <Button positive as={Link}\n                                                                            to={`/patient/${patient['id']}/studies`}>{translate('open')}</Button>\n                                                                </Table.Cell>\n                                                            </Table.Row>\n                                                        );\n                                                    })\n                                                }\n                                            </Table.Body>\n                                        </Table>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        )\n                    }\n                </Translate>\n            </MenuContainer>\n        );\n    }\n}\n*/\nexport default PatientsPage;\n"]},"metadata":{},"sourceType":"module"}