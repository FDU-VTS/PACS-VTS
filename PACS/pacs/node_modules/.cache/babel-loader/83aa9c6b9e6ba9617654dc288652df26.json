{"ast":null,"code":"var _jsxFileName = \"/Users/bly/Documents/\\u5DE5\\u4F5C/\\u5B9E\\u9A8C\\u5BA4/\\u9879\\u76EE/\\u533B\\u7597\\u7CFB\\u7EDF/PACS/pacs/src/pages/StudySeriesPage.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Divider, Dropdown, Form, Grid, Header, Input, Message, Radio, Segment, Select, Table, TextArea } from \"semantic-ui-react\";\nimport StudiesService from \"../services/DicomService\"; //import MenuContainer from \"../components/common/MenuContainer\";\n\nimport { Link } from \"react-router-dom\";\nimport { Translate } from \"react-localize-redux\";\nconst options = [\n  /*\n  {key: 'DX', text: 'DX', value: 'DX'},\n  {key: 'MR', text: 'MR', value: 'MR'},\n  {key: 'CT', text: 'CT', value: 'CT'},\n  {key: 'US', text: 'US', value: 'US'},\n  {key: 'ECG', text: 'ECG', value: 'ECG'},\n  {key: 'XA', text: 'XA', value: 'XA'},\n  {key: 'OT', text: 'OT', value: 'OT'},\n  */\n];\nconst patientMatcherOptions = [\n  /*\n  {key: 'EXACT', text: 'EXACT', value: 'EXACT'},\n  {key: 'STARTS_WITH', text: 'STARTS_WITH', value: 'STARTS_WITH'},\n  {key: 'ENDS_WITH', text: 'ENDS_WITH', value: 'ENDS_WITH'},\n  {key: 'FUZZY', text: 'FUZZY', value: 'FUZZY'},\n  */\n];\nexport default class StudySeriesPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      study: {},\n      studyId: props.match.params.id\n    };\n    this.setState.bind(this);\n  }\n\n  componentWillMount() {\n    StudiesService.findStudyById(this.state.studyId, study => {\n      this.setState({\n        study: study\n      });\n    });\n  }\n\n  render() {\n    const study = this.state.study;\n    const series = this.state.study['series'];\n\n    if (series && series.length > 0) {\n      return /*#__PURE__*/React.createElement(Translate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, translate => /*#__PURE__*/React.createElement(Grid, {\n        columns: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        inverted: true,\n        color: \"blue\",\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 45\n        }\n      }, translate('patient.patient')), /*#__PURE__*/React.createElement(Segment, {\n        inverted: true,\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 49\n        }\n      }, study['patient']['patient_name'] || translate('patient.anonymized')), translate('patient.id'), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 76\n        }\n      }, study['patient']['patient_id']), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 49\n        }\n      }), translate('patient.gender'), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 80\n        }\n      }, study['patient']['patient_sex']), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 49\n        }\n      }), translate('patient.age'), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 77\n        }\n      }, study['patient']['patient_age'])), /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        inverted: true,\n        color: \"blue\",\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }\n      }, translate('study.study')), /*#__PURE__*/React.createElement(Segment, {\n        inverted: true,\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }\n      }, study['study_description']), translate('study.date'), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 76\n        }\n      }, study['study_date'] || '––'), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 49\n        }\n      }), translate('study.referringPhysician'), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 90\n        }\n      }, study['referring_physician'] || '––'))), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        label: translate('study.id'),\n        action: /*#__PURE__*/React.createElement(Dropdown, {\n          button: true,\n          basic: true,\n          floating: true,\n          options: patientMatcherOptions,\n          defaultValue: \"EXACT\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 65\n          }\n        }),\n        icon: \"search\",\n        iconPosition: \"left\",\n        placeholder: translate('study.id'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Form.Field, {\n        control: Select,\n        label: translate('study.modality'),\n        options: options,\n        placeholder: translate('study.modality'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 53\n        }\n      }))), series.map((seriesItem, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          as: \"h4\",\n          inverted: true,\n          color: \"white\",\n          attached: true,\n          textAlign: 'left',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 61\n          }\n        }, seriesItem['protocol_name'] || `${translate('series.series')} ${index + 1}`), /*#__PURE__*/React.createElement(Segment, {\n          attached: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 65\n          }\n        }, translate('series.description'), \": \"), \" \", seriesItem['series_description'] || '––', /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 65\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 65\n          }\n        }, translate('series.modality'), \": \"), seriesItem['modality'], /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 65\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 65\n          }\n        }, translate('series.bodyPartExamined'), \": \"), seriesItem['body_part_examined'] || '––', /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 65\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 65\n          }\n        }, translate('series.patientPosition'), \": \"), seriesItem['patient_position'], /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 65\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 65\n          }\n        }, translate('series.seriesNumber'), \": \"), seriesItem['series_number'], /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 65\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 65\n          }\n        }, translate('imagesCount'), \": \"), seriesItem['images_count']), /*#__PURE__*/React.createElement(\"div\", {\n          className: 'ui attached right aligned header',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          floated: true,\n          positive: true,\n          as: Link,\n          to: `/series/${seriesItem['id']}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 65\n          }\n        }, translate('open'))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 61\n          }\n        }));\n      })))));\n    }\n    /*else {\n        return (\n            <MenuContainer>\n                <Message warning header='Not series!' content='Not series found for study'/>\n            </MenuContainer>\n        );\n    }*/\n\n  }\n\n}","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/src/pages/StudySeriesPage.js"],"names":["React","Component","Button","Checkbox","Divider","Dropdown","Form","Grid","Header","Input","Message","Radio","Segment","Select","Table","TextArea","StudiesService","Link","Translate","options","patientMatcherOptions","StudySeriesPage","constructor","props","state","study","studyId","match","params","id","setState","bind","componentWillMount","findStudyById","render","series","length","translate","map","seriesItem","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Button, Checkbox, Divider, Dropdown, Form, Grid, Header, Input, Message, Radio, Segment, Select, Table,\n    TextArea\n} from \"semantic-ui-react\";\nimport StudiesService from \"../services/DicomService\";\n//import MenuContainer from \"../components/common/MenuContainer\";\nimport {Link} from \"react-router-dom\";\nimport {Translate} from \"react-localize-redux\";\n\nconst options = [\n    /*\n    {key: 'DX', text: 'DX', value: 'DX'},\n    {key: 'MR', text: 'MR', value: 'MR'},\n    {key: 'CT', text: 'CT', value: 'CT'},\n    {key: 'US', text: 'US', value: 'US'},\n    {key: 'ECG', text: 'ECG', value: 'ECG'},\n    {key: 'XA', text: 'XA', value: 'XA'},\n    {key: 'OT', text: 'OT', value: 'OT'},\n    */\n];\n\nconst patientMatcherOptions = [\n    /*\n    {key: 'EXACT', text: 'EXACT', value: 'EXACT'},\n    {key: 'STARTS_WITH', text: 'STARTS_WITH', value: 'STARTS_WITH'},\n    {key: 'ENDS_WITH', text: 'ENDS_WITH', value: 'ENDS_WITH'},\n    {key: 'FUZZY', text: 'FUZZY', value: 'FUZZY'},\n    */\n];\n\nexport default class StudySeriesPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            study: {},\n            studyId: props.match.params.id\n        };\n        this.setState.bind(this);\n    }\n\n    componentWillMount() {\n        StudiesService.findStudyById(this.state.studyId, study => {\n            this.setState({study: study})\n        });\n    }\n\n    render() {\n        const study = this.state.study;\n        const series = this.state.study['series'];\n        if (series && series.length > 0) {\n            return (\n                \n                    <Translate>\n                        {\n                            (translate) => (\n                                <Grid columns='equal'>\n                                    <Grid.Row>\n                                        <Grid.Column width={5}>\n                                            <Header as='h3' inverted color='blue'\n                                                    attached>{translate('patient.patient')}</Header>\n                                            <Segment inverted attached>\n                                                <h4>{study['patient']['patient_name'] || translate('patient.anonymized')}</h4>\n                                                {translate('patient.id')}: <b>{study['patient']['patient_id']}</b>\n                                                <br/>\n                                                {translate('patient.gender')}: <b>{study['patient']['patient_sex']}</b>\n                                                <br/>\n                                                {translate('patient.age')}: <b>{study['patient']['patient_age']}</b>\n                                            </Segment>\n                                            <Header as='h3' inverted color='blue'\n                                                    attached>{translate('study.study')}</Header>\n                                            <Segment inverted attached>\n                                                <h4>{study['study_description']}</h4>\n                                                {translate('study.date')}: <b>{study['study_date'] || '––'}</b>\n                                                <br/>\n                                                {translate('study.referringPhysician')}: <b>{study['referring_physician'] || '––'}</b>\n                                            </Segment>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Form>\n                                                <Form.Group widths='equal'>\n                                                    <Form.Input\n                                                        label={translate('study.id')}\n                                                        action={<Dropdown button basic floating\n                                                                          options={patientMatcherOptions}\n                                                                          defaultValue='EXACT'/>}\n                                                        icon='search'\n                                                        iconPosition='left'\n                                                        placeholder={translate('study.id')}\n                                                    />\n                                                    <Form.Field control={Select} label={translate('study.modality')}\n                                                                options={options}\n                                                                placeholder={translate('study.modality')}/>\n                                                </Form.Group>\n                                            </Form>\n                                            {\n                                                series.map((seriesItem, index) => {\n                                                    return (\n                                                        <div>\n                                                            <Header as='h4' inverted color='white'\n                                                                    attached textAlign={'left'}>\n                                                                {seriesItem['protocol_name'] || `${translate('series.series')} ${index + 1}`}\n                                                            </Header>\n                                                            <Segment attached>\n                                                                <b>{translate('series.description')}: </b> {seriesItem['series_description'] || '––'}\n                                                                <br/>\n                                                                <b>{translate('series.modality')}: </b>{seriesItem['modality']}\n                                                                <br/>\n                                                                <b>{translate('series.bodyPartExamined')}: </b>{seriesItem['body_part_examined'] || '––'}\n                                                                <br/>\n                                                                <b>{translate('series.patientPosition')}: </b>{seriesItem['patient_position']}\n                                                                <br/>\n                                                                <b>{translate('series.seriesNumber')}: </b>{seriesItem['series_number']}\n                                                                <br/>\n                                                                <b>{translate('imagesCount')}: </b>{seriesItem['images_count']}\n                                                            </Segment>\n                                                            <div className={'ui attached right aligned header'}>\n                                                                <Button floated positive as={Link}\n                                                                        to={`/series/${seriesItem['id']}`}>{translate('open')}</Button>\n                                                            </div>\n                                                            <br/>\n                                                        </div>\n                                                    );\n                                                })\n                                            }\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            )\n                        }\n                    </Translate>\n                \n            );\n        }\n        /*else {\n            return (\n                <MenuContainer>\n                    <Message warning header='Not series!' content='Not series found for study'/>\n                </MenuContainer>\n            );\n        }*/\n    }\n}"]},"metadata":{},"sourceType":"module"}