{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\n\nvar Selector = function Selector(props, ref) {\n  var inputRef = React.useRef(null);\n  var prefixCls = props.prefixCls,\n      multiple = props.multiple,\n      open = props.open,\n      mode = props.mode,\n      showSearch = props.showSearch,\n      onSearch = props.onSearch,\n      onToggleOpen = props.onToggleOpen,\n      onInputKeyDown = props.onInputKeyDown,\n      domRef = props.domRef; // ======================= Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  }); // ====================== Input ======================\n\n  var _useLock = useLock(0),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getInputMouseDown = _useLock2[0],\n      setInputMouseDown = _useLock2[1];\n\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which;\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      event.preventDefault();\n    }\n\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n\n    if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n      onToggleOpen(true);\n    }\n  };\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n\n\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  }; // When paste come, ignore next onChange\n\n\n  var pasteClearRef = React.useRef(false);\n\n  var triggerOnSearch = function triggerOnSearch(value) {\n    if (onSearch(value) !== false) {\n      onToggleOpen(true);\n    }\n  };\n\n  var onInputChange = function onInputChange(_ref) {\n    var value = _ref.target.value;\n\n    if (pasteClearRef.current) {\n      pasteClearRef.current = false;\n      return;\n    }\n\n    triggerOnSearch(value);\n  };\n\n  var onInputPaste = function onInputPaste(e) {\n    var clipboardData = e.clipboardData;\n    var value = clipboardData.getData('text'); // Block next onChange\n\n    pasteClearRef.current = true;\n    setTimeout(function () {\n      pasteClearRef.current = false;\n    });\n    triggerOnSearch(value);\n  }; // ====================== Focus ======================\n  // Should focus input if click the selector\n\n\n  var onClick = function onClick(_ref2) {\n    var target = _ref2.target;\n\n    if (target !== inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    var inputMouseDown = getInputMouseDown();\n\n    if (event.target !== inputRef.current && !inputMouseDown) {\n      event.preventDefault();\n    }\n\n    if (mode !== 'combobox' && (!showSearch || !inputMouseDown) || !open) {\n      if (open) {\n        onSearch('');\n      }\n\n      onToggleOpen();\n    }\n  }; // ================= Inner Selector ==================\n\n\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange,\n    onInputPaste: onInputPaste\n  };\n  var selectNode = multiple ? React.createElement(MultipleSelector, Object.assign({}, props, sharedProps)) : React.createElement(SingleSelector, Object.assign({}, props, sharedProps));\n  return React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, selectNode);\n};\n\nvar ForwardSelector = React.forwardRef(Selector);\nForwardSelector.displayName = 'Selector';\nexport default ForwardSelector;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/PACS-VTS/PACS/pacs/node_modules/rc-select/es/Selector/index.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","React","KeyCode","MultipleSelector","SingleSelector","useLock","Selector","props","ref","inputRef","useRef","prefixCls","multiple","open","mode","showSearch","onSearch","onToggleOpen","onInputKeyDown","domRef","useImperativeHandle","focus","current","blur","_useLock","_useLock2","getInputMouseDown","setInputMouseDown","onInternalInputKeyDown","event","which","UP","DOWN","preventDefault","SHIFT","TAB","BACKSPACE","ESC","includes","onInternalInputMouseDown","pasteClearRef","triggerOnSearch","onInputChange","_ref","target","onInputPaste","e","clipboardData","getData","setTimeout","onClick","_ref2","onMouseDown","inputMouseDown","sharedProps","onInputMouseDown","selectNode","createElement","assign","className","concat","ForwardSelector","forwardRef","displayName"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\n\nvar Selector = function Selector(props, ref) {\n  var inputRef = React.useRef(null);\n  var prefixCls = props.prefixCls,\n      multiple = props.multiple,\n      open = props.open,\n      mode = props.mode,\n      showSearch = props.showSearch,\n      onSearch = props.onSearch,\n      onToggleOpen = props.onToggleOpen,\n      onInputKeyDown = props.onInputKeyDown,\n      domRef = props.domRef; // ======================= Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  }); // ====================== Input ======================\n\n  var _useLock = useLock(0),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getInputMouseDown = _useLock2[0],\n      setInputMouseDown = _useLock2[1];\n\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which;\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      event.preventDefault();\n    }\n\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n\n    if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n      onToggleOpen(true);\n    }\n  };\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n\n\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  }; // When paste come, ignore next onChange\n\n\n  var pasteClearRef = React.useRef(false);\n\n  var triggerOnSearch = function triggerOnSearch(value) {\n    if (onSearch(value) !== false) {\n      onToggleOpen(true);\n    }\n  };\n\n  var onInputChange = function onInputChange(_ref) {\n    var value = _ref.target.value;\n\n    if (pasteClearRef.current) {\n      pasteClearRef.current = false;\n      return;\n    }\n\n    triggerOnSearch(value);\n  };\n\n  var onInputPaste = function onInputPaste(e) {\n    var clipboardData = e.clipboardData;\n    var value = clipboardData.getData('text'); // Block next onChange\n\n    pasteClearRef.current = true;\n    setTimeout(function () {\n      pasteClearRef.current = false;\n    });\n    triggerOnSearch(value);\n  }; // ====================== Focus ======================\n  // Should focus input if click the selector\n\n\n  var onClick = function onClick(_ref2) {\n    var target = _ref2.target;\n\n    if (target !== inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    var inputMouseDown = getInputMouseDown();\n\n    if (event.target !== inputRef.current && !inputMouseDown) {\n      event.preventDefault();\n    }\n\n    if (mode !== 'combobox' && (!showSearch || !inputMouseDown) || !open) {\n      if (open) {\n        onSearch('');\n      }\n\n      onToggleOpen();\n    }\n  }; // ================= Inner Selector ==================\n\n\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange,\n    onInputPaste: onInputPaste\n  };\n  var selectNode = multiple ? React.createElement(MultipleSelector, Object.assign({}, props, sharedProps)) : React.createElement(SingleSelector, Object.assign({}, props, sharedProps));\n  return React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, selectNode);\n};\n\nvar ForwardSelector = React.forwardRef(Selector);\nForwardSelector.displayName = 'Selector';\nexport default ForwardSelector;"]},"metadata":{},"sourceType":"module"}