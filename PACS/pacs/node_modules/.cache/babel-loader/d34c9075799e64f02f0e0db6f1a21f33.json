{"ast":null,"code":"import * as React from 'react';\nimport TimeUnitColumn from './TimeUnitColumn';\nimport { leftPad } from '../../utils/miscUtil';\n\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n\n  for (var i = start; i <= end; i += step) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n\n  return units;\n}\n\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n      prefixCls = props.prefixCls,\n      operationRef = props.operationRef,\n      activeColumnIndex = props.activeColumnIndex,\n      value = props.value,\n      showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      use12Hours = props.use12Hours,\n      _props$hourStep = props.hourStep,\n      hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n      _props$minuteStep = props.minuteStep,\n      minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n      _props$secondStep = props.secondStep,\n      secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n      disabledHours = props.disabledHours,\n      disabledMinutes = props.disabledMinutes,\n      disabledSeconds = props.disabledSeconds,\n      hideDisabledOptions = props.hideDisabledOptions,\n      onSelect = props.onSelect;\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var hour = value ? generateConfig.getHour(value) : -1;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    newDate = generateConfig.setSecond(newDate, mergedSecond);\n    newDate = generateConfig.setMinute(newDate, mergedMinute);\n    newDate = generateConfig.setHour(newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12);\n    return newDate;\n  }; // ========================= Unit =========================\n\n\n  var hours = generateUnits(0, use12Hours ? 11 : 23, hourStep, disabledHours && disabledHours()); // Should additional logic to handle 12 hours\n\n  if (use12Hours && hour !== -1) {\n    isPM = hour >= 12;\n    hour %= 12;\n    hours[0].label = '12';\n  }\n\n  var minutes = generateUnits(0, 59, minuteStep, disabledMinutes && disabledMinutes(hour));\n  var seconds = generateUnits(0, 59, secondStep, disabledSeconds && disabledSeconds(hour, minute)); // ====================== Operations ======================\n\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  }; // ======================== Render ========================\n\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  } // Hour\n\n\n  addColumnNode(showHour, React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  }); // Minute\n\n  addColumnNode(showMinute, React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  }); // Second\n\n  addColumnNode(showSecond, React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  }); // 12 Hours\n\n  var PMIndex = -1;\n\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n\n  addColumnNode(use12Hours === true, React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0\n  }, {\n    label: 'PM',\n    value: 1\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref) {\n    var node = _ref.node;\n    return node;\n  }));\n}\n\nexport default TimeBody;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/rc-picker/es/panels/TimePanel/TimeBody.js"],"names":["React","TimeUnitColumn","leftPad","generateUnits","start","end","step","disabledUnits","units","i","push","label","value","disabled","includes","TimeBody","props","generateConfig","prefixCls","operationRef","activeColumnIndex","showHour","showMinute","showSecond","use12Hours","_props$hourStep","hourStep","_props$minuteStep","minuteStep","_props$secondStep","secondStep","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","onSelect","columns","contentPrefixCls","concat","columnPrefixCls","isPM","hour","getHour","minute","getMinute","second","getSecond","setTime","isNewPM","newHour","newMinute","newSecond","newDate","getNow","mergedHour","Math","max","mergedMinute","mergedSecond","setSecond","setMinute","setHour","hours","minutes","seconds","current","onUpDown","diff","column","valueIndex","findIndex","unit","unitLen","length","nextUnit","addColumnNode","condition","node","columnValue","onColumnSelect","cloneElement","active","createElement","key","num","PMIndex","className","map","_ref"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport TimeUnitColumn from './TimeUnitColumn';\nimport { leftPad } from '../../utils/miscUtil';\n\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n\n  for (var i = start; i <= end; i += step) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n\n  return units;\n}\n\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n      prefixCls = props.prefixCls,\n      operationRef = props.operationRef,\n      activeColumnIndex = props.activeColumnIndex,\n      value = props.value,\n      showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      use12Hours = props.use12Hours,\n      _props$hourStep = props.hourStep,\n      hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n      _props$minuteStep = props.minuteStep,\n      minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n      _props$secondStep = props.secondStep,\n      secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n      disabledHours = props.disabledHours,\n      disabledMinutes = props.disabledMinutes,\n      disabledSeconds = props.disabledSeconds,\n      hideDisabledOptions = props.hideDisabledOptions,\n      onSelect = props.onSelect;\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var hour = value ? generateConfig.getHour(value) : -1;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    newDate = generateConfig.setSecond(newDate, mergedSecond);\n    newDate = generateConfig.setMinute(newDate, mergedMinute);\n    newDate = generateConfig.setHour(newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12);\n    return newDate;\n  }; // ========================= Unit =========================\n\n\n  var hours = generateUnits(0, use12Hours ? 11 : 23, hourStep, disabledHours && disabledHours()); // Should additional logic to handle 12 hours\n\n  if (use12Hours && hour !== -1) {\n    isPM = hour >= 12;\n    hour %= 12;\n    hours[0].label = '12';\n  }\n\n  var minutes = generateUnits(0, 59, minuteStep, disabledMinutes && disabledMinutes(hour));\n  var seconds = generateUnits(0, 59, secondStep, disabledSeconds && disabledSeconds(hour, minute)); // ====================== Operations ======================\n\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  }; // ======================== Render ========================\n\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  } // Hour\n\n\n  addColumnNode(showHour, React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  }); // Minute\n\n  addColumnNode(showMinute, React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  }); // Second\n\n  addColumnNode(showSecond, React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  }); // 12 Hours\n\n  var PMIndex = -1;\n\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n\n  addColumnNode(use12Hours === true, React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0\n  }, {\n    label: 'PM',\n    value: 1\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref) {\n    var node = _ref.node;\n    return node;\n  }));\n}\n\nexport default TimeBody;"]},"metadata":{},"sourceType":"module"}