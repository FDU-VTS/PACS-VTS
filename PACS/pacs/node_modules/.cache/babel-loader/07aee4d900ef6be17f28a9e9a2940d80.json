{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport RawAsyncValidator from 'async-validator';\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { setValues } from './valueUtil';\nimport { defaultValidateMessages } from './messages'; // Remove incorrect original ts define\n\nvar AsyncValidator = RawAsyncValidator;\n/**\n * Replace with template.\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\n */\n\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\n    var key = str.slice(2, -1);\n    return kv[key];\n  });\n}\n/**\n * We use `async-validator` to validate rules. So have to hot replace the message with validator.\n * { required: '${name} is required' } => { required: () => 'field is required' }\n */\n\n\nfunction convertMessages(messages, name, rule, messageVariables) {\n  var kv = _objectSpread({}, rule, {\n    name: name,\n    enum: (rule.enum || []).join(', ')\n  });\n\n  var replaceFunc = function replaceFunc(template, additionalKV) {\n    return function () {\n      return replaceMessage(template, _objectSpread({}, kv, {}, additionalKV));\n    };\n  };\n  /* eslint-disable no-param-reassign */\n\n\n  function fillTemplate(source) {\n    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Object.keys(source).forEach(function (ruleName) {\n      var value = source[ruleName];\n\n      if (typeof value === 'string') {\n        target[ruleName] = replaceFunc(value, messageVariables);\n      } else if (value && _typeof(value) === 'object') {\n        target[ruleName] = {};\n        fillTemplate(value, target[ruleName]);\n      } else {\n        target[ruleName] = value;\n      }\n    });\n    return target;\n  }\n  /* eslint-enable */\n\n\n  return fillTemplate(setValues({}, defaultValidateMessages, messages));\n}\n\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\n/**\n * We use `async-validator` to validate the value.\n * But only check one value in a time to avoid namePath validate issue.\n */\n\n\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, value, rule, options, messageVariables) {\n    var cloneRule, subRuleField, validator, messages, result, subResults;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cloneRule = _objectSpread({}, rule); // We should special handle array validate\n\n            subRuleField = null;\n\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\n            messages = convertMessages(options.validateMessages, name, cloneRule, messageVariables);\n            validator.messages(messages);\n            result = [];\n            _context.prev = 7;\n            _context.next = 10;\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](7);\n\n            if (_context.t0.errors) {\n              result = _context.t0.errors.map(function (_ref, index) {\n                var message = _ref.message;\n                return (// Wrap ReactNode with `key`\n                  React.isValidElement(message) ? React.cloneElement(message, {\n                    key: \"error_\".concat(index)\n                  }) : message\n                );\n              });\n            } else {\n              console.error(_context.t0);\n              result = [messages.default()];\n            }\n\n          case 15:\n            if (!(!result.length && subRuleField)) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 18;\n            return Promise.all(value.map(function (subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n\n          case 18:\n            subResults = _context.sent;\n            return _context.abrupt(\"return\", subResults.reduce(function (prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n\n          case 20:\n            return _context.abrupt(\"return\", result);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[7, 12]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\n\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\n  var name = namePath.join('.'); // Fill rule with context\n\n  var filledRules = rules.map(function (currentRule) {\n    var originValidatorFunc = currentRule.validator;\n\n    if (!originValidatorFunc) {\n      return currentRule;\n    }\n\n    return _objectSpread({}, currentRule, {\n      validator: function validator(rule, val, callback) {\n        var hasPromise = false; // Wrap callback only accept when promise not provided\n\n        var wrappedCallback = function wrappedCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          } // Wait a tick to make sure return type is a promise\n\n\n          Promise.resolve().then(function () {\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\n\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        }; // Get promise\n\n\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n        /**\n         * 1. Use promise as the first priority.\n         * 2. If promise not exist, use callback with warning instead\n         */\n\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\n\n        if (hasPromise) {\n          promise.then(function () {\n            callback();\n          }).catch(function (err) {\n            callback(err);\n          });\n        }\n      }\n    });\n  });\n  var rulePromises = filledRules.map(function (rule) {\n    return validateRule(name, value, rule, options, messageVariables);\n  });\n  var summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\n    if (!errors.length) {\n      return [];\n    }\n\n    return Promise.reject(errors);\n  }); // Internal catch error to avoid console error log.\n\n  summaryPromise.catch(function (e) {\n    return e;\n  });\n  return summaryPromise;\n}\n\nfunction finishOnAllFailed(_x6) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rulePromises) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\n              var _ref2;\n\n              var errors = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(errorsList));\n\n              return errors;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction finishOnFirstFailed(_x7) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\n\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rulePromises) {\n    var count;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            count = 0;\n            return _context3.abrupt(\"return\", new Promise(function (resolve) {\n              rulePromises.forEach(function (promise) {\n                promise.then(function (errors) {\n                  if (errors.length) {\n                    resolve(errors);\n                  }\n\n                  count += 1;\n\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS-VTS/PACS/pacs/node_modules/rc-field-form/es/utils/validateUtil.js"],"names":["_regeneratorRuntime","_toConsumableArray","_asyncToGenerator","_typeof","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","RawAsyncValidator","React","warning","setValues","defaultValidateMessages","AsyncValidator","replaceMessage","template","kv","replace","str","slice","convertMessages","messages","name","rule","messageVariables","enum","join","replaceFunc","additionalKV","fillTemplate","undefined","ruleName","value","validateRule","_x","_x2","_x3","_x4","_x5","_validateRule","mark","_callee","options","cloneRule","subRuleField","validator","result","subResults","wrap","_callee$","_context","prev","next","type","defaultField","validateMessages","Promise","resolve","validate","t0","errors","map","_ref","index","message","isValidElement","cloneElement","concat","console","error","default","all","subValue","sent","abrupt","reduce","stop","validateRules","namePath","rules","validateFirst","filledRules","currentRule","originValidatorFunc","val","callback","hasPromise","wrappedCallback","_len","args","Array","_key","then","promise","catch","err","rulePromises","summaryPromise","finishOnFirstFailed","finishOnAllFailed","reject","e","_x6","_finishOnAllFailed","_callee2","_callee2$","_context2","errorsList","_ref2","_x7","_finishOnFirstFailed","_callee3","count","_callee3$","_context3"],"mappings":"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","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport RawAsyncValidator from 'async-validator';\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { setValues } from './valueUtil';\nimport { defaultValidateMessages } from './messages'; // Remove incorrect original ts define\n\nvar AsyncValidator = RawAsyncValidator;\n/**\n * Replace with template.\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\n */\n\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\n    var key = str.slice(2, -1);\n    return kv[key];\n  });\n}\n/**\n * We use `async-validator` to validate rules. So have to hot replace the message with validator.\n * { required: '${name} is required' } => { required: () => 'field is required' }\n */\n\n\nfunction convertMessages(messages, name, rule, messageVariables) {\n  var kv = _objectSpread({}, rule, {\n    name: name,\n    enum: (rule.enum || []).join(', ')\n  });\n\n  var replaceFunc = function replaceFunc(template, additionalKV) {\n    return function () {\n      return replaceMessage(template, _objectSpread({}, kv, {}, additionalKV));\n    };\n  };\n  /* eslint-disable no-param-reassign */\n\n\n  function fillTemplate(source) {\n    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Object.keys(source).forEach(function (ruleName) {\n      var value = source[ruleName];\n\n      if (typeof value === 'string') {\n        target[ruleName] = replaceFunc(value, messageVariables);\n      } else if (value && _typeof(value) === 'object') {\n        target[ruleName] = {};\n        fillTemplate(value, target[ruleName]);\n      } else {\n        target[ruleName] = value;\n      }\n    });\n    return target;\n  }\n  /* eslint-enable */\n\n\n  return fillTemplate(setValues({}, defaultValidateMessages, messages));\n}\n\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\n/**\n * We use `async-validator` to validate the value.\n * But only check one value in a time to avoid namePath validate issue.\n */\n\n\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, value, rule, options, messageVariables) {\n    var cloneRule, subRuleField, validator, messages, result, subResults;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cloneRule = _objectSpread({}, rule); // We should special handle array validate\n\n            subRuleField = null;\n\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\n            messages = convertMessages(options.validateMessages, name, cloneRule, messageVariables);\n            validator.messages(messages);\n            result = [];\n            _context.prev = 7;\n            _context.next = 10;\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](7);\n\n            if (_context.t0.errors) {\n              result = _context.t0.errors.map(function (_ref, index) {\n                var message = _ref.message;\n                return (// Wrap ReactNode with `key`\n                  React.isValidElement(message) ? React.cloneElement(message, {\n                    key: \"error_\".concat(index)\n                  }) : message\n                );\n              });\n            } else {\n              console.error(_context.t0);\n              result = [messages.default()];\n            }\n\n          case 15:\n            if (!(!result.length && subRuleField)) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 18;\n            return Promise.all(value.map(function (subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n\n          case 18:\n            subResults = _context.sent;\n            return _context.abrupt(\"return\", subResults.reduce(function (prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n\n          case 20:\n            return _context.abrupt(\"return\", result);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[7, 12]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\n\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\n  var name = namePath.join('.'); // Fill rule with context\n\n  var filledRules = rules.map(function (currentRule) {\n    var originValidatorFunc = currentRule.validator;\n\n    if (!originValidatorFunc) {\n      return currentRule;\n    }\n\n    return _objectSpread({}, currentRule, {\n      validator: function validator(rule, val, callback) {\n        var hasPromise = false; // Wrap callback only accept when promise not provided\n\n        var wrappedCallback = function wrappedCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          // Wait a tick to make sure return type is a promise\n          Promise.resolve().then(function () {\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\n\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        }; // Get promise\n\n\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n        /**\n         * 1. Use promise as the first priority.\n         * 2. If promise not exist, use callback with warning instead\n         */\n\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\n\n        if (hasPromise) {\n          promise.then(function () {\n            callback();\n          }).catch(function (err) {\n            callback(err);\n          });\n        }\n      }\n    });\n  });\n  var rulePromises = filledRules.map(function (rule) {\n    return validateRule(name, value, rule, options, messageVariables);\n  });\n  var summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\n    if (!errors.length) {\n      return [];\n    }\n\n    return Promise.reject(errors);\n  }); // Internal catch error to avoid console error log.\n\n  summaryPromise.catch(function (e) {\n    return e;\n  });\n  return summaryPromise;\n}\n\nfunction finishOnAllFailed(_x6) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rulePromises) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\n              var _ref2;\n\n              var errors = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(errorsList));\n\n              return errors;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction finishOnFirstFailed(_x7) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\n\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rulePromises) {\n    var count;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            count = 0;\n            return _context3.abrupt(\"return\", new Promise(function (resolve) {\n              rulePromises.forEach(function (promise) {\n                promise.then(function (errors) {\n                  if (errors.length) {\n                    resolve(errors);\n                  }\n\n                  count += 1;\n\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}"]},"metadata":{},"sourceType":"module"}