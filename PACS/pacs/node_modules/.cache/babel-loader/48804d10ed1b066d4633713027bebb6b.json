{"ast":null,"code":"var _jsxFileName = \"/Users/bly/Documents/\\u5DE5\\u4F5C/\\u5B9E\\u9A8C\\u5BA4/\\u9879\\u76EE/\\u533B\\u7597\\u7CFB\\u7EDF/PACS/pacs/src/components/PatientsTable.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\nclass PatientsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      searchedColumn: ''\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Space, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }\n        }),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Reset\"))),\n      filterIcon: filtered => /*#__PURE__*/React.createElement(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.setState.bind(this);\n  }\n\n  render() {\n    const columns = [{\n      title: 'Patient ID',\n      dataIndex: 'patient_id',\n      key: 'ppatient_id',\n      width: '15%',\n      ...this.getColumnSearchProps('patient_id')\n    }, {\n      title: 'Patient Name',\n      dataIndex: 'patient_name',\n      key: 'ppatient_name',\n      width: '17.5%',\n      ...this.getColumnSearchProps('patient_name')\n    }, {\n      title: 'Patient Gender',\n      dataIndex: 'patient_sex',\n      key: 'patient_sex',\n      width: '17.5%',\n      ...this.getColumnSearchProps('spatient_sex')\n    }, {\n      title: 'Patient Birthdate',\n      dataIndex: 'patient_birthdate',\n      key: 'patient_birthdate',\n      width: '17.5%',\n      ...this.getColumnSearchProps('patient_birthdate')\n    }, {\n      title: 'Patient Age',\n      dataIndex: 'patient_age',\n      key: 'patient_age',\n      width: '15%',\n      ...this.getColumnSearchProps('patient_age')\n    }, {\n      title: 'Image Count',\n      dataIndex: 'image_count',\n      key: 'image_count',\n      ...this.getColumnSearchProps('image_count')\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: columns,\n      dataSource: this.props.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default PatientsTable;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/src/components/PatientsTable.js"],"names":["React","ReactDOM","Table","Input","Button","Space","Highlighter","SearchOutlined","PatientsTable","Component","constructor","props","state","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","setState","bind","columns","title","key","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\n\nclass PatientsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setState.bind(this);\n  }\n  state = {\n    searchText: '',\n    searchedColumn: '',\n  };\n  \n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: 'Patient ID',\n        dataIndex: 'patient_id',\n        key: 'ppatient_id',\n        width: '15%',\n        ...this.getColumnSearchProps('patient_id'),\n      },\n      {\n        title: 'Patient Name',\n        dataIndex: 'patient_name',\n        key: 'ppatient_name',\n        width: '17.5%',\n        ...this.getColumnSearchProps('patient_name'),\n      },\n      {\n        title: 'Patient Gender',\n        dataIndex: 'patient_sex',\n        key: 'patient_sex',\n        width: '17.5%',\n        ...this.getColumnSearchProps('spatient_sex'),\n      },\n      {\n        title: 'Patient Birthdate',\n        dataIndex: 'patient_birthdate',\n        key: 'patient_birthdate',\n        width: '17.5%',\n        ...this.getColumnSearchProps('patient_birthdate'),\n      },\n      {\n        title: 'Patient Age',\n        dataIndex: 'patient_age',\n        key: 'patient_age',\n        width: '15%',\n        ...this.getColumnSearchProps('patient_age'),\n      },\n      {\n        title: 'Image Count',\n        dataIndex: 'image_count',\n        key: 'image_count',\n        ...this.getColumnSearchProps('image_count'),\n      },\n    ];\n    return (\n      <div>\n        <Table columns={columns} dataSource={this.props.data} />\n      </div>\n      )\n  }\n}\n\n\n\nexport default PatientsTable;"]},"metadata":{},"sourceType":"module"}