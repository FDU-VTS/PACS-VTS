{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getUnhandledProps, META, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = ['as', 'className', 'sorted'];\nTableHeaderCell._meta = {\n  name: 'TableHeaderCell',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table'\n};\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js"],"names":["_extends","cx","PropTypes","React","customPropTypes","getUnhandledProps","META","useValueAndKey","TableCell","TableHeaderCell","props","as","className","sorted","classes","rest","createElement","handledProps","_meta","name","type","TYPES","COLLECTION","parent","propTypes","process","env","NODE_ENV","string","oneOf","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,IAA7C,EAAmDC,cAAnD,QAAyE,WAAzE;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,EAAE,GAAGD,KAAK,CAACC,EAAf;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,MAAM,GAAGH,KAAK,CAACG,MAFnB;AAIA,MAAIC,OAAO,GAAGb,EAAE,CAACM,cAAc,CAACM,MAAD,EAAS,QAAT,CAAf,EAAmCD,SAAnC,CAAhB;AACA,MAAIG,IAAI,GAAGV,iBAAiB,CAACI,eAAD,EAAkBC,KAAlB,CAA5B;AAEA,SAAOP,KAAK,CAACa,aAAN,CAAoBR,SAApB,EAA+BR,QAAQ,CAAC,EAAD,EAAKe,IAAL,EAAW;AAAEJ,IAAAA,EAAE,EAAEA,EAAN;AAAUC,IAAAA,SAAS,EAAEE;AAArB,GAAX,CAAvC,CAAP;AACD;;AAEDL,eAAe,CAACQ,YAAhB,GAA+B,CAAC,IAAD,EAAO,WAAP,EAAoB,QAApB,CAA/B;AACAR,eAAe,CAACS,KAAhB,GAAwB;AACtBC,EAAAA,IAAI,EAAE,iBADgB;AAEtBC,EAAAA,IAAI,EAAEd,IAAI,CAACe,KAAL,CAAWC,UAFK;AAGtBC,EAAAA,MAAM,EAAE;AAHc,CAAxB;AAMAd,eAAe,CAACe,SAAhB,GAA4BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClE;AACAhB,EAAAA,EAAE,EAAEP,eAAe,CAACO,EAF8C;;AAIlE;AACAC,EAAAA,SAAS,EAAEV,SAAS,CAAC0B,MAL6C;;AAOlE;AACAf,EAAAA,MAAM,EAAEX,SAAS,CAAC2B,KAAV,CAAgB,CAAC,WAAD,EAAc,YAAd,CAAhB;AAR0D,CAAxC,GASxB,EATJ;AAWApB,eAAe,CAACqB,YAAhB,GAA+B;AAC7BnB,EAAAA,EAAE,EAAE;AADyB,CAA/B;AAIA,eAAeF,eAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { customPropTypes, getUnhandledProps, META, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n\n/**\n * A table can have a header cell.\n */\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n\n  return React.createElement(TableCell, _extends({}, rest, { as: as, className: classes }));\n}\n\nTableHeaderCell.handledProps = ['as', 'className', 'sorted'];\nTableHeaderCell._meta = {\n  name: 'TableHeaderCell',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\n\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\n\nexport default TableHeaderCell;"]},"metadata":{},"sourceType":"module"}