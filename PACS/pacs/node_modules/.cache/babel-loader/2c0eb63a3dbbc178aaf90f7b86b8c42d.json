{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _invoke from 'lodash/invoke';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport FormButton from './FormButton';\nimport FormCheckbox from './FormCheckbox';\nimport FormDropdown from './FormDropdown';\nimport FormField from './FormField';\nimport FormGroup from './FormGroup';\nimport FormInput from './FormInput';\nimport FormRadio from './FormRadio';\nimport FormSelect from './FormSelect';\nimport FormTextArea from './FormTextArea';\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nvar Form = function (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Form.__proto__ || Object.getPrototypeOf(Form)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Form, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          action = _props.action,\n          children = _props.children,\n          className = _props.className,\n          error = _props.error,\n          inverted = _props.inverted,\n          loading = _props.loading,\n          reply = _props.reply,\n          size = _props.size,\n          success = _props.success,\n          unstackable = _props.unstackable,\n          warning = _props.warning,\n          widths = _props.widths;\n      var classes = cx('ui', size, useKeyOnly(error, 'error'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(reply, 'reply'), useKeyOnly(success, 'success'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(warning, 'warning'), useWidthProp(widths, null, true), 'form', className);\n      var rest = getUnhandledProps(Form, this.props);\n      var ElementType = getElementType(Form, this.props);\n      return React.createElement(ElementType, _extends({}, rest, {\n        action: action,\n        className: classes,\n        onSubmit: this.handleSubmit\n      }), children);\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nForm.defaultProps = {\n  as: 'form'\n};\nForm._meta = {\n  name: 'Form',\n  type: META.TYPES.COLLECTION\n};\nForm.Field = FormField;\nForm.Button = FormButton;\nForm.Checkbox = FormCheckbox;\nForm.Dropdown = FormDropdown;\nForm.Group = FormGroup;\nForm.Input = FormInput;\nForm.Radio = FormRadio;\nForm.Select = FormSelect;\nForm.TextArea = FormTextArea;\nForm.handledProps = ['action', 'as', 'children', 'className', 'error', 'inverted', 'loading', 'onSubmit', 'reply', 'size', 'success', 'unstackable', 'warning', 'widths'];\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handleSubmit = function (e) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var action = _this2.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n    // method.\n\n    if (typeof action !== 'string') _invoke(e, 'preventDefault');\n\n    _invoke.apply(undefined, [_this2.props, 'onSubmit', e, _this2.props].concat(args));\n  };\n};\n\nForm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The HTML form action */\n  action: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Automatically show any error Message children. */\n  error: PropTypes.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** The HTML form submit handler. */\n  onSubmit: PropTypes.func,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: PropTypes.bool,\n\n  /** A form can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: PropTypes.bool,\n\n  /** A form can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Automatically show any warning Message children. */\n  warning: PropTypes.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(['equal'])\n} : {};\nexport default Form;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/collections/Form/Form.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","_invoke","_without","cx","PropTypes","React","Component","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useWidthProp","FormButton","FormCheckbox","FormDropdown","FormField","FormGroup","FormInput","FormRadio","FormSelect","FormTextArea","Form","_Component","_ref","_temp","_this","_ret","_len","arguments","length","args","Array","_key","__proto__","Object","getPrototypeOf","call","apply","concat","_initialiseProps","key","value","render","_props","props","action","children","className","error","inverted","loading","reply","size","success","unstackable","warning","widths","classes","rest","ElementType","createElement","onSubmit","handleSubmit","defaultProps","as","_meta","name","type","TYPES","COLLECTION","Field","Button","Checkbox","Dropdown","Group","Input","Radio","Select","TextArea","handledProps","_this2","e","_len2","_key2","undefined","propTypes","process","env","NODE_ENV","string","node","bool","func","oneOf","SIZES"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _invoke from 'lodash/invoke';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport { customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport FormButton from './FormButton';\nimport FormCheckbox from './FormCheckbox';\nimport FormDropdown from './FormDropdown';\nimport FormField from './FormField';\nimport FormGroup from './FormGroup';\nimport FormInput from './FormInput';\nimport FormRadio from './FormRadio';\nimport FormSelect from './FormSelect';\nimport FormTextArea from './FormTextArea';\n\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nvar Form = function (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Form.__proto__ || Object.getPrototypeOf(Form)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Form, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          action = _props.action,\n          children = _props.children,\n          className = _props.className,\n          error = _props.error,\n          inverted = _props.inverted,\n          loading = _props.loading,\n          reply = _props.reply,\n          size = _props.size,\n          success = _props.success,\n          unstackable = _props.unstackable,\n          warning = _props.warning,\n          widths = _props.widths;\n\n\n      var classes = cx('ui', size, useKeyOnly(error, 'error'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(reply, 'reply'), useKeyOnly(success, 'success'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(warning, 'warning'), useWidthProp(widths, null, true), 'form', className);\n      var rest = getUnhandledProps(Form, this.props);\n      var ElementType = getElementType(Form, this.props);\n\n      return React.createElement(\n        ElementType,\n        _extends({}, rest, {\n          action: action,\n          className: classes,\n          onSubmit: this.handleSubmit\n        }),\n        children\n      );\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nForm.defaultProps = {\n  as: 'form'\n};\nForm._meta = {\n  name: 'Form',\n  type: META.TYPES.COLLECTION\n};\nForm.Field = FormField;\nForm.Button = FormButton;\nForm.Checkbox = FormCheckbox;\nForm.Dropdown = FormDropdown;\nForm.Group = FormGroup;\nForm.Input = FormInput;\nForm.Radio = FormRadio;\nForm.Select = FormSelect;\nForm.TextArea = FormTextArea;\nForm.handledProps = ['action', 'as', 'children', 'className', 'error', 'inverted', 'loading', 'onSubmit', 'reply', 'size', 'success', 'unstackable', 'warning', 'widths'];\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handleSubmit = function (e) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var action = _this2.props.action;\n\n    // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n    // method.\n\n    if (typeof action !== 'string') _invoke(e, 'preventDefault');\n    _invoke.apply(undefined, [_this2.props, 'onSubmit', e, _this2.props].concat(args));\n  };\n};\n\nForm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The HTML form action */\n  action: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Automatically show any error Message children. */\n  error: PropTypes.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** The HTML form submit handler. */\n  onSubmit: PropTypes.func,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: PropTypes.bool,\n\n  /** A form can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: PropTypes.bool,\n\n  /** A form can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Automatically show any warning Message children. */\n  warning: PropTypes.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(['equal'])\n} : {};\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}