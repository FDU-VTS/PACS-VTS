{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI } from '../../lib';\n/**\n * A group of images.\n */\n\nfunction ImageGroup(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      size = props.size;\n  var classes = cx('ui', size, className, 'images');\n  var rest = getUnhandledProps(ImageGroup, props);\n  var ElementType = getElementType(ImageGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nImageGroup.handledProps = ['as', 'children', 'className', 'content', 'size'];\nImageGroup._meta = {\n  name: 'ImageGroup',\n  parent: 'Image',\n  type: META.TYPES.ELEMENT\n};\nImageGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of images can be formatted to have the same size. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default ImageGroup;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/elements/Image/ImageGroup.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","ImageGroup","props","children","className","content","size","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","oneOf","SIZES"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,GAAlF,QAA6F,WAA7F;AAEA;;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;AAKA,MAAIC,OAAO,GAAGf,EAAE,CAAC,IAAD,EAAOc,IAAP,EAAaF,SAAb,EAAwB,QAAxB,CAAhB;AACA,MAAII,IAAI,GAAGV,iBAAiB,CAACG,UAAD,EAAaC,KAAb,CAA5B;AACA,MAAIO,WAAW,GAAGZ,cAAc,CAACI,UAAD,EAAaC,KAAb,CAAhC;AAEA,SAAOR,KAAK,CAACgB,aAAN,CACLD,WADK,EAELlB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;AAAEJ,IAAAA,SAAS,EAAEG;AAAb,GAAX,CAFH,EAGLZ,aAAa,CAACgB,KAAd,CAAoBR,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDF,UAAU,CAACW,YAAX,GAA0B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,CAA1B;AACAX,UAAU,CAACY,KAAX,GAAmB;AACjBC,EAAAA,IAAI,EAAE,YADW;AAEjBC,EAAAA,MAAM,EAAE,OAFS;AAGjBC,EAAAA,IAAI,EAAEjB,IAAI,CAACkB,KAAL,CAAWC;AAHA,CAAnB;AAMAjB,UAAU,CAACkB,SAAX,GAAuBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC7D;AACAC,EAAAA,EAAE,EAAE3B,eAAe,CAAC2B,EAFyC;;AAI7D;AACApB,EAAAA,QAAQ,EAAEV,SAAS,CAAC+B,IALyC;;AAO7D;AACApB,EAAAA,SAAS,EAAEX,SAAS,CAACgC,MARwC;;AAU7D;AACApB,EAAAA,OAAO,EAAET,eAAe,CAAC8B,gBAXoC;;AAa7D;AACApB,EAAAA,IAAI,EAAEb,SAAS,CAACkC,KAAV,CAAgB3B,GAAG,CAAC4B,KAApB;AAduD,CAAxC,GAenB,EAfJ;AAiBA,eAAe3B,UAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI } from '../../lib';\n\n/**\n * A group of images.\n */\nfunction ImageGroup(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      size = props.size;\n\n  var classes = cx('ui', size, className, 'images');\n  var rest = getUnhandledProps(ImageGroup, props);\n  var ElementType = getElementType(ImageGroup, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nImageGroup.handledProps = ['as', 'children', 'className', 'content', 'size'];\nImageGroup._meta = {\n  name: 'ImageGroup',\n  parent: 'Image',\n  type: META.TYPES.ELEMENT\n};\n\nImageGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of images can be formatted to have the same size. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\n\nexport default ImageGroup;"]},"metadata":{},"sourceType":"module"}