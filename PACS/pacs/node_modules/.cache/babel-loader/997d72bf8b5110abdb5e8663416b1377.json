{"ast":null,"code":"var _jsxFileName = \"/Users/bly/Documents/\\u5DE5\\u4F5C/\\u5B9E\\u9A8C\\u5BA4/\\u9879\\u76EE/\\u533B\\u7597\\u7CFB\\u7EDF/PACS/pacs/src/pages/PatientsPage.js\";\nimport React, { Component } from 'react';\nimport { Translate } from 'react-localize-redux';\nimport StudiesService from \"../services/DicomService\";\nimport { Button, Dropdown, Select, Table, Form, Menu, Segment, Grid, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\"; //import MenuContainer from \"../components/common/MenuContainer\";\n\nconst filterTextToValue = {\n  'Exact equals': 'exact',\n  'Starts with': 'startswith',\n  'Ends with': 'endswith',\n  'Contains': 'contains'\n};\nconst patientMatcherOptions = [\n  /*   {key: 'exact', text: 'Точный поиск', value: 'exact'},\n     {key: 'startswith', text: 'Начинается с', value: 'startswith'},\n     {key: 'endswith', text: 'Заканчивается', value: 'endswith'},\n     {key: 'contains', text: 'Нечеткий поиск', value: 'contains'},\n     */\n];\n\nclass PatientsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handelFilter = filterText => {\n      this.setState({\n        filterText: filterText\n      });\n    };\n\n    this.state = {\n      patients: [],\n      filterText: '' //搜索时用的过滤词语\n\n    };\n    this.setState = this.setState.bind(this);\n    this.handleFindInputOnChange = this.handleFindInputOnChange.bind(this);\n  } //更新过滤词\n\n\n  componentWillMount() {\n    console.log(\"开始获取patient数据\");\n    StudiesService.findPatients(patients => {\n      console.log(\"已经获取到如下patient数据\");\n      console.log(patients);\n      this.setState({\n        patients: patients\n      });\n      console.log(patients);\n    });\n  }\n\n  handleFindInputOnChange(event) {\n    if (event.key === 'Enter') {\n      const patientName = document.getElementById('id_patient_name').value;\n      const patientId = document.getElementById('id_patient_id').value;\n      const patientNameFilter = filterTextToValue[document.getElementById('id_patient_name_filter').innerText.trim()];\n      const patientIdFilter = filterTextToValue[document.getElementById('id_patient_id_filter').innerText.trim()];\n      console.log(patientNameFilter);\n      StudiesService.findPatients(patients => {\n        console.log(this);\n        this.setState({\n          patients: patients\n        });\n      }, {\n        'patient_name': `${patientNameFilter}=${patientName}`,\n        'patient_id': `${patientIdFilter}=${patientId}`\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.patients);\n    const patients = this.state.patients;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Patients\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"\\u8F93\\u5165\\u75C5\\u4EBA\\u59D3\\u540D\\u5173\\u952E\\u5B57\\u8FDB\\u884C\\u68C0\\u7D22\"), /*#__PURE__*/React.createElement(SearchBar, {\n      filterText: this.state.filterText,\n      onFilterChange: this.handelFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      patients: patients,\n      filterText: this.state.filterText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default PatientsPage;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/src/pages/PatientsPage.js"],"names":["React","Component","Translate","StudiesService","Button","Dropdown","Select","Table","Form","Menu","Segment","Grid","Header","Link","filterTextToValue","patientMatcherOptions","PatientsPage","constructor","props","handelFilter","filterText","setState","state","patients","bind","handleFindInputOnChange","componentWillMount","console","log","findPatients","event","key","patientName","document","getElementById","value","patientId","patientNameFilter","innerText","trim","patientIdFilter","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Translate} from 'react-localize-redux';\nimport StudiesService from \"../services/DicomService\";\nimport {Button, Dropdown, Select, Table, Form, Menu, Segment, Grid, Header} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n//import MenuContainer from \"../components/common/MenuContainer\";\n\nconst filterTextToValue = {\n    'Exact equals': 'exact',\n    'Starts with': 'startswith',\n    'Ends with': 'endswith',\n    'Contains': 'contains'\n};\n\n\nconst patientMatcherOptions = [\n   \n /*   {key: 'exact', text: 'Точный поиск', value: 'exact'},\n    {key: 'startswith', text: 'Начинается с', value: 'startswith'},\n    {key: 'endswith', text: 'Заканчивается', value: 'endswith'},\n    {key: 'contains', text: 'Нечеткий поиск', value: 'contains'},\n    */\n];\n\n\nclass PatientsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patients: [],\n            filterText:'',//搜索时用的过滤词语\n        };\n        this.setState = this.setState.bind(this);\n        this.handleFindInputOnChange = this.handleFindInputOnChange.bind(this);\n    }\n\n    //更新过滤词\n    handelFilter = (filterText) => {\n        this.setState({\n            filterText:filterText\n        });\n    };\n\n    componentWillMount() {\n        console.log(\"开始获取patient数据\");\n        StudiesService.findPatients(patients => {\n            console.log(\"已经获取到如下patient数据\");\n            console.log(patients);\n            this.setState({patients: patients});\n            console.log(patients);\n        });\n    }\n\n    handleFindInputOnChange(event) {\n        if (event.key === 'Enter') {\n            const patientName = document.getElementById('id_patient_name').value;\n            const patientId = document.getElementById('id_patient_id').value;\n            const patientNameFilter = filterTextToValue[document.getElementById('id_patient_name_filter').innerText.trim()];\n            const patientIdFilter = filterTextToValue[document.getElementById('id_patient_id_filter').innerText.trim()];\n            console.log(patientNameFilter);\n            StudiesService.findPatients(patients => {\n                console.log(this);\n                this.setState({patients: patients});\n            }, {\n                'patient_name': `${patientNameFilter}=${patientName}`,\n                'patient_id': `${patientIdFilter}=${patientId}`\n            });\n        }\n    }\n\n    render() {\n        console.log(this.state.patients);\n        const patients = this.state.patients;\n        return (\n            <div>\n            <h1>Patients</h1>\n            <p>输入病人姓名关键字进行检索</p >\n            <SearchBar \n            filterText={this.state.filterText}\n            onFilterChange={this.handelFilter}/>\n            <Table patients={patients} \n            filterText={this.state.filterText}/>\n        </div>            \n        );\n    }\n}\n\nexport default PatientsPage;\n"]},"metadata":{},"sourceType":"module"}