{"ast":null,"code":"import * as React from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport CheckOutlined from '@ant-design/icons/CheckOutlined';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport SearchOutlined from '@ant-design/icons/SearchOutlined';\nexport default function getIcons(_ref) {\n  var suffixIcon = _ref.suffixIcon,\n      clearIcon = _ref.clearIcon,\n      menuItemSelectedIcon = _ref.menuItemSelectedIcon,\n      removeIcon = _ref.removeIcon,\n      loading = _ref.loading,\n      multiple = _ref.multiple; // Clear Icon\n\n  var mergedClearIcon = clearIcon;\n\n  if (!clearIcon) {\n    mergedClearIcon = /*#__PURE__*/React.createElement(CloseCircleFilled, null);\n  } // Arrow item icon\n\n\n  var mergedSuffixIcon = null;\n\n  if (suffixIcon !== undefined) {\n    mergedSuffixIcon = suffixIcon;\n  } else if (loading) {\n    mergedSuffixIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n      spin: true\n    });\n  } else {\n    mergedSuffixIcon = function mergedSuffixIcon(_ref2) {\n      var open = _ref2.open,\n          showSearch = _ref2.showSearch;\n\n      if (open && showSearch) {\n        return /*#__PURE__*/React.createElement(SearchOutlined, null);\n      }\n\n      return /*#__PURE__*/React.createElement(DownOutlined, null);\n    };\n  } // Checked item icon\n\n\n  var mergedItemIcon = null;\n\n  if (menuItemSelectedIcon !== undefined) {\n    mergedItemIcon = menuItemSelectedIcon;\n  } else if (multiple) {\n    mergedItemIcon = /*#__PURE__*/React.createElement(CheckOutlined, null);\n  } else {\n    mergedItemIcon = null;\n  }\n\n  var mergedRemoveIcon = null;\n\n  if (removeIcon !== undefined) {\n    mergedRemoveIcon = removeIcon;\n  } else {\n    mergedRemoveIcon = /*#__PURE__*/React.createElement(CloseOutlined, null);\n  }\n\n  return {\n    clearIcon: mergedClearIcon,\n    suffixIcon: mergedSuffixIcon,\n    itemIcon: mergedItemIcon,\n    removeIcon: mergedRemoveIcon\n  };\n}","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS/pacs/node_modules/antd/es/select/utils/iconUtil.js"],"names":["React","DownOutlined","LoadingOutlined","CheckOutlined","CloseOutlined","CloseCircleFilled","SearchOutlined","getIcons","_ref","suffixIcon","clearIcon","menuItemSelectedIcon","removeIcon","loading","multiple","mergedClearIcon","createElement","mergedSuffixIcon","undefined","spin","_ref2","open","showSearch","mergedItemIcon","mergedRemoveIcon","itemIcon"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AAAA,MACIC,SAAS,GAAGF,IAAI,CAACE,SADrB;AAAA,MAEIC,oBAAoB,GAAGH,IAAI,CAACG,oBAFhC;AAAA,MAGIC,UAAU,GAAGJ,IAAI,CAACI,UAHtB;AAAA,MAIIC,OAAO,GAAGL,IAAI,CAACK,OAJnB;AAAA,MAKIC,QAAQ,GAAGN,IAAI,CAACM,QALpB,CADqC,CAOrC;;AACA,MAAIC,eAAe,GAAGL,SAAtB;;AAEA,MAAI,CAACA,SAAL,EAAgB;AACdK,IAAAA,eAAe,GAAG,aAAaf,KAAK,CAACgB,aAAN,CAAoBX,iBAApB,EAAuC,IAAvC,CAA/B;AACD,GAZoC,CAYnC;;;AAGF,MAAIY,gBAAgB,GAAG,IAAvB;;AAEA,MAAIR,UAAU,KAAKS,SAAnB,EAA8B;AAC5BD,IAAAA,gBAAgB,GAAGR,UAAnB;AACD,GAFD,MAEO,IAAII,OAAJ,EAAa;AAClBI,IAAAA,gBAAgB,GAAG,aAAajB,KAAK,CAACgB,aAAN,CAAoBd,eAApB,EAAqC;AACnEiB,MAAAA,IAAI,EAAE;AAD6D,KAArC,CAAhC;AAGD,GAJM,MAIA;AACLF,IAAAA,gBAAgB,GAAG,SAASA,gBAAT,CAA0BG,KAA1B,EAAiC;AAClD,UAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAAA,UACIC,UAAU,GAAGF,KAAK,CAACE,UADvB;;AAGA,UAAID,IAAI,IAAIC,UAAZ,EAAwB;AACtB,eAAO,aAAatB,KAAK,CAACgB,aAAN,CAAoBV,cAApB,EAAoC,IAApC,CAApB;AACD;;AAED,aAAO,aAAaN,KAAK,CAACgB,aAAN,CAAoBf,YAApB,EAAkC,IAAlC,CAApB;AACD,KATD;AAUD,GAlCoC,CAkCnC;;;AAGF,MAAIsB,cAAc,GAAG,IAArB;;AAEA,MAAIZ,oBAAoB,KAAKO,SAA7B,EAAwC;AACtCK,IAAAA,cAAc,GAAGZ,oBAAjB;AACD,GAFD,MAEO,IAAIG,QAAJ,EAAc;AACnBS,IAAAA,cAAc,GAAG,aAAavB,KAAK,CAACgB,aAAN,CAAoBb,aAApB,EAAmC,IAAnC,CAA9B;AACD,GAFM,MAEA;AACLoB,IAAAA,cAAc,GAAG,IAAjB;AACD;;AAED,MAAIC,gBAAgB,GAAG,IAAvB;;AAEA,MAAIZ,UAAU,KAAKM,SAAnB,EAA8B;AAC5BM,IAAAA,gBAAgB,GAAGZ,UAAnB;AACD,GAFD,MAEO;AACLY,IAAAA,gBAAgB,GAAG,aAAaxB,KAAK,CAACgB,aAAN,CAAoBZ,aAApB,EAAmC,IAAnC,CAAhC;AACD;;AAED,SAAO;AACLM,IAAAA,SAAS,EAAEK,eADN;AAELN,IAAAA,UAAU,EAAEQ,gBAFP;AAGLQ,IAAAA,QAAQ,EAAEF,cAHL;AAILX,IAAAA,UAAU,EAAEY;AAJP,GAAP;AAMD","sourcesContent":["import * as React from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport CheckOutlined from '@ant-design/icons/CheckOutlined';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport SearchOutlined from '@ant-design/icons/SearchOutlined';\nexport default function getIcons(_ref) {\n  var suffixIcon = _ref.suffixIcon,\n      clearIcon = _ref.clearIcon,\n      menuItemSelectedIcon = _ref.menuItemSelectedIcon,\n      removeIcon = _ref.removeIcon,\n      loading = _ref.loading,\n      multiple = _ref.multiple;\n  // Clear Icon\n  var mergedClearIcon = clearIcon;\n\n  if (!clearIcon) {\n    mergedClearIcon = /*#__PURE__*/React.createElement(CloseCircleFilled, null);\n  } // Arrow item icon\n\n\n  var mergedSuffixIcon = null;\n\n  if (suffixIcon !== undefined) {\n    mergedSuffixIcon = suffixIcon;\n  } else if (loading) {\n    mergedSuffixIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n      spin: true\n    });\n  } else {\n    mergedSuffixIcon = function mergedSuffixIcon(_ref2) {\n      var open = _ref2.open,\n          showSearch = _ref2.showSearch;\n\n      if (open && showSearch) {\n        return /*#__PURE__*/React.createElement(SearchOutlined, null);\n      }\n\n      return /*#__PURE__*/React.createElement(DownOutlined, null);\n    };\n  } // Checked item icon\n\n\n  var mergedItemIcon = null;\n\n  if (menuItemSelectedIcon !== undefined) {\n    mergedItemIcon = menuItemSelectedIcon;\n  } else if (multiple) {\n    mergedItemIcon = /*#__PURE__*/React.createElement(CheckOutlined, null);\n  } else {\n    mergedItemIcon = null;\n  }\n\n  var mergedRemoveIcon = null;\n\n  if (removeIcon !== undefined) {\n    mergedRemoveIcon = removeIcon;\n  } else {\n    mergedRemoveIcon = /*#__PURE__*/React.createElement(CloseOutlined, null);\n  }\n\n  return {\n    clearIcon: mergedClearIcon,\n    suffixIcon: mergedSuffixIcon,\n    itemIcon: mergedItemIcon,\n    removeIcon: mergedRemoveIcon\n  };\n}"]},"metadata":{},"sourceType":"module"}