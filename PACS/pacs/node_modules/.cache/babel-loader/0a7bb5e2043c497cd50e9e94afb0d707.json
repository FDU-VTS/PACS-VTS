{"ast":null,"code":"import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _includes from 'lodash/includes';\nimport _map from 'lodash/map';\nimport _invoke from 'lodash/invoke';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, partitionHTMLProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../../elements/Button';\nimport Icon from '../../elements/Icon';\nimport Label from '../../elements/Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = function (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Input.__proto__ || Object.getPrototypeOf(Input)).call.apply(_ref, [this].concat(args))), _this), _this.computeIcon = function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    }, _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    }, _this.focus = function () {\n      return _this.inputRef.focus();\n    }, _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    }, _this.handleChildOverrides = function (child, defaultProps) {\n      return _extends({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          _invoke(child, 'ref', c);\n\n          _this.handleInputRef(c);\n        }\n      });\n    }, _this.handleInputRef = function (c) {\n      return _this.inputRef = c;\n    }, _this.partitionProps = function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return [_extends({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.handleInputRef\n      }), rest];\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Input, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          action = _props.action,\n          actionPosition = _props.actionPosition,\n          children = _props.children,\n          className = _props.className,\n          disabled = _props.disabled,\n          error = _props.error,\n          fluid = _props.fluid,\n          focus = _props.focus,\n          icon = _props.icon,\n          iconPosition = _props.iconPosition,\n          input = _props.input,\n          inverted = _props.inverted,\n          label = _props.label,\n          labelPosition = _props.labelPosition,\n          loading = _props.loading,\n          size = _props.size,\n          transparent = _props.transparent,\n          type = _props.type;\n      var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n      var ElementType = getElementType(Input, this.props);\n\n      var _partitionProps = this.partitionProps(),\n          _partitionProps2 = _slicedToArray(_partitionProps, 2),\n          htmlInputProps = _partitionProps2[0],\n          rest = _partitionProps2[1]; // Render with children\n      // ----------------------------------------\n\n\n      if (!childrenUtils.isNil(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = _map(Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n          return cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), childElements);\n      } // Render Shorthand\n      // ----------------------------------------\n\n\n      var actionElement = Button.create(action);\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          className: cx('label', // add 'left|right corner'\n          _includes(labelPosition, 'corner') && labelPosition)\n        }\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n        defaultProps: htmlInputProps\n      }), actionPosition !== 'left' && actionElement, Icon.create(this.computeIcon()), labelPosition === 'right' && labelElement);\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nInput.defaultProps = {\n  type: 'text'\n};\nInput._meta = {\n  name: 'Input',\n  type: META.TYPES.ELEMENT\n};\nInput.handledProps = ['action', 'actionPosition', 'as', 'children', 'className', 'disabled', 'error', 'fluid', 'focus', 'icon', 'iconPosition', 'input', 'inverted', 'label', 'labelPosition', 'loading', 'onChange', 'size', 'tabIndex', 'transparent', 'type'];\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/elements/Input/Input.js"],"names":["_slicedToArray","_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","_includes","_map","_invoke","_get","_isNil","cx","PropTypes","React","Children","cloneElement","Component","childrenUtils","createHTMLInput","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","META","partitionHTMLProps","SUI","useKeyOnly","useValueAndKey","Button","Icon","Label","Input","_Component","_ref","_temp","_this","_ret","_len","arguments","length","args","Array","_key","__proto__","Object","getPrototypeOf","call","apply","concat","computeIcon","_this$props","props","loading","icon","computeTabIndex","_this$props2","disabled","tabIndex","focus","inputRef","handleChange","e","value","handleChildOverrides","child","defaultProps","ref","c","handleInputRef","partitionProps","_this$props3","type","unhandled","_partitionHTMLProps","_partitionHTMLProps2","htmlInputProps","rest","onChange","key","render","_this2","_props","action","actionPosition","children","className","error","fluid","iconPosition","input","inverted","label","labelPosition","size","transparent","classes","ElementType","_partitionProps","_partitionProps2","isNil","childElements","toArray","createElement","actionElement","create","labelElement","_meta","name","TYPES","ELEMENT","handledProps","propTypes","process","env","NODE_ENV","as","oneOfType","bool","itemShorthand","oneOf","node","string","func","SIZES","number"],"mappings":"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","sourcesContent":["import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _includes from 'lodash/includes';\nimport _map from 'lodash/map';\nimport _invoke from 'lodash/invoke';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component } from 'react';\n\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, partitionHTMLProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../../elements/Button';\nimport Icon from '../../elements/Icon';\nimport Label from '../../elements/Label';\n\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = function (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Input.__proto__ || Object.getPrototypeOf(Input)).call.apply(_ref, [this].concat(args))), _this), _this.computeIcon = function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n\n\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    }, _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n\n\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    }, _this.focus = function () {\n      return _this.inputRef.focus();\n    }, _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, { value: value }));\n    }, _this.handleChildOverrides = function (child, defaultProps) {\n      return _extends({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          _invoke(child, 'ref', c);\n          _this.handleInputRef(c);\n        }\n      });\n    }, _this.handleInputRef = function (c) {\n      return _this.inputRef = c;\n    }, _this.partitionProps = function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n\n      var tabIndex = _this.computeTabIndex();\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return [_extends({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.handleInputRef\n      }), rest];\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Input, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          action = _props.action,\n          actionPosition = _props.actionPosition,\n          children = _props.children,\n          className = _props.className,\n          disabled = _props.disabled,\n          error = _props.error,\n          fluid = _props.fluid,\n          focus = _props.focus,\n          icon = _props.icon,\n          iconPosition = _props.iconPosition,\n          input = _props.input,\n          inverted = _props.inverted,\n          label = _props.label,\n          labelPosition = _props.labelPosition,\n          loading = _props.loading,\n          size = _props.size,\n          transparent = _props.transparent,\n          type = _props.type;\n\n\n      var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n      var ElementType = getElementType(Input, this.props);\n\n      var _partitionProps = this.partitionProps(),\n          _partitionProps2 = _slicedToArray(_partitionProps, 2),\n          htmlInputProps = _partitionProps2[0],\n          rest = _partitionProps2[1];\n\n      // Render with children\n      // ----------------------------------------\n\n\n      if (!childrenUtils.isNil(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = _map(Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n          return cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return React.createElement(\n          ElementType,\n          _extends({}, rest, { className: classes }),\n          childElements\n        );\n      }\n\n      // Render Shorthand\n      // ----------------------------------------\n      var actionElement = Button.create(action);\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          className: cx('label',\n          // add 'left|right corner'\n          _includes(labelPosition, 'corner') && labelPosition)\n        }\n      });\n\n      return React.createElement(\n        ElementType,\n        _extends({}, rest, { className: classes }),\n        actionPosition === 'left' && actionElement,\n        labelPosition !== 'right' && labelElement,\n        createHTMLInput(input || type, { defaultProps: htmlInputProps }),\n        actionPosition !== 'left' && actionElement,\n        Icon.create(this.computeIcon()),\n        labelPosition === 'right' && labelElement\n      );\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nInput.defaultProps = {\n  type: 'text'\n};\nInput._meta = {\n  name: 'Input',\n  type: META.TYPES.ELEMENT\n};\nInput.handledProps = ['action', 'actionPosition', 'as', 'children', 'className', 'disabled', 'error', 'fluid', 'focus', 'icon', 'iconPosition', 'input', 'inverted', 'label', 'labelPosition', 'loading', 'onChange', 'size', 'tabIndex', 'transparent', 'type'];\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\n\n\nInput.create = createShorthandFactory(Input, function (type) {\n  return { type: type };\n});\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}