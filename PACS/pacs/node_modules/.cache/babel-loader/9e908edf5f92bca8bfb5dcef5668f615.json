{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly } from '../../lib';\n/**\n * Comments can be grouped.\n */\n\nfunction CommentGroup(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed,\n      content = props.content,\n      minimal = props.minimal,\n      size = props.size,\n      threaded = props.threaded;\n  var classes = cx('ui', size, useKeyOnly(collapsed, 'collapsed'), useKeyOnly(minimal, 'minimal'), useKeyOnly(threaded, 'threaded'), 'comments', className);\n  var rest = getUnhandledProps(CommentGroup, props);\n  var ElementType = getElementType(CommentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentGroup.handledProps = ['as', 'children', 'className', 'collapsed', 'content', 'minimal', 'size', 'threaded'];\nCommentGroup._meta = {\n  name: 'CommentGroup',\n  parent: 'Comment',\n  type: META.TYPES.VIEW\n};\nCommentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: PropTypes.bool,\n\n  /** Comments can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: PropTypes.bool\n} : {};\nexport default CommentGroup;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/views/Comment/CommentGroup.js"],"names":["_extends","_without","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","CommentGroup","props","className","children","collapsed","content","minimal","size","threaded","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","bool","contentShorthand","oneOf","SIZES"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,GAAlF,EAAuFC,UAAvF,QAAyG,WAAzG;AAEA;;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,SAAS,GAAGH,KAAK,CAACG,SAFtB;AAAA,MAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAAA,MAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;AAAA,MAKIC,IAAI,GAAGN,KAAK,CAACM,IALjB;AAAA,MAMIC,QAAQ,GAAGP,KAAK,CAACO,QANrB;AASA,MAAIC,OAAO,GAAGnB,EAAE,CAAC,IAAD,EAAOiB,IAAP,EAAaR,UAAU,CAACK,SAAD,EAAY,WAAZ,CAAvB,EAAiDL,UAAU,CAACO,OAAD,EAAU,SAAV,CAA3D,EAAiFP,UAAU,CAACS,QAAD,EAAW,UAAX,CAA3F,EAAmH,UAAnH,EAA+HN,SAA/H,CAAhB;AACA,MAAIQ,IAAI,GAAGd,iBAAiB,CAACI,YAAD,EAAeC,KAAf,CAA5B;AACA,MAAIU,WAAW,GAAGhB,cAAc,CAACK,YAAD,EAAeC,KAAf,CAAhC;AAEA,SAAOT,KAAK,CAACoB,aAAN,CACLD,WADK,EAELvB,QAAQ,CAAC,EAAD,EAAKsB,IAAL,EAAW;AAAER,IAAAA,SAAS,EAAEO;AAAb,GAAX,CAFH,EAGLhB,aAAa,CAACoB,KAAd,CAAoBV,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDH,YAAY,CAACc,YAAb,GAA4B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,WAAhC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,MAAnE,EAA2E,UAA3E,CAA5B;AACAd,YAAY,CAACe,KAAb,GAAqB;AACnBC,EAAAA,IAAI,EAAE,cADa;AAEnBC,EAAAA,MAAM,EAAE,SAFW;AAGnBC,EAAAA,IAAI,EAAErB,IAAI,CAACsB,KAAL,CAAWC;AAHE,CAArB;AAMApB,YAAY,CAACqB,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/D;AACAC,EAAAA,EAAE,EAAE/B,eAAe,CAAC+B,EAF2C;;AAI/D;AACAtB,EAAAA,QAAQ,EAAEZ,SAAS,CAACmC,IAL2C;;AAO/D;AACAxB,EAAAA,SAAS,EAAEX,SAAS,CAACoC,MAR0C;;AAU/D;AACAvB,EAAAA,SAAS,EAAEb,SAAS,CAACqC,IAX0C;;AAa/D;AACAvB,EAAAA,OAAO,EAAEX,eAAe,CAACmC,gBAdsC;;AAgB/D;AACAvB,EAAAA,OAAO,EAAEf,SAAS,CAACqC,IAjB4C;;AAmB/D;AACArB,EAAAA,IAAI,EAAEhB,SAAS,CAACuC,KAAV,CAAgBzC,QAAQ,CAACS,GAAG,CAACiC,KAAL,EAAY,QAAZ,CAAxB,CApByD;;AAsB/D;AACAvB,EAAAA,QAAQ,EAAEjB,SAAS,CAACqC;AAvB2C,CAAxC,GAwBrB,EAxBJ;AA0BA,eAAe5B,YAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly } from '../../lib';\n\n/**\n * Comments can be grouped.\n */\nfunction CommentGroup(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed,\n      content = props.content,\n      minimal = props.minimal,\n      size = props.size,\n      threaded = props.threaded;\n\n\n  var classes = cx('ui', size, useKeyOnly(collapsed, 'collapsed'), useKeyOnly(minimal, 'minimal'), useKeyOnly(threaded, 'threaded'), 'comments', className);\n  var rest = getUnhandledProps(CommentGroup, props);\n  var ElementType = getElementType(CommentGroup, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nCommentGroup.handledProps = ['as', 'children', 'className', 'collapsed', 'content', 'minimal', 'size', 'threaded'];\nCommentGroup._meta = {\n  name: 'CommentGroup',\n  parent: 'Comment',\n  type: META.TYPES.VIEW\n};\n\nCommentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: PropTypes.bool,\n\n  /** Comments can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: PropTypes.bool\n} : {};\n\nexport default CommentGroup;"]},"metadata":{},"sourceType":"module"}