{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _uniq from 'lodash/uniq';\nimport _isFunction from 'lodash/isFunction';\nimport _isArray from 'lodash/isArray';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _isNumber from 'lodash/isNumber';\nimport _isString from 'lodash/isString';\nimport _isBoolean from 'lodash/isBoolean';\nimport _isNil from 'lodash/isNil';\nimport cx from 'classnames';\nimport React, { cloneElement, isValidElement } from 'react'; // ============================================================\n// Factories\n// ============================================================\n\n/**\n * A more robust React.createElement. It can create elements from primitive values.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @param {string|object|function} val The value to create a ReactElement from\n * @param {Object} [options={}]\n * @param {object} [options.defaultProps={}] Default props object\n * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)\n * @returns {object|null}\n */\n\nexport function createShorthand(Component, mapValueToProps, val) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  } // short circuit noop values\n\n\n  if (_isNil(val) || _isBoolean(val)) return null;\n\n  var valIsString = _isString(val);\n\n  var valIsNumber = _isNumber(val);\n\n  var isReactElement = isValidElement(val);\n\n  var isPropsObject = _isPlainObject(val);\n\n  var isPrimitiveValue = valIsString || valIsNumber || _isArray(val); // unhandled type return null\n\n  /* eslint-disable no-console */\n\n\n  if (!isReactElement && !isPropsObject && !isPrimitiveValue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(['Shorthand value must be a string|number|array|object|ReactElement.', ' Use null|undefined|boolean for none', ' Received ' + (typeof val === 'undefined' ? 'undefined' : _typeof(val)) + '.'].join(''));\n    }\n\n    return null;\n  }\n  /* eslint-enable no-console */\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n\n\n  var _options$defaultProps = options.defaultProps,\n      defaultProps = _options$defaultProps === undefined ? {} : _options$defaultProps; // User's props\n\n  var usersProps = isReactElement && val.props || isPropsObject && val || isPrimitiveValue && mapValueToProps(val); // Override props\n\n  var _options$overrideProp = options.overrideProps,\n      overrideProps = _options$overrideProp === undefined ? {} : _options$overrideProp;\n  overrideProps = _isFunction(overrideProps) ? overrideProps(_extends({}, defaultProps, usersProps)) : overrideProps; // Merge props\n\n  /* eslint-disable react/prop-types */\n\n  var props = _extends({}, defaultProps, usersProps, overrideProps); // Merge className\n\n\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    var mergedClassesNames = cx(defaultProps.className, overrideProps.className, usersProps.className);\n    props.className = _uniq(mergedClassesNames.split(' ')).join(' ');\n  } // Merge style\n\n\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    props.style = _extends({}, defaultProps.style, usersProps.style, overrideProps.style);\n  } // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n  // Use key, childKey, or generate key\n\n\n  if (_isNil(props.key)) {\n    var childKey = props.childKey;\n\n    if (!_isNil(childKey)) {\n      // apply and consume the childKey\n      props.key = typeof childKey === 'function' ? childKey(props) : childKey;\n      delete props.childKey;\n    } else if (valIsString || valIsNumber) {\n      // use string/number shorthand values as the key\n      props.key = val;\n    }\n  }\n  /* eslint-enable react/prop-types */\n  // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n  // Clone ReactElements\n\n\n  if (isReactElement) return cloneElement(val, props); // Create ReactElements from built up props\n\n  if (isPrimitiveValue || isPropsObject) return React.createElement(Component, props);\n} // ============================================================\n// Factory Creators\n// ============================================================\n\n/**\n * Creates a `createShorthand` function that is waiting for a value and options.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.\n */\n\ncreateShorthand.handledProps = [];\nexport function createShorthandFactory(Component, mapValueToProps) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n\n  return function (val, options) {\n    return createShorthand(Component, mapValueToProps, val, options);\n  };\n} // ============================================================\n// HTML Factories\n// ============================================================\n\nexport var createHTMLDivision = createShorthandFactory('div', function (val) {\n  return {\n    children: val\n  };\n});\nexport var createHTMLIframe = createShorthandFactory('iframe', function (src) {\n  return {\n    src: src\n  };\n});\nexport var createHTMLImage = createShorthandFactory('img', function (val) {\n  return {\n    src: val\n  };\n});\nexport var createHTMLInput = createShorthandFactory('input', function (val) {\n  return {\n    type: val\n  };\n});\nexport var createHTMLLabel = createShorthandFactory('label', function (val) {\n  return {\n    children: val\n  };\n});\nexport var createHTMLParagraph = createShorthandFactory('p', function (val) {\n  return {\n    children: val\n  };\n});","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/lib/factories.js"],"names":["_extends","_typeof","_uniq","_isFunction","_isArray","_isPlainObject","_isNumber","_isString","_isBoolean","_isNil","cx","React","cloneElement","isValidElement","createShorthand","Component","mapValueToProps","val","options","arguments","length","undefined","Error","valIsString","valIsNumber","isReactElement","isPropsObject","isPrimitiveValue","process","env","NODE_ENV","console","error","join","_options$defaultProps","defaultProps","usersProps","props","_options$overrideProp","overrideProps","className","mergedClassesNames","split","style","key","childKey","createElement","handledProps","createShorthandFactory","createHTMLDivision","children","createHTMLIframe","src","createHTMLImage","createHTMLInput","type","createHTMLLabel","createHTMLParagraph"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _uniq from 'lodash/uniq';\nimport _isFunction from 'lodash/isFunction';\nimport _isArray from 'lodash/isArray';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _isNumber from 'lodash/isNumber';\nimport _isString from 'lodash/isString';\nimport _isBoolean from 'lodash/isBoolean';\nimport _isNil from 'lodash/isNil';\n\nimport cx from 'classnames';\nimport React, { cloneElement, isValidElement } from 'react';\n\n// ============================================================\n// Factories\n// ============================================================\n\n/**\n * A more robust React.createElement. It can create elements from primitive values.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @param {string|object|function} val The value to create a ReactElement from\n * @param {Object} [options={}]\n * @param {object} [options.defaultProps={}] Default props object\n * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)\n * @returns {object|null}\n */\nexport function createShorthand(Component, mapValueToProps, val) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n  // short circuit noop values\n  if (_isNil(val) || _isBoolean(val)) return null;\n\n  var valIsString = _isString(val);\n  var valIsNumber = _isNumber(val);\n\n  var isReactElement = isValidElement(val);\n  var isPropsObject = _isPlainObject(val);\n  var isPrimitiveValue = valIsString || valIsNumber || _isArray(val);\n\n  // unhandled type return null\n  /* eslint-disable no-console */\n  if (!isReactElement && !isPropsObject && !isPrimitiveValue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(['Shorthand value must be a string|number|array|object|ReactElement.', ' Use null|undefined|boolean for none', ' Received ' + (typeof val === 'undefined' ? 'undefined' : _typeof(val)) + '.'].join(''));\n    }\n    return null;\n  }\n  /* eslint-enable no-console */\n\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n  var _options$defaultProps = options.defaultProps,\n      defaultProps = _options$defaultProps === undefined ? {} : _options$defaultProps;\n\n  // User's props\n\n  var usersProps = isReactElement && val.props || isPropsObject && val || isPrimitiveValue && mapValueToProps(val);\n\n  // Override props\n  var _options$overrideProp = options.overrideProps,\n      overrideProps = _options$overrideProp === undefined ? {} : _options$overrideProp;\n\n  overrideProps = _isFunction(overrideProps) ? overrideProps(_extends({}, defaultProps, usersProps)) : overrideProps;\n\n  // Merge props\n  /* eslint-disable react/prop-types */\n  var props = _extends({}, defaultProps, usersProps, overrideProps);\n\n  // Merge className\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    var mergedClassesNames = cx(defaultProps.className, overrideProps.className, usersProps.className);\n    props.className = _uniq(mergedClassesNames.split(' ')).join(' ');\n  }\n\n  // Merge style\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    props.style = _extends({}, defaultProps.style, usersProps.style, overrideProps.style);\n  }\n\n  // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n\n  // Use key, childKey, or generate key\n  if (_isNil(props.key)) {\n    var childKey = props.childKey;\n\n\n    if (!_isNil(childKey)) {\n      // apply and consume the childKey\n      props.key = typeof childKey === 'function' ? childKey(props) : childKey;\n      delete props.childKey;\n    } else if (valIsString || valIsNumber) {\n      // use string/number shorthand values as the key\n      props.key = val;\n    }\n  }\n  /* eslint-enable react/prop-types */\n\n  // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n\n  // Clone ReactElements\n  if (isReactElement) return cloneElement(val, props);\n\n  // Create ReactElements from built up props\n  if (isPrimitiveValue || isPropsObject) return React.createElement(Component, props);\n}\n\n// ============================================================\n// Factory Creators\n// ============================================================\n\n/**\n * Creates a `createShorthand` function that is waiting for a value and options.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.\n */\ncreateShorthand.handledProps = [];\nexport function createShorthandFactory(Component, mapValueToProps) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n\n  return function (val, options) {\n    return createShorthand(Component, mapValueToProps, val, options);\n  };\n}\n\n// ============================================================\n// HTML Factories\n// ============================================================\nexport var createHTMLDivision = createShorthandFactory('div', function (val) {\n  return { children: val };\n});\nexport var createHTMLIframe = createShorthandFactory('iframe', function (src) {\n  return { src: src };\n});\nexport var createHTMLImage = createShorthandFactory('img', function (val) {\n  return { src: val };\n});\nexport var createHTMLInput = createShorthandFactory('input', function (val) {\n  return { type: val };\n});\nexport var createHTMLLabel = createShorthandFactory('label', function (val) {\n  return { children: val };\n});\nexport var createHTMLParagraph = createShorthandFactory('p', function (val) {\n  return { children: val };\n});"]},"metadata":{},"sourceType":"module"}