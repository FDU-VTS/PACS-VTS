{"ast":null,"code":"var _jsxFileName = \"/Users/bly/Documents/\\u5DE5\\u4F5C/\\u5B9E\\u9A8C\\u5BA4/\\u9879\\u76EE/\\u533B\\u7597\\u7CFB\\u7EDF/PACS/pacs/src/pages/PatientsPage.js\";\nimport React, { Component } from 'react';\nimport { Translate } from 'react-localize-redux';\nimport StudiesService from \"../services/DicomService\";\nimport { Button, Dropdown, Select, Table, Form, Menu, Segment, Grid, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport MenuContainer from \"../components/common/MenuContainer\";\nconst patientMatcherOptions = [{\n  key: 'exact',\n  text: 'Точный поиск',\n  value: 'exact'\n}, {\n  key: 'startswith',\n  text: 'Начинается с',\n  value: 'startswith'\n}, {\n  key: 'endswith',\n  text: 'Заканчивается',\n  value: 'endswith'\n}, {\n  key: 'contains',\n  text: 'Нечеткий поиск',\n  value: 'contains'\n}];\nconst filterTextToValue = {\n  'Exact equals': 'exact',\n  'Starts with': 'startswith',\n  'Ends with': 'endswith',\n  'Contains': 'contains'\n};\n\nclass PatientsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: []\n    };\n    this.setState = this.setState.bind(this);\n    this.handleFindInputOnChange = this.handleFindInputOnChange.bind(this);\n  }\n\n  componentWillMount() {\n    StudiesService.findPatients(patients => {\n      this.setState({\n        patients: patients\n      });\n    });\n  }\n\n  handleFindInputOnChange(event) {\n    if (event.key === 'Enter') {\n      const patientName = document.getElementById('id_patient_name').value;\n      const patientId = document.getElementById('id_patient_id').value;\n      const patientNameFilter = filterTextToValue[document.getElementById('id_patient_name_filter').innerText.trim()];\n      const patientIdFilter = filterTextToValue[document.getElementById('id_patient_id_filter').innerText.trim()];\n      console.log(patientNameFilter);\n      StudiesService.findPatients(patients => {\n        console.log(this);\n        this.setState({\n          patients: patients\n        });\n      }, {\n        'patient_name': `${patientNameFilter}=${patientName}`,\n        'patient_id': `${patientIdFilter}=${patientId}`\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.patients);\n    return /*#__PURE__*/React.createElement(MenuContainer, {\n      activeItem: \"patients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Translate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, translate => /*#__PURE__*/React.createElement(Grid, {\n      columns: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      id: \"id_patient_name\",\n      label: translate('patient.name'),\n      action: /*#__PURE__*/React.createElement(Dropdown, {\n        id: \"id_patient_name_filter\",\n        button: true,\n        basic: true,\n        floating: true,\n        options: patientMatcherOptions,\n        defaultValue: \"exact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 61\n        }\n      }),\n      icon: \"search\",\n      name: \"patient_name\",\n      iconPosition: \"left\",\n      placeholder: translate('patient.name'),\n      onKeyPress: this.handleFindInputOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      id: \"id_patient_id\",\n      label: translate('patient.id'),\n      action: /*#__PURE__*/React.createElement(Dropdown, {\n        id: \"id_patient_id_filter\",\n        button: true,\n        basic: true,\n        floating: true,\n        options: patientMatcherOptions,\n        defaultValue: \"exact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 61\n        }\n      }),\n      icon: \"search\",\n      name: \"patient_id\",\n      iconPosition: \"left\",\n      placeholder: translate('patient.id'),\n      onKeyPress: this.handleFindInputOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 53\n      }\n    }, translate('patient.id')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 53\n      }\n    }, translate('patient.name')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 53\n      }\n    }, translate('patient.gender')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 53\n      }\n    }, translate('patient.birthdate')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 53\n      }\n    }, translate('patient.age')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 53\n      }\n    }, translate('patient.imagesCount')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, this.state.patients.map(patient => {\n      return /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 65\n        }\n      }, patient['patient_id'] || translate('patient.anonymized')), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 65\n        }\n      }, patient['patient_name'] || translate('patient.anonymized')), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 65\n        }\n      }, patient['patient_sex'] || translate('patient.anonymized')), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 65\n        }\n      }, patient['patient_birthdate'] || translate('patient.anonymized')), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 65\n        }\n      }, patient['patient_age'] || translate('patient.anonymized')), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 65\n        }\n      }, patient['images_count']), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        positive: true,\n        as: Link,\n        to: `/patient/${patient['id']}/studies`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 69\n        }\n      }, translate('open'))));\n    }))))))));\n  }\n\n}\n\nexport default PatientsPage;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/src/pages/PatientsPage.js"],"names":["React","Component","Translate","StudiesService","Button","Dropdown","Select","Table","Form","Menu","Segment","Grid","Header","Link","MenuContainer","patientMatcherOptions","key","text","value","filterTextToValue","PatientsPage","constructor","props","state","patients","setState","bind","handleFindInputOnChange","componentWillMount","findPatients","event","patientName","document","getElementById","patientId","patientNameFilter","innerText","trim","patientIdFilter","console","log","render","translate","map","patient"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Translate} from 'react-localize-redux';\nimport StudiesService from \"../services/DicomService\";\nimport {Button, Dropdown, Select, Table, Form, Menu, Segment, Grid, Header} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport MenuContainer from \"../components/common/MenuContainer\";\n\nconst patientMatcherOptions = [\n    {key: 'exact', text: 'Точный поиск', value: 'exact'},\n    {key: 'startswith', text: 'Начинается с', value: 'startswith'},\n    {key: 'endswith', text: 'Заканчивается', value: 'endswith'},\n    {key: 'contains', text: 'Нечеткий поиск', value: 'contains'},\n];\n\nconst filterTextToValue = {\n    'Exact equals': 'exact',\n    'Starts with': 'startswith',\n    'Ends with': 'endswith',\n    'Contains': 'contains'\n};\n\nclass PatientsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patients: []\n        };\n        this.setState = this.setState.bind(this);\n        this.handleFindInputOnChange = this.handleFindInputOnChange.bind(this);\n    }\n\n    componentWillMount() {\n        StudiesService.findPatients(patients => {\n            this.setState({patients: patients});\n        });\n    }\n\n    handleFindInputOnChange(event) {\n        if (event.key === 'Enter') {\n            const patientName = document.getElementById('id_patient_name').value;\n            const patientId = document.getElementById('id_patient_id').value;\n            const patientNameFilter = filterTextToValue[document.getElementById('id_patient_name_filter').innerText.trim()];\n            const patientIdFilter = filterTextToValue[document.getElementById('id_patient_id_filter').innerText.trim()];\n            console.log(patientNameFilter);\n            StudiesService.findPatients(patients => {\n                console.log(this);\n                this.setState({patients: patients});\n            }, {\n                'patient_name': `${patientNameFilter}=${patientName}`,\n                'patient_id': `${patientIdFilter}=${patientId}`\n            });\n        }\n    }\n\n    render() {\n        console.log(this.state.patients);\n        return (\n            <MenuContainer activeItem='patients'>\n                <Translate>\n                    {\n                        (translate) => (\n                            <Grid columns='equal'>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <Form>\n                                            <Form.Group widths='equal'>\n                                                <Form.Input\n                                                    id='id_patient_name'\n                                                    label={translate('patient.name')}\n                                                    action={<Dropdown id='id_patient_name_filter' button basic floating\n                                                                      options={patientMatcherOptions}\n                                                                      defaultValue='exact'/>}\n                                                    icon='search'\n                                                    name='patient_name'\n                                                    iconPosition='left'\n                                                    placeholder={translate('patient.name')}\n                                                    onKeyPress={this.handleFindInputOnChange}\n                                                />\n                                                <Form.Input\n                                                    id='id_patient_id'\n                                                    label={translate('patient.id')}\n                                                    action={<Dropdown id='id_patient_id_filter' button basic floating\n                                                                      options={patientMatcherOptions}\n                                                                      defaultValue='exact'/>}\n                                                    icon='search'\n                                                    name='patient_id'\n                                                    iconPosition='left'\n                                                    placeholder={translate('patient.id')}\n                                                    onKeyPress={this.handleFindInputOnChange}\n                                                />\n                                            </Form.Group>\n                                        </Form>\n                                        <Table>\n                                            <Table.Header>\n                                                <Table.Row>\n                                                    <Table.HeaderCell>{translate('patient.id')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.name')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.gender')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.birthdate')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.age')}</Table.HeaderCell>\n                                                    <Table.HeaderCell>{translate('patient.imagesCount')}</Table.HeaderCell>\n                                                    <Table.HeaderCell/>\n                                                </Table.Row>\n                                            </Table.Header>\n                                            <Table.Body>\n                                                {\n                                                    this.state.patients.map(patient => {\n                                                        return (\n                                                            <Table.Row>\n                                                                <Table.Cell>\n                                                                    {patient['patient_id'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_name'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_sex'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_birthdate'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['patient_age'] || translate('patient.anonymized')}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    {patient['images_count']}\n                                                                </Table.Cell>\n                                                                <Table.Cell>\n                                                                    <Button positive as={Link}\n                                                                            to={`/patient/${patient['id']}/studies`}>{translate('open')}</Button>\n                                                                </Table.Cell>\n                                                            </Table.Row>\n                                                        );\n                                                    })\n                                                }\n                                            </Table.Body>\n                                        </Table>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        )\n                    }\n                </Translate>\n            </MenuContainer>\n        );\n    }\n}\n\nexport default PatientsPage;"]},"metadata":{},"sourceType":"module"}