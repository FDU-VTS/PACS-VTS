{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\nfunction SearchCategory(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      renderer = props.renderer;\n  var classes = cx(useKeyOnly(active, 'active'), 'category', className);\n  var rest = getUnhandledProps(SearchCategory, props);\n  var ElementType = getElementType(SearchCategory, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), React.createElement('div', {\n    className: 'name'\n  }, renderer(props)), childrenUtils.isNil(children) ? content : children);\n}\n\nSearchCategory.handledProps = ['active', 'as', 'children', 'className', 'content', 'name', 'renderer', 'results'];\nSearchCategory._meta = {\n  name: 'SearchCategory',\n  parent: 'Search',\n  type: META.TYPES.MODULE\n};\nSearchCategory.defaultProps = {\n  renderer: function renderer(_ref) {\n    var name = _ref.name;\n    return name;\n  }\n};\nSearchCategory.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The item currently selected by keyboard shortcut. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Display name. */\n  name: PropTypes.string,\n\n  /**\n   * Renders the category contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable category contents.\n   */\n  renderer: PropTypes.func,\n\n  /** Array of Search.Result props. */\n  results: PropTypes.array\n} : {};\nexport default SearchCategory;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/modules/Search/SearchCategory.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","SearchCategory","props","active","children","className","content","renderer","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","MODULE","defaultProps","_ref","propTypes","process","env","NODE_ENV","as","bool","node","string","contentShorthand","func","results","array"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,UAAlF,QAAoG,WAApG;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,SAAS,GAAGH,KAAK,CAACG,SAFtB;AAAA,MAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAAA,MAIIC,QAAQ,GAAGL,KAAK,CAACK,QAJrB;AAMA,MAAIC,OAAO,GAAGhB,EAAE,CAACQ,UAAU,CAACG,MAAD,EAAS,QAAT,CAAX,EAA+B,UAA/B,EAA2CE,SAA3C,CAAhB;AACA,MAAII,IAAI,GAAGX,iBAAiB,CAACG,cAAD,EAAiBC,KAAjB,CAA5B;AACA,MAAIQ,WAAW,GAAGb,cAAc,CAACI,cAAD,EAAiBC,KAAjB,CAAhC;AAEA,SAAOR,KAAK,CAACiB,aAAN,CACLD,WADK,EAELnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;AAAEJ,IAAAA,SAAS,EAAEG;AAAb,GAAX,CAFH,EAGLd,KAAK,CAACiB,aAAN,CACE,KADF,EAEE;AAAEN,IAAAA,SAAS,EAAE;AAAb,GAFF,EAGEE,QAAQ,CAACL,KAAD,CAHV,CAHK,EAQLP,aAAa,CAACiB,KAAd,CAAoBR,QAApB,IAAgCE,OAAhC,GAA0CF,QARrC,CAAP;AAUD;;AAEDH,cAAc,CAACY,YAAf,GAA8B,CAAC,QAAD,EAAW,IAAX,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C,SAA1C,EAAqD,MAArD,EAA6D,UAA7D,EAAyE,SAAzE,CAA9B;AACAZ,cAAc,CAACa,KAAf,GAAuB;AACrBC,EAAAA,IAAI,EAAE,gBADe;AAErBC,EAAAA,MAAM,EAAE,QAFa;AAGrBC,EAAAA,IAAI,EAAElB,IAAI,CAACmB,KAAL,CAAWC;AAHI,CAAvB;AAMAlB,cAAc,CAACmB,YAAf,GAA8B;AAC5Bb,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBc,IAAlB,EAAwB;AAChC,QAAIN,IAAI,GAAGM,IAAI,CAACN,IAAhB;AACA,WAAOA,IAAP;AACD;AAJ2B,CAA9B;AAOAd,cAAc,CAACqB,SAAf,GAA2BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACjE;AACAC,EAAAA,EAAE,EAAE9B,eAAe,CAAC8B,EAF6C;;AAIjE;AACAvB,EAAAA,MAAM,EAAEV,SAAS,CAACkC,IAL+C;;AAOjE;AACAvB,EAAAA,QAAQ,EAAEX,SAAS,CAACmC,IAR6C;;AAUjE;AACAvB,EAAAA,SAAS,EAAEZ,SAAS,CAACoC,MAX4C;;AAajE;AACAvB,EAAAA,OAAO,EAAEV,eAAe,CAACkC,gBAdwC;;AAgBjE;AACAf,EAAAA,IAAI,EAAEtB,SAAS,CAACoC,MAjBiD;;AAmBjE;;;;;;AAMAtB,EAAAA,QAAQ,EAAEd,SAAS,CAACsC,IAzB6C;;AA2BjE;AACAC,EAAAA,OAAO,EAAEvC,SAAS,CAACwC;AA5B8C,CAAxC,GA6BvB,EA7BJ;AA+BA,eAAehC,cAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\nfunction SearchCategory(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      renderer = props.renderer;\n\n  var classes = cx(useKeyOnly(active, 'active'), 'category', className);\n  var rest = getUnhandledProps(SearchCategory, props);\n  var ElementType = getElementType(SearchCategory, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    React.createElement(\n      'div',\n      { className: 'name' },\n      renderer(props)\n    ),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nSearchCategory.handledProps = ['active', 'as', 'children', 'className', 'content', 'name', 'renderer', 'results'];\nSearchCategory._meta = {\n  name: 'SearchCategory',\n  parent: 'Search',\n  type: META.TYPES.MODULE\n};\n\nSearchCategory.defaultProps = {\n  renderer: function renderer(_ref) {\n    var name = _ref.name;\n    return name;\n  }\n};\n\nSearchCategory.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The item currently selected by keyboard shortcut. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Display name. */\n  name: PropTypes.string,\n\n  /**\n   * Renders the category contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable category contents.\n   */\n  renderer: PropTypes.func,\n\n  /** Array of Search.Result props. */\n  results: PropTypes.array\n} : {};\n\nexport default SearchCategory;"]},"metadata":{},"sourceType":"module"}