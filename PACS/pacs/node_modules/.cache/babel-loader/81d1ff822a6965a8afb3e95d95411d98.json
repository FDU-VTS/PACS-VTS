{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _isNil from 'lodash/isNil';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message = function (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Message.__proto__ || Object.getPrototypeOf(Message)).call.apply(_ref, [this].concat(args))), _this), _this.handleDismiss = function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Message, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          attached = _props.attached,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          compact = _props.compact,\n          content = _props.content,\n          error = _props.error,\n          floating = _props.floating,\n          header = _props.header,\n          hidden = _props.hidden,\n          icon = _props.icon,\n          info = _props.info,\n          list = _props.list,\n          negative = _props.negative,\n          onDismiss = _props.onDismiss,\n          positive = _props.positive,\n          size = _props.size,\n          success = _props.success,\n          visible = _props.visible,\n          warning = _props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: 'close',\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header), MessageList.create(list), createHTMLParagraph(content)));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nMessage._meta = {\n  name: 'Message',\n  type: META.TYPES.COLLECTION\n};\nMessage.Content = MessageContent;\nMessage.Header = MessageHeader;\nMessage.List = MessageList;\nMessage.Item = MessageItem;\nMessage.handledProps = ['as', 'attached', 'children', 'className', 'color', 'compact', 'content', 'error', 'floating', 'header', 'hidden', 'icon', 'info', 'list', 'negative', 'onDismiss', 'positive', 'size', 'success', 'visible', 'warning'];\nexport default Message;\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/collections/Message/Message.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","_isNil","_without","cx","PropTypes","React","Component","childrenUtils","createHTMLParagraph","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useKeyOrValueAndKey","Icon","MessageContent","MessageHeader","MessageList","MessageItem","Message","_Component","_ref","_temp","_this","_ret","_len","arguments","length","args","Array","_key","__proto__","Object","getPrototypeOf","call","apply","concat","handleDismiss","e","onDismiss","props","key","value","render","_props","attached","children","className","color","compact","content","error","floating","header","hidden","icon","info","list","negative","positive","size","success","visible","warning","classes","dismissIcon","createElement","name","onClick","rest","ElementType","isNil","create","_meta","type","TYPES","COLLECTION","Content","Header","List","Item","handledProps","propTypes","process","env","NODE_ENV","as","oneOfType","bool","oneOf","node","string","COLORS","contentShorthand","itemShorthand","collectionShorthand","func","SIZES"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _isNil from 'lodash/isNil';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message = function (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Message.__proto__ || Object.getPrototypeOf(Message)).call.apply(_ref, [this].concat(args))), _this), _this.handleDismiss = function (e) {\n      var onDismiss = _this.props.onDismiss;\n\n\n      if (onDismiss) onDismiss(e, _this.props);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Message, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          attached = _props.attached,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          compact = _props.compact,\n          content = _props.content,\n          error = _props.error,\n          floating = _props.floating,\n          header = _props.header,\n          hidden = _props.hidden,\n          icon = _props.icon,\n          info = _props.info,\n          list = _props.list,\n          negative = _props.negative,\n          onDismiss = _props.onDismiss,\n          positive = _props.positive,\n          size = _props.size,\n          success = _props.success,\n          visible = _props.visible,\n          warning = _props.warning;\n\n\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n\n      var dismissIcon = onDismiss && React.createElement(Icon, { name: 'close', onClick: this.handleDismiss });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(\n          ElementType,\n          _extends({}, rest, { className: classes }),\n          dismissIcon,\n          children\n        );\n      }\n\n      return React.createElement(\n        ElementType,\n        _extends({}, rest, { className: classes }),\n        dismissIcon,\n        Icon.create(icon),\n        (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(\n          MessageContent,\n          null,\n          MessageHeader.create(header),\n          MessageList.create(list),\n          createHTMLParagraph(content)\n        )\n      );\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nMessage._meta = {\n  name: 'Message',\n  type: META.TYPES.COLLECTION\n};\nMessage.Content = MessageContent;\nMessage.Header = MessageHeader;\nMessage.List = MessageList;\nMessage.Item = MessageItem;\nMessage.handledProps = ['as', 'attached', 'children', 'className', 'color', 'compact', 'content', 'error', 'floating', 'header', 'hidden', 'icon', 'info', 'list', 'negative', 'onDismiss', 'positive', 'size', 'success', 'visible', 'warning'];\nexport default Message;\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};"]},"metadata":{},"sourceType":"module"}