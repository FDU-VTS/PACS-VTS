{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigConsumer } from '../config-provider';\nimport Element from './Element';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonInput from './Input';\n\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function Skeleton(props) {\n  var renderSkeleton = function renderSkeleton(_ref) {\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n    var customizePrefixCls = props.prefixCls,\n        loading = props.loading,\n        className = props.className,\n        children = props.children,\n        avatar = props.avatar,\n        title = props.title,\n        paragraph = props.paragraph,\n        active = props.active;\n    var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n    if (loading || !('loading' in props)) {\n      var _classNames;\n\n      var hasAvatar = !!avatar;\n      var hasTitle = !!title;\n      var hasParagraph = !!paragraph; // Avatar\n\n      var avatarNode;\n\n      if (hasAvatar) {\n        var avatarProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-avatar\")\n        }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n\n        avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-header\")\n        }, /*#__PURE__*/React.createElement(Element, avatarProps));\n      }\n\n      var contentNode;\n\n      if (hasTitle || hasParagraph) {\n        // Title\n        var $title;\n\n        if (hasTitle) {\n          var titleProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-title\")\n          }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n\n          $title = /*#__PURE__*/React.createElement(Title, titleProps);\n        } // Paragraph\n\n\n        var paragraphNode;\n\n        if (hasParagraph) {\n          var paragraphProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n          }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n\n          paragraphNode = /*#__PURE__*/React.createElement(Paragraph, paragraphProps);\n        }\n\n        contentNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-content\")\n        }, $title, paragraphNode);\n      }\n\n      var cls = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cls\n      }, avatarNode, contentNode);\n    }\n\n    return children;\n  };\n\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, renderSkeleton);\n};\n\nSkeleton.defaultProps = {\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nexport default Skeleton;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS-VTS/PACS/pacs/node_modules/antd/es/skeleton/Skeleton.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_typeof","Symbol","iterator","constructor","React","classNames","Title","Paragraph","ConfigConsumer","Element","SkeletonAvatar","SkeletonButton","SkeletonInput","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","renderSkeleton","_ref","getPrefixCls","direction","customizePrefixCls","prefixCls","loading","className","children","avatar","title","paragraph","active","_classNames","avatarNode","avatarProps","concat","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","defaultProps","Button","Avatar","Input"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigConsumer } from '../config-provider';\nimport Element from './Element';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonInput from './Input';\n\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function Skeleton(props) {\n  var renderSkeleton = function renderSkeleton(_ref) {\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n    var customizePrefixCls = props.prefixCls,\n        loading = props.loading,\n        className = props.className,\n        children = props.children,\n        avatar = props.avatar,\n        title = props.title,\n        paragraph = props.paragraph,\n        active = props.active;\n    var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n    if (loading || !('loading' in props)) {\n      var _classNames;\n\n      var hasAvatar = !!avatar;\n      var hasTitle = !!title;\n      var hasParagraph = !!paragraph; // Avatar\n\n      var avatarNode;\n\n      if (hasAvatar) {\n        var avatarProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-avatar\")\n        }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n\n        avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-header\")\n        }, /*#__PURE__*/React.createElement(Element, avatarProps));\n      }\n\n      var contentNode;\n\n      if (hasTitle || hasParagraph) {\n        // Title\n        var $title;\n\n        if (hasTitle) {\n          var titleProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-title\")\n          }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n\n          $title = /*#__PURE__*/React.createElement(Title, titleProps);\n        } // Paragraph\n\n\n        var paragraphNode;\n\n        if (hasParagraph) {\n          var paragraphProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n          }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n\n          paragraphNode = /*#__PURE__*/React.createElement(Paragraph, paragraphProps);\n        }\n\n        contentNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-content\")\n        }, $title, paragraphNode);\n      }\n\n      var cls = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cls\n      }, avatarNode, contentNode);\n    }\n\n    return children;\n  };\n\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, renderSkeleton);\n};\n\nSkeleton.defaultProps = {\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nexport default Skeleton;"]},"metadata":{},"sourceType":"module"}