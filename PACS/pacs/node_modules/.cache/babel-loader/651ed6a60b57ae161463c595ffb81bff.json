{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Col from '../grid/col';\nimport { FormContext } from './context';\n\nvar FormItemLabel = function FormItemLabel(_ref) {\n  var prefixCls = _ref.prefixCls,\n      label = _ref.label,\n      htmlFor = _ref.htmlFor,\n      labelCol = _ref.labelCol,\n      labelAlign = _ref.labelAlign,\n      colon = _ref.colon,\n      required = _ref.required;\n  if (!label) return null;\n  return /*#__PURE__*/React.createElement(FormContext.Consumer, {\n    key: \"label\"\n  }, function (_ref2) {\n    var _classNames;\n\n    var vertical = _ref2.vertical,\n        contextLabelAlign = _ref2.labelAlign,\n        contextLabelCol = _ref2.labelCol,\n        contextColon = _ref2.colon;\n    var mergedLabelCol = labelCol || contextLabelCol || {};\n    var mergedLabelAlign = labelAlign || contextLabelAlign;\n    var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n    var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.className);\n    var labelChildren = label; // Keep label is original where there should have no colon\n\n    var computedColon = colon === true || contextColon !== false && colon !== false;\n    var haveColon = computedColon && !vertical; // Remove duplicated user input colon\n\n    if (haveColon && typeof label === 'string' && label.trim() !== '') {\n      labelChildren = label.replace(/[:|：]\\s*$/, '');\n    }\n\n    var labelClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames));\n    return /*#__PURE__*/React.createElement(Col, _extends({}, mergedLabelCol, {\n      className: labelColClassName\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlFor,\n      className: labelClassName,\n      title: typeof label === 'string' ? label : ''\n    }, labelChildren));\n  });\n};\n\nexport default FormItemLabel;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS/pacs/node_modules/antd/es/form/FormItemLabel.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","classNames","Col","FormContext","FormItemLabel","_ref","prefixCls","label","htmlFor","labelCol","labelAlign","colon","required","createElement","Consumer","_ref2","_classNames","vertical","contextLabelAlign","contextLabelCol","contextColon","mergedLabelCol","mergedLabelAlign","labelClsBasic","concat","labelColClassName","className","labelChildren","computedColon","haveColon","trim","replace","labelClassName","title"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,eAAT,CAAyBC,GAAzB,EAA8BN,GAA9B,EAAmCO,KAAnC,EAA0C;AAAE,MAAIP,GAAG,IAAIM,GAAX,EAAgB;AAAEb,IAAAA,MAAM,CAACe,cAAP,CAAsBF,GAAtB,EAA2BN,GAA3B,EAAgC;AAAEO,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEL,IAAAA,GAAG,CAACN,GAAD,CAAH,GAAWO,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,OAAO,KAAKM,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,OAAO,GAAGH,IAAI,CAACG,OAFnB;AAAA,MAGIC,QAAQ,GAAGJ,IAAI,CAACI,QAHpB;AAAA,MAIIC,UAAU,GAAGL,IAAI,CAACK,UAJtB;AAAA,MAKIC,KAAK,GAAGN,IAAI,CAACM,KALjB;AAAA,MAMIC,QAAQ,GAAGP,IAAI,CAACO,QANpB;AAOA,MAAI,CAACL,KAAL,EAAY,OAAO,IAAP;AACZ,SAAO,aAAaP,KAAK,CAACa,aAAN,CAAoBV,WAAW,CAACW,QAAhC,EAA0C;AAC5D1B,IAAAA,GAAG,EAAE;AADuD,GAA1C,EAEjB,UAAU2B,KAAV,EAAiB;AAClB,QAAIC,WAAJ;;AAEA,QAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,QACIC,iBAAiB,GAAGH,KAAK,CAACL,UAD9B;AAAA,QAEIS,eAAe,GAAGJ,KAAK,CAACN,QAF5B;AAAA,QAGIW,YAAY,GAAGL,KAAK,CAACJ,KAHzB;AAIA,QAAIU,cAAc,GAAGZ,QAAQ,IAAIU,eAAZ,IAA+B,EAApD;AACA,QAAIG,gBAAgB,GAAGZ,UAAU,IAAIQ,iBAArC;AACA,QAAIK,aAAa,GAAG,GAAGC,MAAH,CAAUlB,SAAV,EAAqB,aAArB,CAApB;AACA,QAAImB,iBAAiB,GAAGxB,UAAU,CAACsB,aAAD,EAAgBD,gBAAgB,KAAK,MAArB,IAA+B,GAAGE,MAAH,CAAUD,aAAV,EAAyB,OAAzB,CAA/C,EAAkFF,cAAc,CAACK,SAAjG,CAAlC;AACA,QAAIC,aAAa,GAAGpB,KAApB,CAXkB,CAWS;;AAE3B,QAAIqB,aAAa,GAAGjB,KAAK,KAAK,IAAV,IAAkBS,YAAY,KAAK,KAAjB,IAA0BT,KAAK,KAAK,KAA1E;AACA,QAAIkB,SAAS,GAAGD,aAAa,IAAI,CAACX,QAAlC,CAdkB,CAc0B;;AAE5C,QAAIY,SAAS,IAAI,OAAOtB,KAAP,KAAiB,QAA9B,IAA0CA,KAAK,CAACuB,IAAN,OAAiB,EAA/D,EAAmE;AACjEH,MAAAA,aAAa,GAAGpB,KAAK,CAACwB,OAAN,CAAc,WAAd,EAA2B,EAA3B,CAAhB;AACD;;AAED,QAAIC,cAAc,GAAG/B,UAAU,EAAEe,WAAW,GAAG,EAAd,EAAkBvB,eAAe,CAACuB,WAAD,EAAc,GAAGQ,MAAH,CAAUlB,SAAV,EAAqB,gBAArB,CAAd,EAAsDM,QAAtD,CAAjC,EAAkGnB,eAAe,CAACuB,WAAD,EAAc,GAAGQ,MAAH,CAAUlB,SAAV,EAAqB,gBAArB,CAAd,EAAsD,CAACsB,aAAvD,CAAjH,EAAwLZ,WAA1L,EAA/B;AACA,WAAO,aAAahB,KAAK,CAACa,aAAN,CAAoBX,GAApB,EAAyBtB,QAAQ,CAAC,EAAD,EAAKyC,cAAL,EAAqB;AACxEK,MAAAA,SAAS,EAAED;AAD6D,KAArB,CAAjC,EAEhB,aAAazB,KAAK,CAACa,aAAN,CAAoB,OAApB,EAA6B;AAC5CL,MAAAA,OAAO,EAAEA,OADmC;AAE5CkB,MAAAA,SAAS,EAAEM,cAFiC;AAG5CC,MAAAA,KAAK,EAAE,OAAO1B,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC;AAHC,KAA7B,EAIdoB,aAJc,CAFG,CAApB;AAOD,GA9BmB,CAApB;AA+BD,CAxCD;;AA0CA,eAAevB,aAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Col from '../grid/col';\nimport { FormContext } from './context';\n\nvar FormItemLabel = function FormItemLabel(_ref) {\n  var prefixCls = _ref.prefixCls,\n      label = _ref.label,\n      htmlFor = _ref.htmlFor,\n      labelCol = _ref.labelCol,\n      labelAlign = _ref.labelAlign,\n      colon = _ref.colon,\n      required = _ref.required;\n  if (!label) return null;\n  return /*#__PURE__*/React.createElement(FormContext.Consumer, {\n    key: \"label\"\n  }, function (_ref2) {\n    var _classNames;\n\n    var vertical = _ref2.vertical,\n        contextLabelAlign = _ref2.labelAlign,\n        contextLabelCol = _ref2.labelCol,\n        contextColon = _ref2.colon;\n    var mergedLabelCol = labelCol || contextLabelCol || {};\n    var mergedLabelAlign = labelAlign || contextLabelAlign;\n    var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n    var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.className);\n    var labelChildren = label; // Keep label is original where there should have no colon\n\n    var computedColon = colon === true || contextColon !== false && colon !== false;\n    var haveColon = computedColon && !vertical; // Remove duplicated user input colon\n\n    if (haveColon && typeof label === 'string' && label.trim() !== '') {\n      labelChildren = label.replace(/[:|：]\\s*$/, '');\n    }\n\n    var labelClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames));\n    return /*#__PURE__*/React.createElement(Col, _extends({}, mergedLabelCol, {\n      className: labelColClassName\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlFor,\n      className: labelClassName,\n      title: typeof label === 'string' ? label : ''\n    }, labelChildren));\n  });\n};\n\nexport default FormItemLabel;"]},"metadata":{},"sourceType":"module"}