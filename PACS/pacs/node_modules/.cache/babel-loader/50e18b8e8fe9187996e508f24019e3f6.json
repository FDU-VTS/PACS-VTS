{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _includes from 'lodash/includes';\nimport _get from 'lodash/get';\nimport _invoke from 'lodash/invoke';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { cloneElement, Component } from 'react';\nimport { META, normalizeTransitionDuration, SUI, useKeyOnly } from '../../lib';\nimport TransitionGroup from './TransitionGroup';\nvar TRANSITION_TYPE = {\n  ENTERING: 'show',\n  EXITING: 'hide'\n  /**\n   * A transition is an animation usually used to move content in or out of view.\n   */\n\n};\n\nvar Transition = function (_Component) {\n  _inherits(Transition, _Component);\n\n  function Transition() {\n    var _ref;\n\n    _classCallCheck(this, Transition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Transition.__proto__ || Object.getPrototypeOf(Transition)).call.apply(_ref, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    var _this$computeInitialS = _this.computeInitialStatuses(),\n        status = _this$computeInitialS.initial,\n        next = _this$computeInitialS.next;\n\n    _this.nextStatus = next;\n    _this.state = {\n      status: status\n    };\n    return _this;\n  } // ----------------------------------------\n  // Lifecycle\n  // ----------------------------------------\n\n\n  _createClass(Transition, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.mounted = true;\n      this.updateStatus();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _computeStatuses = this.computeStatuses(nextProps),\n          status = _computeStatuses.current,\n          next = _computeStatuses.next;\n\n      this.nextStatus = next;\n      if (status) this.setSafeState({\n        status: status\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.updateStatus();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    } // ----------------------------------------\n    // Callback handling\n    // ----------------------------------------\n    // ----------------------------------------\n    // Helpers\n    // ----------------------------------------\n\n  }, {\n    key: 'render',\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n    value: function render() {\n      var children = this.props.children;\n      var status = this.state.status;\n      if (status === Transition.UNMOUNTED) return null;\n      return cloneElement(children, {\n        className: this.computeClasses(),\n        style: this.computeStyle()\n      });\n    }\n  }]);\n\n  return Transition;\n}(Component);\n\nTransition.defaultProps = {\n  animation: 'fade',\n  duration: 500,\n  visible: true,\n  mountOnShow: true,\n  transitionOnMount: false,\n  unmountOnHide: false\n};\nTransition._meta = {\n  name: 'Transition',\n  type: META.TYPES.MODULE\n};\nTransition.ENTERED = 'ENTERED';\nTransition.ENTERING = 'ENTERING';\nTransition.EXITED = 'EXITED';\nTransition.EXITING = 'EXITING';\nTransition.UNMOUNTED = 'UNMOUNTED';\nTransition.Group = TransitionGroup;\nTransition.handledProps = ['animation', 'children', 'duration', 'mountOnShow', 'onComplete', 'onHide', 'onShow', 'onStart', 'reactKey', 'transitionOnMount', 'unmountOnHide', 'visible'];\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handleStart = function () {\n    var duration = _this2.props.duration;\n    var status = _this2.nextStatus;\n    _this2.nextStatus = null;\n\n    _this2.setSafeState({\n      status: status,\n      animating: true\n    }, function () {\n      var durationType = TRANSITION_TYPE[status];\n      var durationValue = normalizeTransitionDuration(duration, durationType);\n\n      _invoke(_this2.props, 'onStart', null, _extends({}, _this2.props, {\n        status: status\n      }));\n\n      setTimeout(_this2.handleComplete, durationValue);\n    });\n  };\n\n  this.handleComplete = function () {\n    var current = _this2.state.status;\n\n    _invoke(_this2.props, 'onComplete', null, _extends({}, _this2.props, {\n      status: current\n    }));\n\n    if (_this2.nextStatus) {\n      _this2.handleStart();\n\n      return;\n    }\n\n    var status = _this2.computeCompletedStatus();\n\n    var callback = current === Transition.ENTERING ? 'onShow' : 'onHide';\n\n    _this2.setSafeState({\n      status: status,\n      animating: false\n    }, function () {\n      _invoke(_this2.props, callback, null, _extends({}, _this2.props, {\n        status: status\n      }));\n    });\n  };\n\n  this.updateStatus = function () {\n    var animating = _this2.state.animating;\n\n    if (_this2.nextStatus) {\n      _this2.nextStatus = _this2.computeNextStatus();\n      if (!animating) _this2.handleStart();\n    }\n  };\n\n  this.computeClasses = function () {\n    var _props = _this2.props,\n        animation = _props.animation,\n        children = _props.children;\n    var _state = _this2.state,\n        animating = _state.animating,\n        status = _state.status;\n\n    var childClasses = _get(children, 'props.className');\n\n    var directional = _includes(SUI.DIRECTIONAL_TRANSITIONS, animation);\n\n    if (directional) {\n      return cx(animation, childClasses, useKeyOnly(animating, 'animating'), useKeyOnly(status === Transition.ENTERING, 'in'), useKeyOnly(status === Transition.EXITING, 'out'), useKeyOnly(status === Transition.EXITED, 'hidden'), useKeyOnly(status !== Transition.EXITED, 'visible'), 'transition');\n    }\n\n    return cx(animation, childClasses, useKeyOnly(animating, 'animating transition'));\n  };\n\n  this.computeCompletedStatus = function () {\n    var unmountOnHide = _this2.props.unmountOnHide;\n    var status = _this2.state.status;\n    if (status === Transition.ENTERING) return Transition.ENTERED;\n    return unmountOnHide ? Transition.UNMOUNTED : Transition.EXITED;\n  };\n\n  this.computeInitialStatuses = function () {\n    var _props2 = _this2.props,\n        visible = _props2.visible,\n        mountOnShow = _props2.mountOnShow,\n        transitionOnMount = _props2.transitionOnMount,\n        unmountOnHide = _props2.unmountOnHide;\n\n    if (visible) {\n      if (transitionOnMount) {\n        return {\n          initial: Transition.EXITED,\n          next: Transition.ENTERING\n        };\n      }\n\n      return {\n        initial: Transition.ENTERED\n      };\n    }\n\n    if (mountOnShow || unmountOnHide) return {\n      initial: Transition.UNMOUNTED\n    };\n    return {\n      initial: Transition.EXITED\n    };\n  };\n\n  this.computeNextStatus = function () {\n    var _state2 = _this2.state,\n        animating = _state2.animating,\n        status = _state2.status;\n    if (animating) return status === Transition.ENTERING ? Transition.EXITING : Transition.ENTERING;\n    return status === Transition.ENTERED ? Transition.EXITING : Transition.ENTERING;\n  };\n\n  this.computeStatuses = function (props) {\n    var status = _this2.state.status;\n    var visible = props.visible;\n\n    if (visible) {\n      return {\n        current: status === Transition.UNMOUNTED && Transition.EXITED,\n        next: status !== Transition.ENTERING && status !== Transition.ENTERED && Transition.ENTERING\n      };\n    }\n\n    return {\n      next: (status === Transition.ENTERING || status === Transition.ENTERED) && Transition.EXITING\n    };\n  };\n\n  this.computeStyle = function () {\n    var _props3 = _this2.props,\n        children = _props3.children,\n        duration = _props3.duration;\n    var status = _this2.state.status;\n\n    var childStyle = _get(children, 'props.style');\n\n    var type = TRANSITION_TYPE[status];\n    var animationDuration = type && normalizeTransitionDuration(duration, type) + 'ms';\n    return _extends({}, childStyle, {\n      animationDuration: animationDuration\n    });\n  };\n\n  this.setSafeState = function () {\n    return _this2.mounted && _this2.setState.apply(_this2, arguments);\n  };\n};\n\nexport default Transition;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Named animation event to used. Must be defined in CSS. */\n  animation: PropTypes.oneOf(SUI.TRANSITIONS),\n\n  /** Primary content. */\n  children: PropTypes.element.isRequired,\n\n  /** Duration of the CSS transition animation in milliseconds. */\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    hide: PropTypes.number,\n    show: PropTypes.number\n  }), PropTypes.string]),\n\n  /** Show the component; triggers the enter or exit animation. */\n  visible: PropTypes.bool,\n\n  /** Wait until the first \"enter\" transition to mount the component (add it to the DOM). */\n  mountOnShow: PropTypes.bool,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onComplete: PropTypes.func,\n\n  /**\n   * Callback on each transition that changes visibility to hidden.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * Callback on animation start.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onStart: PropTypes.func,\n\n  /** React's key of the element. */\n  reactKey: PropTypes.string,\n\n  /** Run the enter animation when the component mounts, if it is initially shown. */\n  transitionOnMount: PropTypes.bool,\n\n  /** Unmount the component (remove it from the DOM) when it is not shown. */\n  unmountOnHide: PropTypes.bool\n} : {};","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/modules/Transition/Transition.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","_includes","_get","_invoke","cx","PropTypes","cloneElement","Component","META","normalizeTransitionDuration","SUI","useKeyOnly","TransitionGroup","TRANSITION_TYPE","ENTERING","EXITING","Transition","_Component","_ref","_len","arguments","length","args","Array","_key","_this","__proto__","Object","getPrototypeOf","call","apply","concat","_initialiseProps","_this$computeInitialS","computeInitialStatuses","status","initial","next","nextStatus","state","key","value","componentDidMount","mounted","updateStatus","componentWillReceiveProps","nextProps","_computeStatuses","computeStatuses","current","setSafeState","componentDidUpdate","componentWillUnmount","render","children","props","UNMOUNTED","className","computeClasses","style","computeStyle","defaultProps","animation","duration","visible","mountOnShow","transitionOnMount","unmountOnHide","_meta","name","type","TYPES","MODULE","ENTERED","EXITED","Group","handledProps","_this2","handleStart","animating","durationType","durationValue","setTimeout","handleComplete","computeCompletedStatus","callback","computeNextStatus","_props","_state","childClasses","directional","DIRECTIONAL_TRANSITIONS","_props2","_state2","_props3","childStyle","animationDuration","setState","propTypes","process","env","NODE_ENV","oneOf","TRANSITIONS","element","isRequired","oneOfType","number","shape","hide","show","string","bool","onComplete","func","onHide","onShow","onStart","reactKey"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _includes from 'lodash/includes';\nimport _get from 'lodash/get';\nimport _invoke from 'lodash/invoke';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport { cloneElement, Component } from 'react';\n\nimport { META, normalizeTransitionDuration, SUI, useKeyOnly } from '../../lib';\nimport TransitionGroup from './TransitionGroup';\n\nvar TRANSITION_TYPE = {\n  ENTERING: 'show',\n  EXITING: 'hide'\n\n  /**\n   * A transition is an animation usually used to move content in or out of view.\n   */\n};\nvar Transition = function (_Component) {\n  _inherits(Transition, _Component);\n\n  function Transition() {\n    var _ref;\n\n    _classCallCheck(this, Transition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Transition.__proto__ || Object.getPrototypeOf(Transition)).call.apply(_ref, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    var _this$computeInitialS = _this.computeInitialStatuses(),\n        status = _this$computeInitialS.initial,\n        next = _this$computeInitialS.next;\n\n    _this.nextStatus = next;\n    _this.state = { status: status };\n    return _this;\n  }\n\n  // ----------------------------------------\n  // Lifecycle\n  // ----------------------------------------\n\n  _createClass(Transition, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n\n      this.mounted = true;\n      this.updateStatus();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _computeStatuses = this.computeStatuses(nextProps),\n          status = _computeStatuses.current,\n          next = _computeStatuses.next;\n\n      this.nextStatus = next;\n      if (status) this.setSafeState({ status: status });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n\n      this.updateStatus();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n\n      this.mounted = false;\n    }\n\n    // ----------------------------------------\n    // Callback handling\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Helpers\n    // ----------------------------------------\n\n  }, {\n    key: 'render',\n\n\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n\n    value: function render() {\n      var children = this.props.children;\n      var status = this.state.status;\n\n\n      if (status === Transition.UNMOUNTED) return null;\n      return cloneElement(children, {\n        className: this.computeClasses(),\n        style: this.computeStyle()\n      });\n    }\n  }]);\n\n  return Transition;\n}(Component);\n\nTransition.defaultProps = {\n  animation: 'fade',\n  duration: 500,\n  visible: true,\n  mountOnShow: true,\n  transitionOnMount: false,\n  unmountOnHide: false\n};\nTransition._meta = {\n  name: 'Transition',\n  type: META.TYPES.MODULE\n};\nTransition.ENTERED = 'ENTERED';\nTransition.ENTERING = 'ENTERING';\nTransition.EXITED = 'EXITED';\nTransition.EXITING = 'EXITING';\nTransition.UNMOUNTED = 'UNMOUNTED';\nTransition.Group = TransitionGroup;\nTransition.handledProps = ['animation', 'children', 'duration', 'mountOnShow', 'onComplete', 'onHide', 'onShow', 'onStart', 'reactKey', 'transitionOnMount', 'unmountOnHide', 'visible'];\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handleStart = function () {\n    var duration = _this2.props.duration;\n\n    var status = _this2.nextStatus;\n\n    _this2.nextStatus = null;\n    _this2.setSafeState({ status: status, animating: true }, function () {\n      var durationType = TRANSITION_TYPE[status];\n      var durationValue = normalizeTransitionDuration(duration, durationType);\n\n      _invoke(_this2.props, 'onStart', null, _extends({}, _this2.props, { status: status }));\n      setTimeout(_this2.handleComplete, durationValue);\n    });\n  };\n\n  this.handleComplete = function () {\n    var current = _this2.state.status;\n\n\n    _invoke(_this2.props, 'onComplete', null, _extends({}, _this2.props, { status: current }));\n\n    if (_this2.nextStatus) {\n      _this2.handleStart();\n      return;\n    }\n\n    var status = _this2.computeCompletedStatus();\n    var callback = current === Transition.ENTERING ? 'onShow' : 'onHide';\n\n    _this2.setSafeState({ status: status, animating: false }, function () {\n      _invoke(_this2.props, callback, null, _extends({}, _this2.props, { status: status }));\n    });\n  };\n\n  this.updateStatus = function () {\n    var animating = _this2.state.animating;\n\n\n    if (_this2.nextStatus) {\n      _this2.nextStatus = _this2.computeNextStatus();\n      if (!animating) _this2.handleStart();\n    }\n  };\n\n  this.computeClasses = function () {\n    var _props = _this2.props,\n        animation = _props.animation,\n        children = _props.children;\n    var _state = _this2.state,\n        animating = _state.animating,\n        status = _state.status;\n\n\n    var childClasses = _get(children, 'props.className');\n    var directional = _includes(SUI.DIRECTIONAL_TRANSITIONS, animation);\n\n    if (directional) {\n      return cx(animation, childClasses, useKeyOnly(animating, 'animating'), useKeyOnly(status === Transition.ENTERING, 'in'), useKeyOnly(status === Transition.EXITING, 'out'), useKeyOnly(status === Transition.EXITED, 'hidden'), useKeyOnly(status !== Transition.EXITED, 'visible'), 'transition');\n    }\n\n    return cx(animation, childClasses, useKeyOnly(animating, 'animating transition'));\n  };\n\n  this.computeCompletedStatus = function () {\n    var unmountOnHide = _this2.props.unmountOnHide;\n    var status = _this2.state.status;\n\n\n    if (status === Transition.ENTERING) return Transition.ENTERED;\n    return unmountOnHide ? Transition.UNMOUNTED : Transition.EXITED;\n  };\n\n  this.computeInitialStatuses = function () {\n    var _props2 = _this2.props,\n        visible = _props2.visible,\n        mountOnShow = _props2.mountOnShow,\n        transitionOnMount = _props2.transitionOnMount,\n        unmountOnHide = _props2.unmountOnHide;\n\n\n    if (visible) {\n      if (transitionOnMount) {\n        return {\n          initial: Transition.EXITED,\n          next: Transition.ENTERING\n        };\n      }\n      return { initial: Transition.ENTERED };\n    }\n\n    if (mountOnShow || unmountOnHide) return { initial: Transition.UNMOUNTED };\n    return { initial: Transition.EXITED };\n  };\n\n  this.computeNextStatus = function () {\n    var _state2 = _this2.state,\n        animating = _state2.animating,\n        status = _state2.status;\n\n\n    if (animating) return status === Transition.ENTERING ? Transition.EXITING : Transition.ENTERING;\n    return status === Transition.ENTERED ? Transition.EXITING : Transition.ENTERING;\n  };\n\n  this.computeStatuses = function (props) {\n    var status = _this2.state.status;\n    var visible = props.visible;\n\n\n    if (visible) {\n      return {\n        current: status === Transition.UNMOUNTED && Transition.EXITED,\n        next: status !== Transition.ENTERING && status !== Transition.ENTERED && Transition.ENTERING\n      };\n    }\n\n    return {\n      next: (status === Transition.ENTERING || status === Transition.ENTERED) && Transition.EXITING\n    };\n  };\n\n  this.computeStyle = function () {\n    var _props3 = _this2.props,\n        children = _props3.children,\n        duration = _props3.duration;\n    var status = _this2.state.status;\n\n\n    var childStyle = _get(children, 'props.style');\n    var type = TRANSITION_TYPE[status];\n    var animationDuration = type && normalizeTransitionDuration(duration, type) + 'ms';\n\n    return _extends({}, childStyle, { animationDuration: animationDuration });\n  };\n\n  this.setSafeState = function () {\n    return _this2.mounted && _this2.setState.apply(_this2, arguments);\n  };\n};\n\nexport default Transition;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Named animation event to used. Must be defined in CSS. */\n  animation: PropTypes.oneOf(SUI.TRANSITIONS),\n\n  /** Primary content. */\n  children: PropTypes.element.isRequired,\n\n  /** Duration of the CSS transition animation in milliseconds. */\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    hide: PropTypes.number,\n    show: PropTypes.number\n  }), PropTypes.string]),\n\n  /** Show the component; triggers the enter or exit animation. */\n  visible: PropTypes.bool,\n\n  /** Wait until the first \"enter\" transition to mount the component (add it to the DOM). */\n  mountOnShow: PropTypes.bool,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onComplete: PropTypes.func,\n\n  /**\n   * Callback on each transition that changes visibility to hidden.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * Callback on animation start.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onStart: PropTypes.func,\n\n  /** React's key of the element. */\n  reactKey: PropTypes.string,\n\n  /** Run the enter animation when the component mounts, if it is initially shown. */\n  transitionOnMount: PropTypes.bool,\n\n  /** Unmount the component (remove it from the DOM) when it is not shown. */\n  unmountOnHide: PropTypes.bool\n} : {};"]},"metadata":{},"sourceType":"module"}