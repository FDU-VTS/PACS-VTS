{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n/**\n * A modal can contain content.\n */\n\nfunction ModalContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      image = props.image,\n      scrolling = props.scrolling;\n  var classes = cx(className, useKeyOnly(image, 'image'), useKeyOnly(scrolling, 'scrolling'), 'content');\n  var rest = getUnhandledProps(ModalContent, props);\n  var ElementType = getElementType(ModalContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nModalContent.handledProps = ['as', 'children', 'className', 'content', 'image', 'scrolling'];\nModalContent._meta = {\n  name: 'ModalContent',\n  type: META.TYPES.MODULE,\n  parent: 'Modal'\n};\nModalContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A modal can contain image content. */\n  image: PropTypes.bool,\n\n  /** A modal can use the entire size of the screen. */\n  scrolling: PropTypes.bool\n} : {};\nModalContent.create = createShorthandFactory(ModalContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ModalContent;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/modules/Modal/ModalContent.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","ModalContent","props","children","className","content","image","scrolling","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","type","TYPES","MODULE","parent","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","bool","create"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,eAAhD,EAAiEC,cAAjE,EAAiFC,iBAAjF,EAAoGC,IAApG,EAA0GC,UAA1G,QAA4H,WAA5H;AAEA;;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,KAAK,GAAGJ,KAAK,CAACI,KAHlB;AAAA,MAIIC,SAAS,GAAGL,KAAK,CAACK,SAJtB;AAOA,MAAIC,OAAO,GAAGjB,EAAE,CAACa,SAAD,EAAYJ,UAAU,CAACM,KAAD,EAAQ,OAAR,CAAtB,EAAwCN,UAAU,CAACO,SAAD,EAAY,WAAZ,CAAlD,EAA4E,SAA5E,CAAhB;AACA,MAAIE,IAAI,GAAGX,iBAAiB,CAACG,YAAD,EAAeC,KAAf,CAA5B;AACA,MAAIQ,WAAW,GAAGb,cAAc,CAACI,YAAD,EAAeC,KAAf,CAAhC;AAEA,SAAOT,KAAK,CAACkB,aAAN,CACLD,WADK,EAELpB,QAAQ,CAAC,EAAD,EAAKmB,IAAL,EAAW;AAAEL,IAAAA,SAAS,EAAEI;AAAb,GAAX,CAFH,EAGLd,aAAa,CAACkB,KAAd,CAAoBT,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDF,YAAY,CAACY,YAAb,GAA4B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,OAA3C,EAAoD,WAApD,CAA5B;AACAZ,YAAY,CAACa,KAAb,GAAqB;AACnBC,EAAAA,IAAI,EAAE,cADa;AAEnBC,EAAAA,IAAI,EAAEjB,IAAI,CAACkB,KAAL,CAAWC,MAFE;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;AAMAlB,YAAY,CAACmB,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/D;AACAC,EAAAA,EAAE,EAAE5B,eAAe,CAAC4B,EAF2C;;AAI/D;AACArB,EAAAA,QAAQ,EAAEX,SAAS,CAACiC,IAL2C;;AAO/D;AACArB,EAAAA,SAAS,EAAEZ,SAAS,CAACkC,MAR0C;;AAU/D;AACArB,EAAAA,OAAO,EAAET,eAAe,CAAC+B,gBAXsC;;AAa/D;AACArB,EAAAA,KAAK,EAAEd,SAAS,CAACoC,IAd8C;;AAgB/D;AACArB,EAAAA,SAAS,EAAEf,SAAS,CAACoC;AAjB0C,CAAxC,GAkBrB,EAlBJ;AAoBA3B,YAAY,CAAC4B,MAAb,GAAsBlC,sBAAsB,CAACM,YAAD,EAAe,UAAUI,OAAV,EAAmB;AAC5E,SAAO;AAAEA,IAAAA,OAAO,EAAEA;AAAX,GAAP;AACD,CAF2C,CAA5C;AAIA,eAAeJ,YAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\n * A modal can contain content.\n */\nfunction ModalContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      image = props.image,\n      scrolling = props.scrolling;\n\n\n  var classes = cx(className, useKeyOnly(image, 'image'), useKeyOnly(scrolling, 'scrolling'), 'content');\n  var rest = getUnhandledProps(ModalContent, props);\n  var ElementType = getElementType(ModalContent, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nModalContent.handledProps = ['as', 'children', 'className', 'content', 'image', 'scrolling'];\nModalContent._meta = {\n  name: 'ModalContent',\n  type: META.TYPES.MODULE,\n  parent: 'Modal'\n};\n\nModalContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A modal can contain image content. */\n  image: PropTypes.bool,\n\n  /** A modal can use the entire size of the screen. */\n  scrolling: PropTypes.bool\n} : {};\n\nModalContent.create = createShorthandFactory(ModalContent, function (content) {\n  return { content: content };\n});\n\nexport default ModalContent;"]},"metadata":{},"sourceType":"module"}