{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * TODO: 4.0\n * - remove `dataSource`\n * - `size` not work with customizeInput\n * - customizeInput not feedback `ENTER` key since accessibility enhancement\n */\n\n\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { isValidElement } from '../_util/reactNode';\nvar Option = Select.Option;\nvar InternalSelect = Select;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children);\n  var selectRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return selectRef.current;\n  }); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    customizeInput = childNodes[0];\n  }\n\n  var getInputElement = function getInputElement() {\n    return customizeInput;\n  }; // ============================ Options ============================\n\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n      }\n    }) : [];\n  } // ============================ Warning ============================\n\n\n  React.useEffect(function () {\n    devWarning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n    devWarning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(InternalSelect, _extends({\n      ref: selectRef\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      className: classNames(className, \"\".concat(prefixCls, \"-auto-complete\")),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS-VTS/PACS/pacs/node_modules/antd/es/auto-complete/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_typeof","obj","Symbol","iterator","constructor","React","toArray","classNames","omit","Select","ConfigConsumer","devWarning","isValidElement","Option","InternalSelect","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","customizePrefixCls","prefixCls","className","children","dataSource","childNodes","selectRef","useRef","useImperativeHandle","current","customizeInput","getInputElement","optionChildren","map","item","createElement","value","optionValue","text","Error","useEffect","_ref","getPrefixCls","concat","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * TODO: 4.0\n * - remove `dataSource`\n * - `size` not work with customizeInput\n * - customizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { isValidElement } from '../_util/reactNode';\nvar Option = Select.Option;\nvar InternalSelect = Select;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children);\n  var selectRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return selectRef.current;\n  }); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    customizeInput = childNodes[0];\n  }\n\n  var getInputElement = function getInputElement() {\n    return customizeInput;\n  }; // ============================ Options ============================\n\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n      }\n    }) : [];\n  } // ============================ Warning ============================\n\n\n  React.useEffect(function () {\n    devWarning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n    devWarning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(InternalSelect, _extends({\n      ref: selectRef\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      className: classNames(className, \"\".concat(prefixCls, \"-auto-complete\")),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;"]},"metadata":{},"sourceType":"module"}