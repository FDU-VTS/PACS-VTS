{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport { Children, Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { TYPES } from '../../lib/META';\n/**\n * This component exposes a callback prop that always returns the DOM node of both functional and class component\n * children.\n */\n\nvar Ref = function (_Component) {\n  _inherits(Ref, _Component);\n\n  function Ref() {\n    _classCallCheck(this, Ref);\n\n    return _possibleConstructorReturn(this, (Ref.__proto__ || Object.getPrototypeOf(Ref)).apply(this, arguments));\n  }\n\n  _createClass(Ref, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var innerRef = this.props.innerRef; // Heads up! Don't move this condition, it's a short circuit that avoids run of `findDOMNode`\n      // if `innerRef` isn't passed\n      // eslint-disable-next-line react/no-find-dom-node\n\n      if (innerRef) innerRef(findDOMNode(this));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return Children.only(children);\n    }\n  }]);\n\n  return Ref;\n}(Component);\n\nRef._meta = {\n  name: 'Ref',\n  type: TYPES.ADDON\n};\nRef.handledProps = ['children', 'innerRef'];\nexport default Ref;\nRef.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Primary content. */\n  children: PropTypes.element,\n\n  /**\n   * Called when componentDidMount.\n   *\n   * @param {HTMLElement} node - Referred node.\n   */\n  innerRef: PropTypes.func\n} : {};","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/addons/Ref/Ref.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","PropTypes","Children","Component","findDOMNode","TYPES","Ref","_Component","__proto__","Object","getPrototypeOf","apply","arguments","key","value","componentDidMount","innerRef","props","render","children","only","_meta","name","type","ADDON","handledProps","propTypes","process","env","NODE_ENV","element","func"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,sCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AAEA;;;;;AAKA,IAAIC,GAAG,GAAG,UAAUC,UAAV,EAAsB;AAC9BP,EAAAA,SAAS,CAACM,GAAD,EAAMC,UAAN,CAAT;;AAEA,WAASD,GAAT,GAAe;AACbT,IAAAA,eAAe,CAAC,IAAD,EAAOS,GAAP,CAAf;;AAEA,WAAOP,0BAA0B,CAAC,IAAD,EAAO,CAACO,GAAG,CAACE,SAAJ,IAAiBC,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,CAAlB,EAA8CK,KAA9C,CAAoD,IAApD,EAA0DC,SAA1D,CAAP,CAAjC;AACD;;AAEDd,EAAAA,YAAY,CAACQ,GAAD,EAAM,CAAC;AACjBO,IAAAA,GAAG,EAAE,mBADY;AAEjBC,IAAAA,KAAK,EAAE,SAASC,iBAAT,GAA6B;AAClC,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B,CADkC,CAGlC;AACA;AACA;;AAEA,UAAIA,QAAJ,EAAcA,QAAQ,CAACZ,WAAW,CAAC,IAAD,CAAZ,CAAR;AACf;AAVgB,GAAD,EAWf;AACDS,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASI,MAAT,GAAkB;AACvB,UAAIC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AAGA,aAAOjB,QAAQ,CAACkB,IAAT,CAAcD,QAAd,CAAP;AACD;AAPA,GAXe,CAAN,CAAZ;;AAqBA,SAAOb,GAAP;AACD,CA/BS,CA+BRH,SA/BQ,CAAV;;AAiCAG,GAAG,CAACe,KAAJ,GAAY;AACVC,EAAAA,IAAI,EAAE,KADI;AAEVC,EAAAA,IAAI,EAAElB,KAAK,CAACmB;AAFF,CAAZ;AAIAlB,GAAG,CAACmB,YAAJ,GAAmB,CAAC,UAAD,EAAa,UAAb,CAAnB;AACA,eAAenB,GAAf;AACAA,GAAG,CAACoB,SAAJ,GAAgBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACtD;AACAV,EAAAA,QAAQ,EAAElB,SAAS,CAAC6B,OAFkC;;AAItD;;;;;AAKAd,EAAAA,QAAQ,EAAEf,SAAS,CAAC8B;AATkC,CAAxC,GAUZ,EAVJ","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport { Children, Component } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport { TYPES } from '../../lib/META';\n\n/**\n * This component exposes a callback prop that always returns the DOM node of both functional and class component\n * children.\n */\n\nvar Ref = function (_Component) {\n  _inherits(Ref, _Component);\n\n  function Ref() {\n    _classCallCheck(this, Ref);\n\n    return _possibleConstructorReturn(this, (Ref.__proto__ || Object.getPrototypeOf(Ref)).apply(this, arguments));\n  }\n\n  _createClass(Ref, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var innerRef = this.props.innerRef;\n\n      // Heads up! Don't move this condition, it's a short circuit that avoids run of `findDOMNode`\n      // if `innerRef` isn't passed\n      // eslint-disable-next-line react/no-find-dom-node\n\n      if (innerRef) innerRef(findDOMNode(this));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return Children.only(children);\n    }\n  }]);\n\n  return Ref;\n}(Component);\n\nRef._meta = {\n  name: 'Ref',\n  type: TYPES.ADDON\n};\nRef.handledProps = ['children', 'innerRef'];\nexport default Ref;\nRef.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Primary content. */\n  children: PropTypes.element,\n\n  /**\n   * Called when componentDidMount.\n   *\n   * @param {HTMLElement} node - Referred node.\n   */\n  innerRef: PropTypes.func\n} : {};"]},"metadata":{},"sourceType":"module"}