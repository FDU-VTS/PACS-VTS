{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  if (!childrenUtils.isNil(content)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content);\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = ['as', 'centered', 'children', 'className', 'content', 'doubling', 'items', 'itemsPerRow', 'stackable', 'textAlign'];\nCardGroup._meta = {\n  name: 'CardGroup',\n  parent: 'Card',\n  type: META.TYPES.VIEW\n};\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js"],"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useTextAlignProp","useWidthProp","Card","CardGroup","props","centered","children","className","content","doubling","items","itemsPerRow","stackable","textAlign","classes","rest","ElementType","isNil","createElement","itemsJSX","item","key","header","description","join","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","bool","node","string","contentShorthand","collectionShorthand","oneOf","WIDTHS","TEXT_ALIGNMENTS"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n\n/**\n * A group of cards.\n */\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n\n\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    children\n  );\n  if (!childrenUtils.isNil(content)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    content\n  );\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({ key: key }, item));\n  });\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    itemsJSX\n  );\n}\n\nCardGroup.handledProps = ['as', 'centered', 'children', 'className', 'content', 'doubling', 'items', 'itemsPerRow', 'stackable', 'textAlign'];\nCardGroup._meta = {\n  name: 'CardGroup',\n  parent: 'Card',\n  type: META.TYPES.VIEW\n};\n\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\n\nexport default CardGroup;"]},"metadata":{},"sourceType":"module"}