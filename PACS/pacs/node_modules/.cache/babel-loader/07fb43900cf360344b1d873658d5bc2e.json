{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Dropdown} />.\n * @see Dropdown\n * @see Form\n */\n\nfunction FormDropdown(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormDropdown, props);\n  var ElementType = getElementType(FormDropdown, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormDropdown.handledProps = ['as', 'control'];\nFormDropdown._meta = {\n  name: 'FormDropdown',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\nFormDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormDropdown.defaultProps = {\n  as: FormField,\n  control: Dropdown\n};\nexport default FormDropdown;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/collections/Form/FormDropdown.js"],"names":["_extends","React","customPropTypes","getElementType","getUnhandledProps","META","Dropdown","FormField","FormDropdown","props","control","rest","ElementType","createElement","handledProps","_meta","name","parent","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,EAA6DC,IAA7D,QAAyE,WAAzE;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;;;;;;AAKA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AAEA,MAAIC,IAAI,GAAGP,iBAAiB,CAACI,YAAD,EAAeC,KAAf,CAA5B;AACA,MAAIG,WAAW,GAAGT,cAAc,CAACK,YAAD,EAAeC,KAAf,CAAhC;AAEA,SAAOR,KAAK,CAACY,aAAN,CAAoBD,WAApB,EAAiCZ,QAAQ,CAAC,EAAD,EAAKW,IAAL,EAAW;AAAED,IAAAA,OAAO,EAAEA;AAAX,GAAX,CAAzC,CAAP;AACD;;AAEDF,YAAY,CAACM,YAAb,GAA4B,CAAC,IAAD,EAAO,SAAP,CAA5B;AACAN,YAAY,CAACO,KAAb,GAAqB;AACnBC,EAAAA,IAAI,EAAE,cADa;AAEnBC,EAAAA,MAAM,EAAE,MAFW;AAGnBC,EAAAA,IAAI,EAAEb,IAAI,CAACc,KAAL,CAAWC;AAHE,CAArB;AAMAZ,YAAY,CAACa,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/D;AACAC,EAAAA,EAAE,EAAEvB,eAAe,CAACuB,EAF2C;;AAI/D;AACAf,EAAAA,OAAO,EAAEH,SAAS,CAACc,SAAV,CAAoBX;AALkC,CAAxC,GAMrB,EANJ;AAQAF,YAAY,CAACkB,YAAb,GAA4B;AAC1BD,EAAAA,EAAE,EAAElB,SADsB;AAE1BG,EAAAA,OAAO,EAAEJ;AAFiB,CAA5B;AAKA,eAAeE,YAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\n\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n\n/**\n * Sugar for <Form.Field control={Dropdown} />.\n * @see Dropdown\n * @see Form\n */\nfunction FormDropdown(props) {\n  var control = props.control;\n\n  var rest = getUnhandledProps(FormDropdown, props);\n  var ElementType = getElementType(FormDropdown, props);\n\n  return React.createElement(ElementType, _extends({}, rest, { control: control }));\n}\n\nFormDropdown.handledProps = ['as', 'control'];\nFormDropdown._meta = {\n  name: 'FormDropdown',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\n\nFormDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\n\nFormDropdown.defaultProps = {\n  as: FormField,\n  control: Dropdown\n};\n\nexport default FormDropdown;"]},"metadata":{},"sourceType":"module"}