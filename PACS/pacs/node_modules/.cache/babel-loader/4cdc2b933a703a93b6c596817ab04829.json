{"ast":null,"code":"import _startsWith from 'lodash/fp/startsWith';\nimport _has from 'lodash/fp/has';\nimport _eq from 'lodash/fp/eq';\nimport _flow from 'lodash/fp/flow';\nimport _curry from 'lodash/fp/curry';\nimport _get from 'lodash/fp/get';\nimport _includes from 'lodash/fp/includes';\nimport _values from 'lodash/fp/values';\nexport var TYPES = {\n  ADDON: 'addon',\n  BEHAVIOR: 'behavior',\n  COLLECTION: 'collection',\n  ELEMENT: 'element',\n  VIEW: 'view',\n  MODULE: 'module'\n};\n\nvar TYPE_VALUES = _values(TYPES);\n/**\n * Determine if an object qualifies as a META object.\n * It must have the required keys and valid values.\n * @private\n * @param {Object} _meta A proposed component _meta object.\n * @returns {Boolean}\n */\n\n\nexport var isMeta = function isMeta(_meta) {\n  return _includes(_get('type', _meta), TYPE_VALUES);\n};\n/**\n * Extract a component's _meta object and optional key.\n * Handles literal _meta objects, classes with _meta, objects with _meta\n * @private\n * @param {function|object} metaArg A class, a component instance, or meta object..\n * @returns {object|string|undefined}\n */\n\nvar getMeta = function getMeta(metaArg) {\n  // literal\n  if (isMeta(metaArg)) return metaArg; // from prop\n  else if (isMeta(_get('_meta', metaArg))) return metaArg._meta; // from class\n    else if (isMeta(_get('constructor._meta', metaArg))) return metaArg.constructor._meta;\n};\n\nvar metaHasKeyValue = _curry(function (key, val, metaArg) {\n  return _flow(getMeta, _get(key), _eq(val))(metaArg);\n});\n\nexport var isType = metaHasKeyValue('type'); // ----------------------------------------\n// Export\n// ----------------------------------------\n// type\n\nexport var isAddon = isType(TYPES.ADDON);\nexport var isCollection = isType(TYPES.COLLECTION);\nexport var isElement = isType(TYPES.ELEMENT);\nexport var isView = isType(TYPES.VIEW);\nexport var isModule = isType(TYPES.MODULE); // parent\n\nexport var isParent = _flow(getMeta, _has('parent'), _eq(false));\nexport var isChild = _flow(getMeta, _has('parent')); // other\n\nexport var isPrivate = _flow(getMeta, _get('name'), _startsWith('_'));","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/lib/META.js"],"names":["_startsWith","_has","_eq","_flow","_curry","_get","_includes","_values","TYPES","ADDON","BEHAVIOR","COLLECTION","ELEMENT","VIEW","MODULE","TYPE_VALUES","isMeta","_meta","getMeta","metaArg","constructor","metaHasKeyValue","key","val","isType","isAddon","isCollection","isElement","isView","isModule","isParent","isChild","isPrivate"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAGA,OAAO,IAAIC,KAAK,GAAG;AACjBC,EAAAA,KAAK,EAAE,OADU;AAEjBC,EAAAA,QAAQ,EAAE,UAFO;AAGjBC,EAAAA,UAAU,EAAE,YAHK;AAIjBC,EAAAA,OAAO,EAAE,SAJQ;AAKjBC,EAAAA,IAAI,EAAE,MALW;AAMjBC,EAAAA,MAAM,EAAE;AANS,CAAZ;;AASP,IAAIC,WAAW,GAAGR,OAAO,CAACC,KAAD,CAAzB;AAEA;;;;;;;;;AAOA,OAAO,IAAIQ,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,SAAOX,SAAS,CAACD,IAAI,CAAC,MAAD,EAASY,KAAT,CAAL,EAAsBF,WAAtB,CAAhB;AACD,CAFM;AAIP;;;;;;;;AAOA,IAAIG,OAAO,GAAG,SAASA,OAAT,CAAiBC,OAAjB,EAA0B;AACtC;AACA,MAAIH,MAAM,CAACG,OAAD,CAAV,EAAqB,OAAOA,OAAP,CAArB,CAEA;AAFA,OAGK,IAAIH,MAAM,CAACX,IAAI,CAAC,OAAD,EAAUc,OAAV,CAAL,CAAV,EAAoC,OAAOA,OAAO,CAACF,KAAf,CAApC,CAEH;AAFG,SAGE,IAAID,MAAM,CAACX,IAAI,CAAC,mBAAD,EAAsBc,OAAtB,CAAL,CAAV,EAAgD,OAAOA,OAAO,CAACC,WAAR,CAAoBH,KAA3B;AACxD,CATD;;AAWA,IAAII,eAAe,GAAGjB,MAAM,CAAC,UAAUkB,GAAV,EAAeC,GAAf,EAAoBJ,OAApB,EAA6B;AACxD,SAAOhB,KAAK,CAACe,OAAD,EAAUb,IAAI,CAACiB,GAAD,CAAd,EAAqBpB,GAAG,CAACqB,GAAD,CAAxB,CAAL,CAAoCJ,OAApC,CAAP;AACD,CAF2B,CAA5B;;AAGA,OAAO,IAAIK,MAAM,GAAGH,eAAe,CAAC,MAAD,CAA5B,C,CAEP;AACA;AACA;AAEA;;AACA,OAAO,IAAII,OAAO,GAAGD,MAAM,CAAChB,KAAK,CAACC,KAAP,CAApB;AACP,OAAO,IAAIiB,YAAY,GAAGF,MAAM,CAAChB,KAAK,CAACG,UAAP,CAAzB;AACP,OAAO,IAAIgB,SAAS,GAAGH,MAAM,CAAChB,KAAK,CAACI,OAAP,CAAtB;AACP,OAAO,IAAIgB,MAAM,GAAGJ,MAAM,CAAChB,KAAK,CAACK,IAAP,CAAnB;AACP,OAAO,IAAIgB,QAAQ,GAAGL,MAAM,CAAChB,KAAK,CAACM,MAAP,CAArB,C,CAEP;;AACA,OAAO,IAAIgB,QAAQ,GAAG3B,KAAK,CAACe,OAAD,EAAUjB,IAAI,CAAC,QAAD,CAAd,EAA0BC,GAAG,CAAC,KAAD,CAA7B,CAApB;AACP,OAAO,IAAI6B,OAAO,GAAG5B,KAAK,CAACe,OAAD,EAAUjB,IAAI,CAAC,QAAD,CAAd,CAAnB,C,CAEP;;AACA,OAAO,IAAI+B,SAAS,GAAG7B,KAAK,CAACe,OAAD,EAAUb,IAAI,CAAC,MAAD,CAAd,EAAwBL,WAAW,CAAC,GAAD,CAAnC,CAArB","sourcesContent":["import _startsWith from 'lodash/fp/startsWith';\nimport _has from 'lodash/fp/has';\nimport _eq from 'lodash/fp/eq';\nimport _flow from 'lodash/fp/flow';\nimport _curry from 'lodash/fp/curry';\nimport _get from 'lodash/fp/get';\nimport _includes from 'lodash/fp/includes';\nimport _values from 'lodash/fp/values';\n\n\nexport var TYPES = {\n  ADDON: 'addon',\n  BEHAVIOR: 'behavior',\n  COLLECTION: 'collection',\n  ELEMENT: 'element',\n  VIEW: 'view',\n  MODULE: 'module'\n};\n\nvar TYPE_VALUES = _values(TYPES);\n\n/**\n * Determine if an object qualifies as a META object.\n * It must have the required keys and valid values.\n * @private\n * @param {Object} _meta A proposed component _meta object.\n * @returns {Boolean}\n */\nexport var isMeta = function isMeta(_meta) {\n  return _includes(_get('type', _meta), TYPE_VALUES);\n};\n\n/**\n * Extract a component's _meta object and optional key.\n * Handles literal _meta objects, classes with _meta, objects with _meta\n * @private\n * @param {function|object} metaArg A class, a component instance, or meta object..\n * @returns {object|string|undefined}\n */\nvar getMeta = function getMeta(metaArg) {\n  // literal\n  if (isMeta(metaArg)) return metaArg;\n\n  // from prop\n  else if (isMeta(_get('_meta', metaArg))) return metaArg._meta;\n\n    // from class\n    else if (isMeta(_get('constructor._meta', metaArg))) return metaArg.constructor._meta;\n};\n\nvar metaHasKeyValue = _curry(function (key, val, metaArg) {\n  return _flow(getMeta, _get(key), _eq(val))(metaArg);\n});\nexport var isType = metaHasKeyValue('type');\n\n// ----------------------------------------\n// Export\n// ----------------------------------------\n\n// type\nexport var isAddon = isType(TYPES.ADDON);\nexport var isCollection = isType(TYPES.COLLECTION);\nexport var isElement = isType(TYPES.ELEMENT);\nexport var isView = isType(TYPES.VIEW);\nexport var isModule = isType(TYPES.MODULE);\n\n// parent\nexport var isParent = _flow(getMeta, _has('parent'), _eq(false));\nexport var isChild = _flow(getMeta, _has('parent'));\n\n// other\nexport var isPrivate = _flow(getMeta, _get('name'), _startsWith('_'));"]},"metadata":{},"sourceType":"module"}