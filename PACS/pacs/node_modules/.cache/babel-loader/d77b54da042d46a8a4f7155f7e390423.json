{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A dropdown menu can contain a header.\n */\n\nfunction DropdownHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(DropdownHeader, props);\n  var ElementType = getElementType(DropdownHeader, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nDropdownHeader.handledProps = ['as', 'children', 'className', 'content', 'icon'];\nDropdownHeader._meta = {\n  name: 'DropdownHeader',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE\n};\nDropdownHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function) */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for Icon. */\n  icon: customPropTypes.itemShorthand\n} : {};\nDropdownHeader.create = createShorthandFactory(DropdownHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default DropdownHeader;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownHeader.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","META","Icon","DropdownHeader","props","children","className","content","icon","classes","rest","ElementType","isNil","createElement","create","handledProps","_meta","name","parent","type","TYPES","MODULE","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","itemShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,eAAhD,EAAiEC,cAAjE,EAAiFC,iBAAjF,EAAoGC,IAApG,QAAgH,WAAhH;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA;;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;AAMA,MAAIC,OAAO,GAAGhB,EAAE,CAAC,QAAD,EAAWa,SAAX,CAAhB;AACA,MAAII,IAAI,GAAGV,iBAAiB,CAACG,cAAD,EAAiBC,KAAjB,CAA5B;AACA,MAAIO,WAAW,GAAGZ,cAAc,CAACI,cAAD,EAAiBC,KAAjB,CAAhC;AAEA,MAAI,CAACR,aAAa,CAACgB,KAAd,CAAoBP,QAApB,CAAL,EAAoC,OAAOV,KAAK,CAACkB,aAAN,CACzCF,WADyC,EAEzCnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;AAAEJ,IAAAA,SAAS,EAAEG;AAAb,GAAX,CAFiC,EAGzCJ,QAHyC,CAAP;AAMpC,SAAOV,KAAK,CAACkB,aAAN,CACLF,WADK,EAELnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;AAAEJ,IAAAA,SAAS,EAAEG;AAAb,GAAX,CAFH,EAGLP,IAAI,CAACY,MAAL,CAAYN,IAAZ,CAHK,EAILD,OAJK,CAAP;AAMD;;AAEDJ,cAAc,CAACY,YAAf,GAA8B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,CAA9B;AACAZ,cAAc,CAACa,KAAf,GAAuB;AACrBC,EAAAA,IAAI,EAAE,gBADe;AAErBC,EAAAA,MAAM,EAAE,UAFa;AAGrBC,EAAAA,IAAI,EAAElB,IAAI,CAACmB,KAAL,CAAWC;AAHI,CAAvB;AAMAlB,cAAc,CAACmB,SAAf,GAA2BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACjE;AACAC,EAAAA,EAAE,EAAE5B,eAAe,CAAC4B,EAF6C;;AAIjE;AACArB,EAAAA,QAAQ,EAAEX,SAAS,CAACiC,IAL6C;;AAOjE;AACArB,EAAAA,SAAS,EAAEZ,SAAS,CAACkC,MAR4C;;AAUjE;AACArB,EAAAA,OAAO,EAAET,eAAe,CAAC+B,gBAXwC;;AAajE;AACArB,EAAAA,IAAI,EAAEV,eAAe,CAACgC;AAd2C,CAAxC,GAevB,EAfJ;AAiBA3B,cAAc,CAACW,MAAf,GAAwBjB,sBAAsB,CAACM,cAAD,EAAiB,UAAUI,OAAV,EAAmB;AAChF,SAAO;AAAEA,IAAAA,OAAO,EAAEA;AAAX,GAAP;AACD,CAF6C,CAA9C;AAIA,eAAeJ,cAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Icon from '../../elements/Icon';\n\n/**\n * A dropdown menu can contain a header.\n */\nfunction DropdownHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n\n\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(DropdownHeader, props);\n  var ElementType = getElementType(DropdownHeader, props);\n\n  if (!childrenUtils.isNil(children)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    children\n  );\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    Icon.create(icon),\n    content\n  );\n}\n\nDropdownHeader.handledProps = ['as', 'children', 'className', 'content', 'icon'];\nDropdownHeader._meta = {\n  name: 'DropdownHeader',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE\n};\n\nDropdownHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function) */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for Icon. */\n  icon: customPropTypes.itemShorthand\n} : {};\n\nDropdownHeader.create = createShorthandFactory(DropdownHeader, function (content) {\n  return { content: content };\n});\n\nexport default DropdownHeader;"]},"metadata":{},"sourceType":"module"}