{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Handle virtual list of the TreeNodes.\n */\n\n\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar noop = function noop() {};\n\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\n\nexport function getMinimumRangeTransitionRange(list, height, itemHeight) {\n  if (!height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item) {\n  var key = item.data.key,\n      pos = item.pos;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n\n  return path;\n}\n\nvar RefNodeList = function RefNodeList(props, ref) {\n  var prefixCls = props.prefixCls,\n      data = props.data,\n      selectable = props.selectable,\n      checkable = props.checkable,\n      expandedKeys = props.expandedKeys,\n      selectedKeys = props.selectedKeys,\n      checkedKeys = props.checkedKeys,\n      loadedKeys = props.loadedKeys,\n      loadingKeys = props.loadingKeys,\n      halfCheckedKeys = props.halfCheckedKeys,\n      keyEntities = props.keyEntities,\n      disabled = props.disabled,\n      dragging = props.dragging,\n      dragOverNodeKey = props.dragOverNodeKey,\n      dropPosition = props.dropPosition,\n      motion = props.motion,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      focusable = props.focusable,\n      activeItem = props.activeItem,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onActiveChange = props.onActiveChange,\n      onListChangeStart = props.onListChangeStart,\n      onListChangeEnd = props.onListChangeEnd,\n      domProps = _objectWithoutProperties(props, [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"]); // =============================== Ref ================================\n\n\n  var listRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      }\n    };\n  }); // ============================== Motion ==============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      disableVirtual = _React$useState2[0],\n      setDisableVirtual = _React$useState2[1];\n\n  var _React$useState3 = React.useState(expandedKeys),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevExpandedKeys = _React$useState4[0],\n      setPrevExpandedKeys = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      prevData = _React$useState6[0],\n      setPrevData = _React$useState6[1];\n\n  var _React$useState7 = React.useState(data),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      transitionData = _React$useState8[0],\n      setTransitionData = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      transitionRange = _React$useState10[0],\n      setTransitionRange = _React$useState10[1];\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      motionType = _React$useState12[0],\n      setMotionType = _React$useState12[1];\n\n  function onMotionEnd() {\n    setPrevData(data);\n    setTransitionData(data);\n    setTransitionRange([]);\n    setMotionType(null);\n    setDisableVirtual(false);\n    onListChangeEnd();\n  } // Do animation if expanded keys changed\n\n\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.data.key;\n          return key === diffExpanded.key;\n        });\n        if (motion) setDisableVirtual(true);\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === diffExpanded.key;\n        });\n\n        if (motion) setDisableVirtual(true);\n\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), height, itemHeight);\n\n        var _newTransitionData = data.slice();\n\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      } // Trigger when `motion` provided\n\n\n      if (motion) {\n        onListChangeStart();\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]); // We should clean up motion if is changed by dragging\n\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return React.createElement(React.Fragment, null, focused && activeItem && React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), React.createElement(\"div\", {\n    role: \"tree\"\n  }, React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop\n  })), React.createElement(VirtualList, Object.assign({}, domProps, {\n    disabled: disableVirtual,\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    onSkipRender: onMotionEnd,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n        _treeNode$data = treeNode.data,\n        key = _treeNode$data.key,\n        restProps = _objectWithoutProperties(_treeNode$data, [\"key\"]),\n        isStart = treeNode.isStart,\n        isEnd = treeNode.isEnd;\n\n    var mergedKey = getKey(key, pos);\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return React.createElement(MotionTreeNode, Object.assign({}, restProps, treeNodeProps, {\n      active: activeItem && key === activeItem.data.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n};\n\nvar NodeList = React.forwardRef(RefNodeList);\nNodeList.displayName = 'NodeList';\nexport default NodeList;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS-VTS/PACS/pacs/node_modules/rc-tree/es/NodeList.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","VirtualList","MotionTreeNode","findExpandedKeys","getExpandRange","getTreeNodeProps","getKey","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","noop","MOTION_KEY","concat","Math","random","MotionNode","MotionEntity","level","index","pos","node","MotionFlattenData","parent","children","data","isStart","isEnd","getMinimumRangeTransitionRange","list","itemHeight","ceil","itemKey","item","getAccessibilityPath","path","String","current","RefNodeList","props","ref","prefixCls","selectable","checkable","expandedKeys","selectedKeys","checkedKeys","loadedKeys","loadingKeys","halfCheckedKeys","keyEntities","disabled","dragging","dragOverNodeKey","dropPosition","motion","virtual","focusable","activeItem","focused","tabIndex","onKeyDown","onFocus","onBlur","onActiveChange","onListChangeStart","onListChangeEnd","domProps","listRef","useRef","useImperativeHandle","scrollTo","scroll","_React$useState","useState","_React$useState2","disableVirtual","setDisableVirtual","_React$useState3","_React$useState4","prevExpandedKeys","setPrevExpandedKeys","_React$useState5","_React$useState6","prevData","setPrevData","_React$useState7","_React$useState8","transitionData","setTransitionData","_React$useState9","_React$useState10","transitionRange","setTransitionRange","_React$useState11","_React$useState12","motionType","setMotionType","onMotionEnd","useEffect","diffExpanded","add","keyIndex","findIndex","_ref","rangeNodes","newTransitionData","splice","_keyIndex","_ref2","_rangeNodes","_newTransitionData","mergedData","treeNodeRequiredProps","createElement","Fragment","style","role","onChange","assign","fullHeight","onSkipRender","treeNode","_treeNode$data","restProps","mergedKey","treeNodeProps","active","motionNodes","onMouseMove","NodeList","forwardRef","displayName"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgC;AAAE,SAAOC,eAAe,CAACF,GAAD,CAAf,IAAwBG,qBAAqB,CAACH,GAAD,EAAMC,CAAN,CAA7C,IAAyDG,2BAA2B,CAACJ,GAAD,EAAMC,CAAN,CAApF,IAAgGI,gBAAgB,EAAvH;AAA4H;;AAE9J,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAIC,SAAJ,CAAc,2IAAd,CAAN;AAAmK;;AAEjM,SAASF,2BAAT,CAAqCG,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,CAA/B,EAAkCQ,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIL,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACS,WAAxB,EAAqCN,CAAC,GAAGH,CAAC,CAACS,WAAF,CAAcC,IAAlB;AAAwB,MAAIP,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOQ,KAAK,CAACC,IAAN,CAAWZ,CAAX,CAAP;AAAsB,MAAIG,CAAC,KAAK,WAAN,IAAqB,2CAA2CU,IAA3C,CAAgDV,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASC,iBAAT,CAA2BT,GAA3B,EAAgCqB,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGrB,GAAG,CAACsB,MAA7B,EAAqCD,GAAG,GAAGrB,GAAG,CAACsB,MAAV;;AAAkB,OAAK,IAAIrB,CAAC,GAAG,CAAR,EAAWsB,IAAI,GAAG,IAAIL,KAAJ,CAAUG,GAAV,CAAvB,EAAuCpB,CAAC,GAAGoB,GAA3C,EAAgDpB,CAAC,EAAjD,EAAqD;AAAEsB,IAAAA,IAAI,CAACtB,CAAD,CAAJ,GAAUD,GAAG,CAACC,CAAD,CAAb;AAAmB;;AAAC,SAAOsB,IAAP;AAAc;;AAEvL,SAASpB,qBAAT,CAA+BH,GAA/B,EAAoCC,CAApC,EAAuC;AAAE,MAAI,OAAOuB,MAAP,KAAkB,WAAlB,IAAiC,EAAEA,MAAM,CAACC,QAAP,IAAmBd,MAAM,CAACX,GAAD,CAA3B,CAArC,EAAwE;AAAQ,MAAI0B,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;AAAgB,MAAIC,EAAE,GAAGC,SAAT;;AAAoB,MAAI;AAAE,SAAK,IAAIC,EAAE,GAAG/B,GAAG,CAACwB,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCO,EAAtC,EAA0C,EAAEL,EAAE,GAAG,CAACK,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEP,EAAE,GAAG,IAA9E,EAAoF;AAAED,MAAAA,IAAI,CAACS,IAAL,CAAUH,EAAE,CAACI,KAAb;;AAAqB,UAAInC,CAAC,IAAIyB,IAAI,CAACJ,MAAL,KAAgBrB,CAAzB,EAA4B;AAAQ;AAAE,GAAvJ,CAAwJ,OAAOoC,GAAP,EAAY;AAAET,IAAAA,EAAE,GAAG,IAAL;AAAWC,IAAAA,EAAE,GAAGQ,GAAL;AAAW,GAA5L,SAAqM;AAAE,QAAI;AAAE,UAAI,CAACV,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE;;AAAC,SAAOH,IAAP;AAAc;;AAEze,SAASxB,eAAT,CAAyBF,GAAzB,EAA8B;AAAE,MAAIkB,KAAK,CAACoB,OAAN,CAActC,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAErE,SAASuC,wBAAT,CAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AAAE,MAAID,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAIE,MAAM,GAAGC,6BAA6B,CAACH,MAAD,EAASC,QAAT,CAA1C;;AAA8D,MAAIG,GAAJ,EAAS3C,CAAT;;AAAY,MAAIU,MAAM,CAACkC,qBAAX,EAAkC;AAAE,QAAIC,gBAAgB,GAAGnC,MAAM,CAACkC,qBAAP,CAA6BL,MAA7B,CAAvB;;AAA6D,SAAKvC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6C,gBAAgB,CAACxB,MAAjC,EAAyCrB,CAAC,EAA1C,EAA8C;AAAE2C,MAAAA,GAAG,GAAGE,gBAAgB,CAAC7C,CAAD,CAAtB;AAA2B,UAAIwC,QAAQ,CAACM,OAAT,CAAiBH,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAACjC,MAAM,CAACC,SAAP,CAAiBoC,oBAAjB,CAAsClC,IAAtC,CAA2C0B,MAA3C,EAAmDI,GAAnD,CAAL,EAA8D;AAAUF,MAAAA,MAAM,CAACE,GAAD,CAAN,GAAcJ,MAAM,CAACI,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAOF,MAAP;AAAgB;;AAE5e,SAASC,6BAAT,CAAuCH,MAAvC,EAA+CC,QAA/C,EAAyD;AAAE,MAAID,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIE,MAAM,GAAG,EAAb;AAAiB,MAAIO,UAAU,GAAGtC,MAAM,CAACuC,IAAP,CAAYV,MAAZ,CAAjB;AAAsC,MAAII,GAAJ,EAAS3C,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgD,UAAU,CAAC3B,MAA3B,EAAmCrB,CAAC,EAApC,EAAwC;AAAE2C,IAAAA,GAAG,GAAGK,UAAU,CAAChD,CAAD,CAAhB;AAAqB,QAAIwC,QAAQ,CAACM,OAAT,CAAiBH,GAAjB,KAAyB,CAA7B,EAAgC;AAAUF,IAAAA,MAAM,CAACE,GAAD,CAAN,GAAcJ,MAAM,CAACI,GAAD,CAApB;AAA4B;;AAAC,SAAOF,MAAP;AAAgB;AAEnT;;;;;AAGA,OAAO,KAAKS,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;AACA,SAASC,gBAAT,EAA2BC,MAA3B,QAAyC,kBAAzC;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,MAAM,EAAE,CAFS;AAGjBC,EAAAA,OAAO,EAAE,MAHQ;AAIjBC,EAAAA,QAAQ,EAAE,QAJO;AAKjBC,EAAAA,OAAO,EAAE,CALQ;AAMjBC,EAAAA,MAAM,EAAE,CANS;AAOjBC,EAAAA,OAAO,EAAE,CAPQ;AAQjBC,EAAAA,MAAM,EAAE;AARS,CAAnB;;AAWA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;;AAEA,OAAO,IAAIC,UAAU,GAAG,kBAAkBC,MAAlB,CAAyBC,IAAI,CAACC,MAAL,EAAzB,CAAjB;AACP,IAAIC,UAAU,GAAG;AACf5B,EAAAA,GAAG,EAAEwB;AADU,CAAjB;AAGA,OAAO,IAAIK,YAAY,GAAG;AACxB7B,EAAAA,GAAG,EAAEwB,UADmB;AAExBM,EAAAA,KAAK,EAAE,CAFiB;AAGxBC,EAAAA,KAAK,EAAE,CAHiB;AAIxBC,EAAAA,GAAG,EAAE,GAJmB;AAKxBC,EAAAA,IAAI,EAAEL;AALkB,CAAnB;AAOP,IAAIM,iBAAiB,GAAG;AACtBC,EAAAA,MAAM,EAAE,IADc;AAEtBC,EAAAA,QAAQ,EAAE,EAFY;AAGtBJ,EAAAA,GAAG,EAAEH,YAAY,CAACG,GAHI;AAItBK,EAAAA,IAAI,EAAET,UAJgB;;AAMtB;AACAU,EAAAA,OAAO,EAAE,EAPa;AAQtBC,EAAAA,KAAK,EAAE;AARe,CAAxB;AAUA;;;;AAIA,OAAO,SAASC,8BAAT,CAAwCC,IAAxC,EAA8CzB,MAA9C,EAAsD0B,UAAtD,EAAkE;AACvE,MAAI,CAAC1B,MAAL,EAAa;AACX,WAAOyB,IAAP;AACD;;AAED,SAAOA,IAAI,CAACtE,KAAL,CAAW,CAAX,EAAcuD,IAAI,CAACiB,IAAL,CAAU3B,MAAM,GAAG0B,UAAnB,IAAiC,CAA/C,CAAP;AACD;;AAED,SAASE,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAI7C,GAAG,GAAG6C,IAAI,CAACR,IAAL,CAAUrC,GAApB;AAAA,MACIgC,GAAG,GAAGa,IAAI,CAACb,GADf;AAEA,SAAOnB,MAAM,CAACb,GAAD,EAAMgC,GAAN,CAAb;AACD;;AAED,SAASc,oBAAT,CAA8BD,IAA9B,EAAoC;AAClC,MAAIE,IAAI,GAAGC,MAAM,CAACH,IAAI,CAACR,IAAL,CAAUrC,GAAX,CAAjB;AACA,MAAIiD,OAAO,GAAGJ,IAAd;;AAEA,SAAOI,OAAO,CAACd,MAAf,EAAuB;AACrBc,IAAAA,OAAO,GAAGA,OAAO,CAACd,MAAlB;AACAY,IAAAA,IAAI,GAAG,GAAGtB,MAAH,CAAUwB,OAAO,CAACZ,IAAR,CAAarC,GAAvB,EAA4B,KAA5B,EAAmCyB,MAAnC,CAA0CsB,IAA1C,CAAP;AACD;;AAED,SAAOA,IAAP;AACD;;AAED,IAAIG,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;AACjD,MAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AAAA,MACIhB,IAAI,GAAGc,KAAK,CAACd,IADjB;AAAA,MAEIiB,UAAU,GAAGH,KAAK,CAACG,UAFvB;AAAA,MAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;AAAA,MAIIC,YAAY,GAAGL,KAAK,CAACK,YAJzB;AAAA,MAKIC,YAAY,GAAGN,KAAK,CAACM,YALzB;AAAA,MAMIC,WAAW,GAAGP,KAAK,CAACO,WANxB;AAAA,MAOIC,UAAU,GAAGR,KAAK,CAACQ,UAPvB;AAAA,MAQIC,WAAW,GAAGT,KAAK,CAACS,WARxB;AAAA,MASIC,eAAe,GAAGV,KAAK,CAACU,eAT5B;AAAA,MAUIC,WAAW,GAAGX,KAAK,CAACW,WAVxB;AAAA,MAWIC,QAAQ,GAAGZ,KAAK,CAACY,QAXrB;AAAA,MAYIC,QAAQ,GAAGb,KAAK,CAACa,QAZrB;AAAA,MAaIC,eAAe,GAAGd,KAAK,CAACc,eAb5B;AAAA,MAcIC,YAAY,GAAGf,KAAK,CAACe,YAdzB;AAAA,MAeIC,MAAM,GAAGhB,KAAK,CAACgB,MAfnB;AAAA,MAgBInD,MAAM,GAAGmC,KAAK,CAACnC,MAhBnB;AAAA,MAiBI0B,UAAU,GAAGS,KAAK,CAACT,UAjBvB;AAAA,MAkBI0B,OAAO,GAAGjB,KAAK,CAACiB,OAlBpB;AAAA,MAmBIC,SAAS,GAAGlB,KAAK,CAACkB,SAnBtB;AAAA,MAoBIC,UAAU,GAAGnB,KAAK,CAACmB,UApBvB;AAAA,MAqBIC,OAAO,GAAGpB,KAAK,CAACoB,OArBpB;AAAA,MAsBIC,QAAQ,GAAGrB,KAAK,CAACqB,QAtBrB;AAAA,MAuBIC,SAAS,GAAGtB,KAAK,CAACsB,SAvBtB;AAAA,MAwBIC,OAAO,GAAGvB,KAAK,CAACuB,OAxBpB;AAAA,MAyBIC,MAAM,GAAGxB,KAAK,CAACwB,MAzBnB;AAAA,MA0BIC,cAAc,GAAGzB,KAAK,CAACyB,cA1B3B;AAAA,MA2BIC,iBAAiB,GAAG1B,KAAK,CAAC0B,iBA3B9B;AAAA,MA4BIC,eAAe,GAAG3B,KAAK,CAAC2B,eA5B5B;AAAA,MA6BIC,QAAQ,GAAGpF,wBAAwB,CAACwD,KAAD,EAAQ,CAAC,WAAD,EAAc,MAAd,EAAsB,YAAtB,EAAoC,WAApC,EAAiD,cAAjD,EAAiE,cAAjE,EAAiF,aAAjF,EAAgG,YAAhG,EAA8G,aAA9G,EAA6H,iBAA7H,EAAgJ,aAAhJ,EAA+J,UAA/J,EAA2K,UAA3K,EAAuL,iBAAvL,EAA0M,cAA1M,EAA0N,QAA1N,EAAoO,QAApO,EAA8O,YAA9O,EAA4P,SAA5P,EAAuQ,WAAvQ,EAAoR,YAApR,EAAkS,SAAlS,EAA6S,UAA7S,EAAyT,WAAzT,EAAsU,SAAtU,EAAiV,QAAjV,EAA2V,gBAA3V,EAA6W,mBAA7W,EAAkY,iBAAlY,CAAR,CA7BvC,CADiD,CA8BqZ;;;AAGtc,MAAI6B,OAAO,GAAGzE,KAAK,CAAC0E,MAAN,CAAa,IAAb,CAAd;AACA1E,EAAAA,KAAK,CAAC2E,mBAAN,CAA0B9B,GAA1B,EAA+B,YAAY;AACzC,WAAO;AACL+B,MAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AAClCJ,QAAAA,OAAO,CAAC/B,OAAR,CAAgBkC,QAAhB,CAAyBC,MAAzB;AACD;AAHI,KAAP;AAKD,GAND,EAlCiD,CAwC7C;;AAEJ,MAAIC,eAAe,GAAG9E,KAAK,CAAC+E,QAAN,CAAe,KAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAGpI,cAAc,CAACkI,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,cAAc,GAAGD,gBAAgB,CAAC,CAAD,CAFrC;AAAA,MAGIE,iBAAiB,GAAGF,gBAAgB,CAAC,CAAD,CAHxC;;AAKA,MAAIG,gBAAgB,GAAGnF,KAAK,CAAC+E,QAAN,CAAe9B,YAAf,CAAvB;AAAA,MACImC,gBAAgB,GAAGxI,cAAc,CAACuI,gBAAD,EAAmB,CAAnB,CADrC;AAAA,MAEIE,gBAAgB,GAAGD,gBAAgB,CAAC,CAAD,CAFvC;AAAA,MAGIE,mBAAmB,GAAGF,gBAAgB,CAAC,CAAD,CAH1C;;AAKA,MAAIG,gBAAgB,GAAGvF,KAAK,CAAC+E,QAAN,CAAejD,IAAf,CAAvB;AAAA,MACI0D,gBAAgB,GAAG5I,cAAc,CAAC2I,gBAAD,EAAmB,CAAnB,CADrC;AAAA,MAEIE,QAAQ,GAAGD,gBAAgB,CAAC,CAAD,CAF/B;AAAA,MAGIE,WAAW,GAAGF,gBAAgB,CAAC,CAAD,CAHlC;;AAKA,MAAIG,gBAAgB,GAAG3F,KAAK,CAAC+E,QAAN,CAAejD,IAAf,CAAvB;AAAA,MACI8D,gBAAgB,GAAGhJ,cAAc,CAAC+I,gBAAD,EAAmB,CAAnB,CADrC;AAAA,MAEIE,cAAc,GAAGD,gBAAgB,CAAC,CAAD,CAFrC;AAAA,MAGIE,iBAAiB,GAAGF,gBAAgB,CAAC,CAAD,CAHxC;;AAKA,MAAIG,gBAAgB,GAAG/F,KAAK,CAAC+E,QAAN,CAAe,EAAf,CAAvB;AAAA,MACIiB,iBAAiB,GAAGpJ,cAAc,CAACmJ,gBAAD,EAAmB,CAAnB,CADtC;AAAA,MAEIE,eAAe,GAAGD,iBAAiB,CAAC,CAAD,CAFvC;AAAA,MAGIE,kBAAkB,GAAGF,iBAAiB,CAAC,CAAD,CAH1C;;AAKA,MAAIG,iBAAiB,GAAGnG,KAAK,CAAC+E,QAAN,CAAe,IAAf,CAAxB;AAAA,MACIqB,iBAAiB,GAAGxJ,cAAc,CAACuJ,iBAAD,EAAoB,CAApB,CADtC;AAAA,MAEIE,UAAU,GAAGD,iBAAiB,CAAC,CAAD,CAFlC;AAAA,MAGIE,aAAa,GAAGF,iBAAiB,CAAC,CAAD,CAHrC;;AAKA,WAASG,WAAT,GAAuB;AACrBb,IAAAA,WAAW,CAAC5D,IAAD,CAAX;AACAgE,IAAAA,iBAAiB,CAAChE,IAAD,CAAjB;AACAoE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAI,IAAAA,aAAa,CAAC,IAAD,CAAb;AACApB,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAX,IAAAA,eAAe;AAChB,GA/EgD,CA+E/C;;;AAGFvE,EAAAA,KAAK,CAACwG,SAAN,CAAgB,YAAY;AAC1BlB,IAAAA,mBAAmB,CAACrC,YAAD,CAAnB;AACA,QAAIwD,YAAY,GAAGtG,gBAAgB,CAACkF,gBAAD,EAAmBpC,YAAnB,CAAnC;;AAEA,QAAIwD,YAAY,CAAChH,GAAb,KAAqB,IAAzB,EAA+B;AAC7B,UAAIgH,YAAY,CAACC,GAAjB,EAAsB;AACpB,YAAIC,QAAQ,GAAGlB,QAAQ,CAACmB,SAAT,CAAmB,UAAUC,IAAV,EAAgB;AAChD,cAAIpH,GAAG,GAAGoH,IAAI,CAAC/E,IAAL,CAAUrC,GAApB;AACA,iBAAOA,GAAG,KAAKgH,YAAY,CAAChH,GAA5B;AACD,SAHc,CAAf;AAIA,YAAImE,MAAJ,EAAYsB,iBAAiB,CAAC,IAAD,CAAjB;AACZ,YAAI4B,UAAU,GAAG7E,8BAA8B,CAAC7B,cAAc,CAACqF,QAAD,EAAW3D,IAAX,EAAiB2E,YAAY,CAAChH,GAA9B,CAAf,EAAmDgB,MAAnD,EAA2D0B,UAA3D,CAA/C;AACA,YAAI4E,iBAAiB,GAAGtB,QAAQ,CAAC7H,KAAT,EAAxB;AACAmJ,QAAAA,iBAAiB,CAACC,MAAlB,CAAyBL,QAAQ,GAAG,CAApC,EAAuC,CAAvC,EAA0ChF,iBAA1C;AACAmE,QAAAA,iBAAiB,CAACiB,iBAAD,CAAjB;AACAb,QAAAA,kBAAkB,CAACY,UAAD,CAAlB;AACAR,QAAAA,aAAa,CAAC,MAAD,CAAb;AACD,OAZD,MAYO;AACL,YAAIW,SAAS,GAAGnF,IAAI,CAAC8E,SAAL,CAAe,UAAUM,KAAV,EAAiB;AAC9C,cAAIzH,GAAG,GAAGyH,KAAK,CAACpF,IAAN,CAAWrC,GAArB;AACA,iBAAOA,GAAG,KAAKgH,YAAY,CAAChH,GAA5B;AACD,SAHe,CAAhB;;AAKA,YAAImE,MAAJ,EAAYsB,iBAAiB,CAAC,IAAD,CAAjB;;AAEZ,YAAIiC,WAAW,GAAGlF,8BAA8B,CAAC7B,cAAc,CAAC0B,IAAD,EAAO2D,QAAP,EAAiBgB,YAAY,CAAChH,GAA9B,CAAf,EAAmDgB,MAAnD,EAA2D0B,UAA3D,CAAhD;;AAEA,YAAIiF,kBAAkB,GAAGtF,IAAI,CAAClE,KAAL,EAAzB;;AAEAwJ,QAAAA,kBAAkB,CAACJ,MAAnB,CAA0BC,SAAS,GAAG,CAAtC,EAAyC,CAAzC,EAA4CtF,iBAA5C;;AAEAmE,QAAAA,iBAAiB,CAACsB,kBAAD,CAAjB;AACAlB,QAAAA,kBAAkB,CAACiB,WAAD,CAAlB;AACAb,QAAAA,aAAa,CAAC,MAAD,CAAb;AACD,OA9B4B,CA8B3B;;;AAGF,UAAI1C,MAAJ,EAAY;AACVU,QAAAA,iBAAiB;AAClB;AACF,KApCD,MAoCO,IAAImB,QAAQ,KAAK3D,IAAjB,EAAuB;AAC5B;AACA4D,MAAAA,WAAW,CAAC5D,IAAD,CAAX;AACAgE,MAAAA,iBAAiB,CAAChE,IAAD,CAAjB;AACD;AACF,GA7CD,EA6CG,CAACmB,YAAD,EAAenB,IAAf,CA7CH,EAlFiD,CA+HvB;;AAE1B9B,EAAAA,KAAK,CAACwG,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAAC/C,QAAL,EAAe;AACb8C,MAAAA,WAAW;AACZ;AACF,GAJD,EAIG,CAAC9C,QAAD,CAJH;AAKA,MAAI4D,UAAU,GAAGzD,MAAM,GAAGiC,cAAH,GAAoB/D,IAA3C;AACA,MAAIwF,qBAAqB,GAAG;AAC1BrE,IAAAA,YAAY,EAAEA,YADY;AAE1BC,IAAAA,YAAY,EAAEA,YAFY;AAG1BE,IAAAA,UAAU,EAAEA,UAHc;AAI1BC,IAAAA,WAAW,EAAEA,WAJa;AAK1BF,IAAAA,WAAW,EAAEA,WALa;AAM1BG,IAAAA,eAAe,EAAEA,eANS;AAO1BI,IAAAA,eAAe,EAAEA,eAPS;AAQ1BC,IAAAA,YAAY,EAAEA,YARY;AAS1BJ,IAAAA,WAAW,EAAEA;AATa,GAA5B;AAWA,SAAOvD,KAAK,CAACuH,aAAN,CAAoBvH,KAAK,CAACwH,QAA1B,EAAoC,IAApC,EAA0CxD,OAAO,IAAID,UAAX,IAAyB/D,KAAK,CAACuH,aAAN,CAAoB,MAApB,EAA4B;AACpGE,IAAAA,KAAK,EAAElH,YAD6F;AAEpG,iBAAa;AAFuF,GAA5B,EAGvEgC,oBAAoB,CAACwB,UAAD,CAHmD,CAAnE,EAG+B/D,KAAK,CAACuH,aAAN,CAAoB,KAApB,EAA2B;AAC/DG,IAAAA,IAAI,EAAE;AADyD,GAA3B,EAEnC1H,KAAK,CAACuH,aAAN,CAAoB,OAApB,EAA6B;AAC9BE,IAAAA,KAAK,EAAElH,YADuB;AAE9BiD,IAAAA,QAAQ,EAAEM,SAAS,KAAK,KAAd,IAAuBN,QAFH;AAG9BS,IAAAA,QAAQ,EAAEH,SAAS,KAAK,KAAd,GAAsBG,QAAtB,GAAiC,IAHb;AAI9BC,IAAAA,SAAS,EAAEA,SAJmB;AAK9BC,IAAAA,OAAO,EAAEA,OALqB;AAM9BC,IAAAA,MAAM,EAAEA,MANsB;AAO9BnF,IAAAA,KAAK,EAAE,EAPuB;AAQ9B0I,IAAAA,QAAQ,EAAE3G;AARoB,GAA7B,CAFmC,CAH/B,EAcFhB,KAAK,CAACuH,aAAN,CAAoBtH,WAApB,EAAiCzC,MAAM,CAACoK,MAAP,CAAc,EAAd,EAAkBpD,QAAlB,EAA4B;AAChEhB,IAAAA,QAAQ,EAAEyB,cADsD;AAEhEnD,IAAAA,IAAI,EAAEuF,UAF0D;AAGhEhF,IAAAA,OAAO,EAAEA,OAHuD;AAIhE5B,IAAAA,MAAM,EAAEA,MAJwD;AAKhEoH,IAAAA,UAAU,EAAE,KALoD;AAMhEhE,IAAAA,OAAO,EAAEA,OANuD;AAOhE1B,IAAAA,UAAU,EAAEA,UAPoD;AAQhE2F,IAAAA,YAAY,EAAEvB,WARkD;AAShEzD,IAAAA,SAAS,EAAE,GAAG5B,MAAH,CAAU4B,SAAV,EAAqB,OAArB,CATqD;AAUhED,IAAAA,GAAG,EAAE4B;AAV2D,GAA5B,CAAjC,EAWD,UAAUsD,QAAV,EAAoB;AACtB,QAAItG,GAAG,GAAGsG,QAAQ,CAACtG,GAAnB;AAAA,QACIuG,cAAc,GAAGD,QAAQ,CAACjG,IAD9B;AAAA,QAEIrC,GAAG,GAAGuI,cAAc,CAACvI,GAFzB;AAAA,QAGIwI,SAAS,GAAG7I,wBAAwB,CAAC4I,cAAD,EAAiB,CAAC,KAAD,CAAjB,CAHxC;AAAA,QAIIjG,OAAO,GAAGgG,QAAQ,CAAChG,OAJvB;AAAA,QAKIC,KAAK,GAAG+F,QAAQ,CAAC/F,KALrB;;AAOA,QAAIkG,SAAS,GAAG5H,MAAM,CAACb,GAAD,EAAMgC,GAAN,CAAtB;AACA,WAAOwG,SAAS,CAACpG,QAAjB;AACA,QAAIsG,aAAa,GAAG9H,gBAAgB,CAAC6H,SAAD,EAAYZ,qBAAZ,CAApC;AACA,WAAOtH,KAAK,CAACuH,aAAN,CAAoBrH,cAApB,EAAoC1C,MAAM,CAACoK,MAAP,CAAc,EAAd,EAAkBK,SAAlB,EAA6BE,aAA7B,EAA4C;AACrFC,MAAAA,MAAM,EAAErE,UAAU,IAAItE,GAAG,KAAKsE,UAAU,CAACjC,IAAX,CAAgBrC,GADuC;AAErFgC,MAAAA,GAAG,EAAEA,GAFgF;AAGrFK,MAAAA,IAAI,EAAEiG,QAAQ,CAACjG,IAHsE;AAIrFC,MAAAA,OAAO,EAAEA,OAJ4E;AAKrFC,MAAAA,KAAK,EAAEA,KAL8E;AAMrF4B,MAAAA,MAAM,EAAEA,MAN6E;AAOrFyE,MAAAA,WAAW,EAAE5I,GAAG,KAAKwB,UAAR,GAAqBgF,eAArB,GAAuC,IAPiC;AAQrFI,MAAAA,UAAU,EAAEA,UARyE;AASrFE,MAAAA,WAAW,EAAEA,WATwE;AAUrFe,MAAAA,qBAAqB,EAAEA,qBAV8D;AAWrFgB,MAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClCjE,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AAboF,KAA5C,CAApC,CAAP;AAeD,GArCI,CAdE,CAAP;AAoDD,CAtMD;;AAwMA,IAAIkE,QAAQ,GAAGvI,KAAK,CAACwI,UAAN,CAAiB7F,WAAjB,CAAf;AACA4F,QAAQ,CAACE,WAAT,GAAuB,UAAvB;AACA,eAAeF,QAAf","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Handle virtual list of the TreeNodes.\n */\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar noop = function noop() {};\n\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\n\nexport function getMinimumRangeTransitionRange(list, height, itemHeight) {\n  if (!height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item) {\n  var key = item.data.key,\n      pos = item.pos;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n\n  return path;\n}\n\nvar RefNodeList = function RefNodeList(props, ref) {\n  var prefixCls = props.prefixCls,\n      data = props.data,\n      selectable = props.selectable,\n      checkable = props.checkable,\n      expandedKeys = props.expandedKeys,\n      selectedKeys = props.selectedKeys,\n      checkedKeys = props.checkedKeys,\n      loadedKeys = props.loadedKeys,\n      loadingKeys = props.loadingKeys,\n      halfCheckedKeys = props.halfCheckedKeys,\n      keyEntities = props.keyEntities,\n      disabled = props.disabled,\n      dragging = props.dragging,\n      dragOverNodeKey = props.dragOverNodeKey,\n      dropPosition = props.dropPosition,\n      motion = props.motion,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      focusable = props.focusable,\n      activeItem = props.activeItem,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onActiveChange = props.onActiveChange,\n      onListChangeStart = props.onListChangeStart,\n      onListChangeEnd = props.onListChangeEnd,\n      domProps = _objectWithoutProperties(props, [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"]); // =============================== Ref ================================\n\n\n  var listRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      }\n    };\n  }); // ============================== Motion ==============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      disableVirtual = _React$useState2[0],\n      setDisableVirtual = _React$useState2[1];\n\n  var _React$useState3 = React.useState(expandedKeys),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevExpandedKeys = _React$useState4[0],\n      setPrevExpandedKeys = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      prevData = _React$useState6[0],\n      setPrevData = _React$useState6[1];\n\n  var _React$useState7 = React.useState(data),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      transitionData = _React$useState8[0],\n      setTransitionData = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      transitionRange = _React$useState10[0],\n      setTransitionRange = _React$useState10[1];\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      motionType = _React$useState12[0],\n      setMotionType = _React$useState12[1];\n\n  function onMotionEnd() {\n    setPrevData(data);\n    setTransitionData(data);\n    setTransitionRange([]);\n    setMotionType(null);\n    setDisableVirtual(false);\n    onListChangeEnd();\n  } // Do animation if expanded keys changed\n\n\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.data.key;\n          return key === diffExpanded.key;\n        });\n        if (motion) setDisableVirtual(true);\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === diffExpanded.key;\n        });\n\n        if (motion) setDisableVirtual(true);\n\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), height, itemHeight);\n\n        var _newTransitionData = data.slice();\n\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      } // Trigger when `motion` provided\n\n\n      if (motion) {\n        onListChangeStart();\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]); // We should clean up motion if is changed by dragging\n\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return React.createElement(React.Fragment, null, focused && activeItem && React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), React.createElement(\"div\", {\n    role: \"tree\"\n  }, React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop\n  })), React.createElement(VirtualList, Object.assign({}, domProps, {\n    disabled: disableVirtual,\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    onSkipRender: onMotionEnd,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n        _treeNode$data = treeNode.data,\n        key = _treeNode$data.key,\n        restProps = _objectWithoutProperties(_treeNode$data, [\"key\"]),\n        isStart = treeNode.isStart,\n        isEnd = treeNode.isEnd;\n\n    var mergedKey = getKey(key, pos);\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return React.createElement(MotionTreeNode, Object.assign({}, restProps, treeNodeProps, {\n      active: activeItem && key === activeItem.data.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n};\n\nvar NodeList = React.forwardRef(RefNodeList);\nNodeList.displayName = 'NodeList';\nexport default NodeList;"]},"metadata":{},"sourceType":"module"}