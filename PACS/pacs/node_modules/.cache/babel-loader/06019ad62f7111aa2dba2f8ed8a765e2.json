{"ast":null,"code":"import React from 'react';\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(_ref) {\n  var inputElement = _ref.inputElement,\n      prefixCls = _ref.prefixCls,\n      id = _ref.id,\n      inputRef = _ref.inputRef,\n      disabled = _ref.disabled,\n      autoFocus = _ref.autoFocus,\n      autoComplete = _ref.autoComplete,\n      accessibilityIndex = _ref.accessibilityIndex,\n      mode = _ref.mode,\n      open = _ref.open,\n      values = _ref.values,\n      placeholder = _ref.placeholder,\n      tabIndex = _ref.tabIndex,\n      showSearch = _ref.showSearch,\n      searchValue = _ref.searchValue,\n      activeValue = _ref.activeValue,\n      onInputKeyDown = _ref.onInputKeyDown,\n      onInputMouseDown = _ref.onInputMouseDown,\n      onInputChange = _ref.onInputChange,\n      onInputPaste = _ref.onInputPaste;\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch && open;\n  var item = values[0];\n\n  var getDisplayValue = function getDisplayValue(value) {\n    return value === null ? '' : String(value);\n  };\n\n  var inputValue = searchValue;\n\n  if (combobox) {\n    inputValue = item ? getDisplayValue(item.value) : activeValue || searchValue;\n  } // Not show text when closed expect combobox mode\n\n\n  var hasTextInput = mode !== 'combobox' && !open ? false : !!inputValue;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: onInputChange,\n    onPaste: onInputPaste,\n    tabIndex: tabIndex\n  })), !combobox && item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\")\n  }, item.label), !item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SingleSelector;","map":{"version":3,"sources":["/Users/bly/Documents/工作/实验室/项目/医疗系统/PACS/pacs/node_modules/rc-select/es/Selector/SingleSelector.js"],"names":["React","Input","SingleSelector","_ref","inputElement","prefixCls","id","inputRef","disabled","autoFocus","autoComplete","accessibilityIndex","mode","open","values","placeholder","tabIndex","showSearch","searchValue","activeValue","onInputKeyDown","onInputMouseDown","onInputChange","onInputPaste","combobox","inputEditable","item","getDisplayValue","value","String","inputValue","hasTextInput","createElement","Fragment","className","concat","ref","editable","onKeyDown","onMouseDown","onChange","onPaste","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(_ref) {\n  var inputElement = _ref.inputElement,\n      prefixCls = _ref.prefixCls,\n      id = _ref.id,\n      inputRef = _ref.inputRef,\n      disabled = _ref.disabled,\n      autoFocus = _ref.autoFocus,\n      autoComplete = _ref.autoComplete,\n      accessibilityIndex = _ref.accessibilityIndex,\n      mode = _ref.mode,\n      open = _ref.open,\n      values = _ref.values,\n      placeholder = _ref.placeholder,\n      tabIndex = _ref.tabIndex,\n      showSearch = _ref.showSearch,\n      searchValue = _ref.searchValue,\n      activeValue = _ref.activeValue,\n      onInputKeyDown = _ref.onInputKeyDown,\n      onInputMouseDown = _ref.onInputMouseDown,\n      onInputChange = _ref.onInputChange,\n      onInputPaste = _ref.onInputPaste;\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch && open;\n  var item = values[0];\n\n  var getDisplayValue = function getDisplayValue(value) {\n    return value === null ? '' : String(value);\n  };\n\n  var inputValue = searchValue;\n\n  if (combobox) {\n    inputValue = item ? getDisplayValue(item.value) : activeValue || searchValue;\n  } // Not show text when closed expect combobox mode\n\n\n  var hasTextInput = mode !== 'combobox' && !open ? false : !!inputValue;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: onInputChange,\n    onPaste: onInputPaste,\n    tabIndex: tabIndex\n  })), !combobox && item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\")\n  }, item.label), !item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SingleSelector;"]},"metadata":{},"sourceType":"module"}